------+---------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
 Line | # File         Line | Line Type   | MX |  Reloc  | Size | Address   Object Code |  Source Code                                                      
------+---------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
    1 |  1 asmdemo.s      1 | Comment     | 11 |         |    0 | 00/8000               | * * * * * * * * * * * * * * * * * * * * * * * *
    2 |  1 asmdemo.s      2 | Comment     | 11 |         |    0 | 00/8000               | *  "Hand drawn line" with Graphics Primitives *           
    3 |  1 asmdemo.s      3 | Comment     | 11 |         |    0 | 00/8000               | * * * * * * * * * * * * * * * * * * * * * * * *
    4 |  1 asmdemo.s      4 | Comment     | 11 |         |    0 | 00/8000               | *
    5 |  1 asmdemo.s      5 | Comment     | 11 |         |    0 | 00/8000               | *
    6 |  1 asmdemo.s      6 | Directive   | 11 |         |    0 | 00/8000               |                  put          macros               
    7 |  2  macros.s      1 | Comment     | 11 |         |    0 | 00/8000               | * 
    8 |  2  macros.s      2 | Comment     | 11 |         |    0 | 00/8000               | * * * * MACROS * * * * 
    9 |  2  macros.s      3 | Comment     | 11 |         |    0 | 00/8000               | *
   10 |  2  macros.s      4 | Directive   | 11 |         |    0 | 00/8000               |                  DO           0                    
   11 |  2  macros.s    417 | Directive   | 11 |         |    0 | 00/8000               |                  FIN                               
   12 |  1 asmdemo.s      7 | Directive   | 11 |         |    0 | 00/8000               | GP_call          MAC                               ; call to graphic primitives (macro)
   13 |  1 asmdemo.s      8 | Directive   | 11 |         |    0 | 00/8000               |                  jsr          {$4000}              ; graphic primitives only entry point
   14 |  1 asmdemo.s      9 | Directive   | 11 |         |    0 | 00/8000               |                  dfb          ]1                   ; command ID (1 byte)
   15 |  1 asmdemo.s     10 | Directive   | 11 |         |    0 | 00/8000               |                  da           ]2                   ; address of parameter(s) (2 bytes), 0 if no paramter
   16 |  1 asmdemo.s     11 | Directive   | 11 |         |    0 | 00/8000               |                  EOM                               
   17 |  1 asmdemo.s     12 | Empty       | 11 |         |    0 | 00/8000               |                                                    
   18 |  1 asmdemo.s     13 | Directive   | 11 |         |    0 | 00/8000               |                  org          $800                 
   19 |  1 asmdemo.s     14 | Directive   | 11 |         |    0 | 00/0800               |                  put          equates              ; Graphics Primitives equates
   20 |  3 equates.s      1 | Comment     | 11 |         |    0 | 00/0800               | ;
   21 |  3 equates.s      2 | Comment     | 11 |         |    0 | 00/0800               | ; equate file for interfacing to toolkit/graphics
   22 |  3 equates.s      3 | Comment     | 11 |         |    0 | 00/0800               | ;
   23 |  3 equates.s      4 | Equivalence | 11 |         |    0 | 00/0800               | ToolMLI          equ          $4000                
   24 |  3 equates.s      5 | Equivalence | 11 |         |    0 | 00/0800               | GrafMLI          equ          $4000                
   25 |  3 equates.s      6 | Comment     | 11 |         |    0 | 00/0800               | ;
   26 |  3 equates.s      7 | Comment     | 11 |         |    0 | 00/0800               | ; constants
   27 |  3 equates.s      8 | Comment     | 11 |         |    0 | 00/0800               | ;
   28 |  3 equates.s      9 | Equivalence | 11 |         |    0 | 00/0800               | SrcCopy          equ          0                    
   29 |  3 equates.s     10 | Equivalence | 11 |         |    0 | 00/0800               | SrcOr            equ          1                    
   30 |  3 equates.s     11 | Equivalence | 11 |         |    0 | 00/0800               | SrcXor           equ          2                    
   31 |  3 equates.s     12 | Equivalence | 11 |         |    0 | 00/0800               | SrcBic           equ          3                    
   32 |  3 equates.s     13 | Equivalence | 11 |         |    0 | 00/0800               | SrcNotCopy       equ          4                    
   33 |  3 equates.s     14 | Equivalence | 11 |         |    0 | 00/0800               | SrcNotOr         equ          5                    
   34 |  3 equates.s     15 | Equivalence | 11 |         |    0 | 00/0800               | SrcNotXor        equ          6                    
   35 |  3 equates.s     16 | Equivalence | 11 |         |    0 | 00/0800               | SrcNotBic        equ          7                    
   36 |  3 equates.s     17 | Comment     | 11 |         |    0 | 00/0800               | ;
   37 |  3 equates.s     18 | Comment     | 11 |         |    0 | 00/0800               | ; grafport structure
   38 |  3 equates.s     19 | Comment     | 11 |         |    0 | 00/0800               | ;
   39 |  3 equates.s     20 | Equivalence | 11 |         |    0 | 00/0800               | viewloc          equ          0                    
   40 |  3 equates.s     21 | Equivalence | 11 |         |    0 | 00/0800               | portbits         equ          {0}+4                
   41 |  3 equates.s     22 | Equivalence | 11 |         |    0 | 00/0800               | portwidth        equ          {{0}+4}+2            ; 1 byte for width, the other is reserved.
   42 |  3 equates.s     23 | Equivalence | 11 |         |    0 | 00/0800               | portrect         equ          {{{0}+4}+2}+2        
   43 |  3 equates.s     24 | Equivalence | 11 |         |    0 | 00/0800               | penpat           equ          {{{{0}+4}+2}+2}+8    
   44 |  3 equates.s     25 | Equivalence | 11 |         |    0 | 00/0800               | penloc           equ          {{{{{0}+4}+2}+2}+8}+10
   45 |  3 equates.s     26 | Equivalence | 11 |         |    0 | 00/0800               | pensize          equ          {{{{{{0}+4}+2}+2}+8}+10}+4
   46 |  3 equates.s     27 | Equivalence | 11 |         |    0 | 00/0800               | penmode          equ          {{{{{{{0}+4}+2}+2}+8}+10}+4}+2
   47 |  3 equates.s     28 | Equivalence | 11 |         |    0 | 00/0800               | txback           equ          {{{{{{{{0}+4}+2}+2}+8}+10}+4}+2}+1
   48 |  3 equates.s     29 | Equivalence | 11 |         |    0 | 00/0800               | txfont           equ          {{{{{{{{{0}+4}+2}+2}+8}+10}+4}+2}+1}+1
   49 |  3 equates.s     30 | Comment     | 11 |         |    0 | 00/0800               | ;
   50 |  3 equates.s     31 | Equivalence | 11 |         |    0 | 00/0800               | portlength       equ          {{{{{{{{{{0}+4}+2}+2}+8}+10}+4}+2}+1}+1}+2
   51 |  3 equates.s     32 | Comment     | 11 |         |    0 | 00/0800               | ;
   52 |  3 equates.s     33 | Comment     | 11 |         |    0 | 00/0800               | ;
   53 |  3 equates.s     34 | Comment     | 11 |         |    0 | 00/0800               | ; command numbers
   54 |  3 equates.s     35 | Comment     | 11 |         |    0 | 00/0800               | ;
   55 |  3 equates.s     36 | Equivalence | 11 |         |    0 | 00/0800               | InitGraf         equ          1                    
   56 |  3 equates.s     37 | Equivalence | 11 |         |    0 | 00/0800               | SetSwitches      equ          {1}+1                
   57 |  3 equates.s     38 | Comment     | 11 |         |    0 | 00/0800               | ;
   58 |  3 equates.s     39 | Equivalence | 11 |         |    0 | 00/0800               | InitPort         equ          {{1}+1}+1            
   59 |  3 equates.s     40 | Equivalence | 11 |         |    0 | 00/0800               | SetPort          equ          {{{1}+1}+1}+1        
   60 |  3 equates.s     41 | Equivalence | 11 |         |    0 | 00/0800               | GetPort          equ          {{{{1}+1}+1}+1}+1    
   61 |  3 equates.s     42 | Equivalence | 11 |         |    0 | 00/0800               | SetPortBits      equ          {{{{{1}+1}+1}+1}+1}+1
   62 |  3 equates.s     43 | Equivalence | 11 |         |    0 | 00/0800               | SetPenMode       equ          {{{{{{1}+1}+1}+1}+1}+1}+1
   63 |  3 equates.s     44 | Equivalence | 11 |         |    0 | 00/0800               | SetPattern       equ          {{{{{{{1}+1}+1}+1}+1}+1}+1}+1
   64 |  3 equates.s     45 | Equivalence | 11 |         |    0 | 00/0800               | SetColorFlags    equ          {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1
   65 |  3 equates.s     46 | Equivalence | 11 |         |    0 | 00/0800               | SetPenSize       equ          {{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   66 |  3 equates.s     47 | Equivalence | 11 |         |    0 | 00/0800               | SetFont          equ          {{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   67 |  3 equates.s     48 | Equivalence | 11 |         |    0 | 00/0800               | SetTextBG        equ          {{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   68 |  3 equates.s     49 | Comment     | 11 |         |    0 | 00/0800               | ;
   69 |  3 equates.s     50 | Equivalence | 11 |         |    0 | 00/0800               | Move             equ          {{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   70 |  3 equates.s     51 | Equivalence | 11 |         |    0 | 00/0800               | MoveTo           equ          {{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   71 |  3 equates.s     52 | Equivalence | 11 |         |    0 | 00/0800               | Line             equ          {{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   72 |  3 equates.s     53 | Equivalence | 11 |         |    0 | 00/0800               | LineTo           equ          {{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   73 |  3 equates.s     54 | Equivalence | 11 |         |    0 | 00/0800               | PaintRect        equ          {{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   74 |  3 equates.s     55 | Equivalence | 11 |         |    0 | 00/0800               | FrameRect        equ          {{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   75 |  3 equates.s     56 | Equivalence | 11 |         |    0 | 00/0800               | InRect           equ          {{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   76 |  3 equates.s     57 | Equivalence | 11 |         |    0 | 00/0800               | PaintBits        equ          {{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   77 |  3 equates.s     58 | Equivalence | 11 |         |    0 | 00/0800               | PaintPoly        equ          {{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   78 |  3 equates.s     59 | Equivalence | 11 |         |    0 | 00/0800               | FramePoly        equ          {{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   79 |  3 equates.s     60 | Equivalence | 11 |         |    0 | 00/0800               | InPoly           equ          {{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   80 |  3 equates.s     61 | Comment     | 11 |         |    0 | 00/0800               | ;
   81 |  3 equates.s     62 | Equivalence | 11 |         |    0 | 00/0800               | TextWidth        equ          {{{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   82 |  3 equates.s     63 | Equivalence | 11 |         |    0 | 00/0800               | DrawText         equ          {{{{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   83 |  3 equates.s     64 | Comment     | 11 |         |    0 | 00/0800               | ;
   84 |  3 equates.s     65 | Equivalence | 11 |         |    0 | 00/0800               | SetZP1           equ          {{{{{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   85 |  3 equates.s     66 | Equivalence | 11 |         |    0 | 00/0800               | SetZP2           equ          {{{{{{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   86 |  3 equates.s     67 | Equivalence | 11 |         |    0 | 00/0800               | GetVersion       equ          {{{{{{{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   87 |  3 equates.s     68 | Empty       | 11 |         |    0 | 00/0800               |                                                    
   88 |  3 equates.s     69 | Comment     | 11 |         |    0 | 00/0800               | ; DATA STRUCTURES
   89 |  3 equates.s     70 | Comment     | 11 |         |    0 | 00/0800               | ;
   90 |  3 equates.s     71 | Comment     | 11 |         |    0 | 00/0800               | ; The following data structures are defined as types (Pascal format):
   91 |  3 equates.s     72 | Comment     | 11 |         |    0 | 00/0800               |     ; byte = 0..255;
   92 |  3 equates.s     73 | Empty       | 11 |         |    0 | 00/0800               |                                                    
   93 |  3 equates.s     74 | Comment     | 11 |         |    0 | 00/0800               |     ; bits = packed array (0..7) of boolean;
   94 |  3 equates.s     75 | Empty       | 11 |         |    0 | 00/0800               |                                                    
   95 |  3 equates.s     76 | Comment     | 11 |         |    0 | 00/0800               |     ; pmode = (penCopy, penOr, penXor, penBic, notpenCopy, notpenOr, notpenXor, notpenBic);
   96 |  3 equates.s     77 | Empty       | 11 |         |    0 | 00/0800               |                                                    
   97 |  3 equates.s     78 | Comment     | 11 |         |    0 | 00/0800               |     ; point = record
   98 |  3 equates.s     79 | Comment     | 11 |         |    0 | 00/0800               |         ; x: integer;
   99 |  3 equates.s     80 | Comment     | 11 |         |    0 | 00/0800               |         ; y: integer;
  100 |  3 equates.s     81 | Comment     | 11 |         |    0 | 00/0800               |     ; end;
  101 |  3 equates.s     82 | Empty       | 11 |         |    0 | 00/0800               |                                                    
  102 |  3 equates.s     83 | Comment     | 11 |         |    0 | 00/0800               |     ; rect = record
  103 |  3 equates.s     84 | Comment     | 11 |         |    0 | 00/0800               |         ; case integer of
  104 |  3 equates.s     85 | Comment     | 11 |         |    0 | 00/0800               |         ; 0: (left: integer; top: integer; right: integer; bottom: integer);
  105 |  3 equates.s     86 | Comment     | 11 |         |    0 | 00/0800               |         ; 1: (topleft: point; botright: point);
  106 |  3 equates.s     87 | Empty       | 11 |         |    0 | 00/0800               |                                                    
  107 |  3 equates.s     88 | Comment     | 11 |         |    0 | 00/0800               |     ; maplnfo = packed record
  108 |  3 equates.s     89 | Comment     | 11 |         |    0 | 00/0800               |         ; viewloc: point;
  109 |  3 equates.s     90 | Comment     | 11 |         |    0 | 00/0800               |         ; mspbits: pointer;
  110 |  3 equates.s     91 | Comment     | 11 |         |    0 | 00/0800               |         ; mspwidth: byte;
  111 |  3 equates.s     92 | Comment     | 11 |         |    0 | 00/0800               |         ; reserved: byte;
  112 |  3 equates.s     93 | Comment     | 11 |         |    0 | 00/0800               |         ; maprect: rect;
  113 |  3 equates.s     94 | Comment     | 11 |         |    0 | 00/0800               |     ; end;
  114 |  3 equates.s     95 | Empty       | 11 |         |    0 | 00/0800               |                                                    
  115 |  3 equates.s     96 | Comment     | 11 |         |    0 | 00/0800               |     ; pattern = packed array [1..9] of byte;                ; 1..8 ???
  116 |  3 equates.s     97 | Empty       | 11 |         |    0 | 00/0800               |                                                    
  117 |  3 equates.s     98 | Comment     | 11 |         |    0 | 00/0800               |     ; maskinfo = packed record
  118 |  3 equates.s     99 | Comment     | 11 |         |    0 | 00/0800               |         ; ANDmask: byte;
  119 |  3 equates.s    100 | Comment     | 11 |         |    0 | 00/0800               |         ; ORmask: byte;
  120 |  3 equates.s    101 | Comment     | 11 |         |    0 | 00/0800               |     ; end;
  121 |  3 equates.s    102 | Empty       | 11 |         |    0 | 00/0800               |                                                    
  122 |  3 equates.s    103 | Comment     | 11 |         |    0 | 00/0800               |     ; GrafPort = packed record
  123 |  3 equates.s    104 | Comment     | 11 |         |    0 | 00/0800               |         ; portmap: maplnfo;
  124 |  3 equates.s    105 | Comment     | 11 |         |    0 | 00/0800               |         ; penpattern: pattern;
  125 |  3 equates.s    106 | Comment     | 11 |         |    0 | 00/0800               |         ; colormasks: maskinfo;
  126 |  3 equates.s    107 | Comment     | 11 |         |    0 | 00/0800               |         ; penloc: point;
  127 |  3 equates.s    108 | Comment     | 11 |         |    0 | 00/0800               |         ; penwidth: byte;
  128 |  3 equates.s    109 | Comment     | 11 |         |    0 | 00/0800               |         ; penheight: byte;
  129 |  3 equates.s    110 | Comment     | 11 |         |    0 | 00/0800               |         ; penmode: pmode;
  130 |  3 equates.s    111 | Comment     | 11 |         |    0 | 00/0800               |         ; reserved: 0..31;
  131 |  3 equates.s    112 | Comment     | 11 |         |    0 | 00/0800               |         ; textback: byte;
  132 |  3 equates.s    113 | Comment     | 11 |         |    0 | 00/0800               |         ; textfont: integer;
  133 |  3 equates.s    114 | Comment     | 11 |         |    0 | 00/0800               |     ; end;
  134 |  3 equates.s    115 | Empty       | 11 |         |    0 | 00/0800               |                                                    
  135 |  1 asmdemo.s     15 | Directive   | 11 |         |    0 | 00/0800               |                  put          equ                  ; general Apple II equates
  136 |  4     equ.s      1 | Comment     | 11 |         |    0 | 00/0800               | ************
  137 |  4     equ.s      2 | Comment     | 11 |         |    0 | 00/0800               | ************ ROM routines ************ 
  138 |  4     equ.s      3 | Equivalence | 11 |         |    0 | 00/0800               | home             equ          $FC58                ; clear text screen, reset margins
  139 |  4     equ.s      4 | Equivalence | 11 |         |    0 | 00/0800               | text             equ          $FB2F                ; text mode
  140 |  4     equ.s      5 | Equivalence | 11 |         |    0 | 00/0800               | Bell             equ          $FBDD                ; play a sound
  141 |  4     equ.s      6 | Equivalence | 11 |         |    0 | 00/0800               | cout             equ          $FDED                ; print char in A
  142 |  4     equ.s      7 | Equivalence | 11 |         |    0 | 00/0800               | vtab             equ          $FC22                ; vert. tab, value must be in CV ($25)
  143 |  4     equ.s      8 | Equivalence | 11 |         |    0 | 00/0800               | getln            equ          $FD6A                ; read line of input (=> X = length, buffer = $200)
  144 |  4     equ.s      9 | Equivalence | 11 |         |    0 | 00/0800               | getlnz           equ          $FD67                ; = return + getln
  145 |  4     equ.s     10 | Equivalence | 11 |         |    0 | 00/0800               | getln1           equ          $FD6F                ; = getln without prompt
  146 |  4     equ.s     11 | Equivalence | 11 |         |    0 | 00/0800               | bascalc          equ          $FBC1                ; calc. address of line in A, put address in $28/$29
  147 |  4     equ.s     12 | Equivalence | 11 |         |    0 | 00/0800               | crout            equ          $FD8E                ; print carriage return
  148 |  4     equ.s     13 | Equivalence | 11 |         |    0 | 00/0800               | clreop           equ          $FC42                ; clear from cursor to end of page
  149 |  4     equ.s     14 | Equivalence | 11 |         |    0 | 00/0800               | clreol           equ          $FC9C                ; clear from cursor to end of line
  150 |  4     equ.s     15 | Equivalence | 11 |         |    0 | 00/0800               | prntx            equ          $F944                ; prints X in hex (2 digits)
  151 |  4     equ.s     16 | Equivalence | 11 |         |    0 | 00/0800               | prbyte           equ          $FDDA                ; prints A in hex (2 digits)
  152 |  4     equ.s     17 | Equivalence | 11 |         |    0 | 00/0800               | printax          equ          $F941                ; Prints current contents of the A and X in hex
  153 |  4     equ.s     18 | Equivalence | 11 |         |    0 | 00/0800               | prntyx           equ          $F940                ; Prints current contents of the Y and X in hex
  154 |  4     equ.s     19 | Equivalence | 11 |         |    0 | 00/0800               | rdkey            equ          $FD0C                ; wait for keypress
  155 |  4     equ.s     20 | Equivalence | 11 |         |    0 | 00/0800               | wait             equ          $FCA8                ; monitor delay
  156 |  4     equ.s     21 | Equivalence | 11 |         |    0 | 00/0800               | AUXMOV           equ          $C311                
  157 |  4     equ.s     22 | Equivalence | 11 |         |    0 | 00/0800               | OUTPORT          equ          $FE95                
  158 |  4     equ.s     23 | Equivalence | 11 |         |    0 | 00/0800               | prnxy            equ          $F940                
  159 |  4     equ.s     24 | Equivalence | 11 |         |    0 | 00/0800               | move             equ          $FE2C                
  160 |  4     equ.s     25 | Comment     | 11 |         |    0 | 00/0800               | *
  161 |  4     equ.s     26 | Comment     | 11 |         |    0 | 00/0800               | ************ ROM switches ************  
  162 |  4     equ.s     27 | Equivalence | 11 |         |    0 | 00/0800               | RAMRDON          equ          $C003                ; read aux
  163 |  4     equ.s     28 | Equivalence | 11 |         |    0 | 00/0800               | RAMRDOFF         equ          $C002                ; read main
  164 |  4     equ.s     29 | Equivalence | 11 |         |    0 | 00/0800               | RAMWRTOFF        equ          $C004                ; write to main
  165 |  4     equ.s     30 | Equivalence | 11 |         |    0 | 00/0800               | RAMWRTON         equ          $C005                ; write to aux
  166 |  4     equ.s     31 | Equivalence | 11 |         |    0 | 00/0800               | ALTCHARSET0FF    equ          $C00E                
  167 |  4     equ.s     32 | Equivalence | 11 |         |    0 | 00/0800               | ALTCHARSET0N     equ          $C00F                
  168 |  4     equ.s     33 | Equivalence | 11 |         |    0 | 00/0800               | kbd              equ          $C000                ; ascii code of last key pressed (+ 128 if strobe not cleared)
  169 |  4     equ.s     34 | Equivalence | 11 |         |    0 | 00/0800               | kbdstrb          equ          $C010                
  170 |  4     equ.s     35 | Equivalence | 11 |         |    0 | 00/0800               | col80off         equ          $C00C                
  171 |  4     equ.s     36 | Equivalence | 11 |         |    0 | 00/0800               | col80on          equ          $C00D                
  172 |  4     equ.s     37 | Equivalence | 11 |         |    0 | 00/0800               | 80col            equ          $C01F                
  173 |  4     equ.s     38 | Comment     | 11 |         |    0 | 00/0800               | *
  174 |  4     equ.s     39 | Comment     | 11 |         |    0 | 00/0800               | ************ page 0 ************ 
  175 |  4     equ.s     40 | Equivalence | 11 |         |    0 | 00/0800               | cv               equ          $25                  
  176 |  4     equ.s     41 | Equivalence | 11 |         |    0 | 00/0800               | ch               equ          $24                  
  177 |  4     equ.s     42 | Equivalence | 11 |         |    0 | 00/0800               | basl             equ          $28                  
  178 |  4     equ.s     43 | Equivalence | 11 |         |    0 | 00/0800               | wndlft           equ          $20                  
  179 |  4     equ.s     44 | Equivalence | 11 |         |    0 | 00/0800               | wndwdth          equ          $21                  
  180 |  4     equ.s     45 | Equivalence | 11 |         |    0 | 00/0800               | wndtop           equ          $22                  ; Top Margin (0 - 23, 0 is default, 20 in graphics mode)
  181 |  4     equ.s     46 | Equivalence | 11 |         |    0 | 00/0800               | wndbtm           equ          $23                  
  182 |  4     equ.s     47 | Equivalence | 11 |         |    0 | 00/0800               | prompt           equ          $33                  
  183 |  4     equ.s     48 | Empty       | 11 |         |    0 | 00/0800               |                                                    
  184 |  4     equ.s     49 | Equivalence | 11 |         |    0 | 00/0800               | A1L              equ          $3C                  ; move source start
  185 |  4     equ.s     50 | Equivalence | 11 |         |    0 | 00/0800               | A1H              equ          $3D                  
  186 |  4     equ.s     51 | Equivalence | 11 |         |    0 | 00/0800               | A2L              equ          $3E                  ; move source end
  187 |  4     equ.s     52 | Equivalence | 11 |         |    0 | 00/0800               | A2H              equ          $3F                  
  188 |  4     equ.s     53 | Equivalence | 11 |         |    0 | 00/0800               | A4L              equ          $42                  ; move dest start
  189 |  4     equ.s     54 | Equivalence | 11 |         |    0 | 00/0800               | A4H              equ          $43                  
  190 |  4     equ.s     55 | Comment     | 11 |         |    0 | 00/0800               | *
  191 |  4     equ.s     56 | Equivalence | 11 |         |    0 | 00/0800               | ourch            equ          $57B                 ; Cursor's column position minus 1 (HTAB's place) in 80-column mode
  192 |  4     equ.s     57 | Equivalence | 11 |         |    0 | 00/0800               | ourcv            equ          $5FB                 ; 80 col vertical pos
  193 |  4     equ.s     58 | Comment     | 11 |         |    0 | 00/0800               | *
  194 |  4     equ.s     59 | Comment     | 11 |         |    0 | 00/0800               | ************ ProDOS ************ 
  195 |  4     equ.s     60 | Equivalence | 11 |         |    0 | 00/0800               | GETBUFR          equ          $bef5                
  196 |  4     equ.s     61 | Equivalence | 11 |         |    0 | 00/0800               | FREEBUFR         equ          $BEF8                
  197 |  4     equ.s     62 | Equivalence | 11 |         |    0 | 00/0800               | devnum           equ          $BF30                ; last used device here, format : DSSS0000
  198 |  4     equ.s     63 | Equivalence | 11 |         |    0 | 00/0800               | RSHIMEM          equ          $BEFB                
  199 |  4     equ.s     64 | Comment     | 11 |         |    0 | 00/0800               | *
  200 |  4     equ.s     65 | Comment     | 11 |         |    0 | 00/0800               | ************ MLI calls (ProDOS) ************
  201 |  4     equ.s     66 | Equivalence | 11 |         |    0 | 00/0800               | MLI              equ          $BF00                
  202 |  4     equ.s     67 | Equivalence | 11 |         |    0 | 00/0800               | create           equ          $C0                  
  203 |  4     equ.s     68 | Equivalence | 11 |         |    0 | 00/0800               | destroy          equ          $C1                  
  204 |  4     equ.s     69 | Equivalence | 11 |         |    0 | 00/0800               | online           equ          $C5                  
  205 |  4     equ.s     70 | Equivalence | 11 |         |    0 | 00/0800               | getprefix        equ          $c7                  
  206 |  4     equ.s     71 | Equivalence | 11 |         |    0 | 00/0800               | setprefix        equ          $c6                  
  207 |  4     equ.s     72 | Equivalence | 11 |         |    0 | 00/0800               | open             equ          $C8                  
  208 |  4     equ.s     73 | Equivalence | 11 |         |    0 | 00/0800               | close            equ          $CC                  
  209 |  4     equ.s     74 | Equivalence | 11 |         |    0 | 00/0800               | read             equ          $CA                  
  210 |  4     equ.s     75 | Equivalence | 11 |         |    0 | 00/0800               | write            equ          $CB                  
  211 |  4     equ.s     76 | Equivalence | 11 |         |    0 | 00/0800               | setmark          equ          $ce                  
  212 |  4     equ.s     77 | Equivalence | 11 |         |    0 | 00/0800               | geteof           equ          $d1                  
  213 |  4     equ.s     78 | Equivalence | 11 |         |    0 | 00/0800               | quit             equ          $65                  
  214 |  4     equ.s     79 | Comment     | 11 |         |    0 | 00/0800               | *
  215 |  4     equ.s     80 | Comment     | 11 |         |    0 | 00/0800               | ************ FP routines ************
  216 |  4     equ.s     81 | Equivalence | 11 |         |    0 | 00/0800               | fac              equ          $9D                  ; FAC : $9D to $A2 (6 bytes)
  217 |  4     equ.s     82 | Equivalence | 11 |         |    0 | 00/0800               | arg              equ          $A5                  ; ARG : $A5 to $AA
  218 |  4     equ.s     83 | Equivalence | 11 |         |    0 | 00/0800               | facsign          equ          $A2                  
  219 |  4     equ.s     84 | Equivalence | 11 |         |    0 | 00/0800               | argsign          equ          $AA                  
  220 |  4     equ.s     85 | Empty       | 11 |         |    0 | 00/0800               |                                                    
  221 |  4     equ.s     86 | Equivalence | 11 |         |    0 | 00/0800               | float            equ          $E2F2                ; Converts SIGNED integer in A/Y (high/lo) into FAC
  222 |  4     equ.s     87 | Equivalence | 11 |         |    0 | 00/0800               | GIVAYF           equ          $E2F2                ; idem
  223 |  4     equ.s     88 | Equivalence | 11 |         |    0 | 00/0800               | FLOAT2           equ          $EBA0                ; "Float2" entry point (https://6502disassembly.com/a2-rom/Applesoft.html#SymLDAB7)
  224 |  4     equ.s     89 | Comment     | 11 |         |    0 | 00/0800               |                                 ; Float UNSIGNED value in FAC+1,2 (hi,low)
  225 |  4     equ.s     90 | Comment     | 11 |         |    0 | 00/0800               |                                 ; X-reg = exponent ; C=0 to make value negative, C=1 to make value positive
  226 |  4     equ.s     91 | Empty       | 11 |         |    0 | 00/0800               |                                                    
  227 |  4     equ.s     92 | Equivalence | 11 |         |    0 | 00/0800               | PRNTFAC          equ          $ED2E                ; Prints number in FAC (in decimal format). FAC is destroyed
  228 |  4     equ.s     93 | Equivalence | 11 |         |    0 | 00/0800               | FIN              equ          $EC4A                ; FAC = expression pointed TXTPTR
  229 |  4     equ.s     94 | Equivalence | 11 |         |    0 | 00/0800               | FNEG             equ          $EED0                ; FAC = - FAC
  230 |  4     equ.s     95 | Equivalence | 11 |         |    0 | 00/0800               | FABS             equ          $EBAF                ; FAC = ABS(FAC)
  231 |  4     equ.s     96 | Equivalence | 11 |         |    0 | 00/0800               | F2INT16          equ          $E752                ; FAC to 16 bits int in A/Y and $50/51 (high/low)
  232 |  4     equ.s     97 | Equivalence | 11 |         |    0 | 00/0800               | FADD             equ          $E7BE                ; Move the number pointed by Y,A into ARG and fall into
  233 |  4     equ.s     98 | Equivalence | 11 |         |    0 | 00/0800               | FADDT            equ          $E7C1                ; FAC = FAC + ARG if Z is O, else copy ARG into FAC (FAC=0+ARG)
  234 |  4     equ.s     99 | Equivalence | 11 |         |    0 | 00/0800               | FADDFAC          equ          $E7C6                ; FAC = FAC + ARG
  235 |  4     equ.s    100 | Equivalence | 11 |         |    0 | 00/0800               | FSUBT            equ          $E7AA                ; FAC = ARG - FAC
  236 |  4     equ.s    101 | Equivalence | 11 |         |    0 | 00/0800               | FMULT            equ          $E97F                ; Move the number pointed by Y,A into ARG and fall into FMULTT
  237 |  4     equ.s    102 | Equivalence | 11 |         |    0 | 00/0800               | FMULTT           equ          $E982                ; FAC = FAC x ARG (Z must be clear, else rts)
  238 |  4     equ.s    103 | Equivalence | 11 |         |    0 | 00/0800               | FDIVT            equ          $EA69                ; FAC = ARG / FAC
  239 |  4     equ.s    104 | Equivalence | 11 |         |    0 | 00/0800               | RND              equ          $EFAE                ; FAC = random number
  240 |  4     equ.s    105 | Equivalence | 11 |         |    0 | 00/0800               | FOUT             equ          $ED34                ; Create a string at the start of the stack ($100−$110)
  241 |  4     equ.s    106 | Equivalence | 11 |         |    0 | 00/0800               | MOVAF            equ          $EB63                ; Move FAC into ARG. On exit A=FACEXP and Z is set
  242 |  4     equ.s    107 | Equivalence | 11 |         |    0 | 00/0800               | CONINT           equ          $E6FB                ; Convert FAC into a single byte number in X and FACLO
  243 |  4     equ.s    108 | Equivalence | 11 |         |    0 | 00/0800               | YTOFAC           equ          $E301                ; Float y
  244 |  4     equ.s    109 | Equivalence | 11 |         |    0 | 00/0800               | MOVMF            equ          $EB2B                ; Routine to pack FP number. Address of destination must be in Y
  245 |  4     equ.s    110 | Comment     | 11 |         |    0 | 00/0800               |                                 ; (high) and X (low). Result is packed from FAC                             
  246 |  4     equ.s    111 | Equivalence | 11 |         |    0 | 00/0800               | QUINT            equ          $EBF2                ; convert fac to 16bit INT at $A0 and $A1 (fac+3/fac+4)
  247 |  4     equ.s    112 | Equivalence | 11 |         |    0 | 00/0800               | STROUT           equ          $DB3A                ;
  248 |  4     equ.s    113 | Equivalence | 11 |         |    0 | 00/0800               | LINPRT           equ          $ED24                ; Converts the unsigned hexadecimal number in X (low) and A (high) into a decimal number and displays it.
  249 |  4     equ.s    114 | Empty       | 11 |         |    0 | 00/0800               |                                                    
  250 |  4     equ.s    115 | Comment     | 11 |         |    0 | 00/0800               | ; In executing the following subroutines, Applesoft expects the argument to be in the FAC. 
  251 |  4     equ.s    116 | Comment     | 11 |         |    0 | 00/0800               | ; After the result has been calculated, it will be placed in the FAC.
  252 |  4     equ.s    117 | Equivalence | 11 |         |    0 | 00/0800               | LOG              equ          $E941                
  253 |  4     equ.s    118 | Equivalence | 11 |         |    0 | 00/0800               | ABS              equ          $EBAF                
  254 |  4     equ.s    119 | Equivalence | 11 |         |    0 | 00/0800               | SQR              equ          $EE8D                
  255 |  4     equ.s    120 | Comment     | 11 |         |    0 | 00/0800               | ;EXP             equ $EF09 
  256 |  4     equ.s    121 | Comment     | 11 |         |    0 | 00/0800               | * trigo
  257 |  4     equ.s    122 | Equivalence | 11 |         |    0 | 00/0800               | COS              equ          $EFEA                
  258 |  4     equ.s    123 | Equivalence | 11 |         |    0 | 00/0800               | SIN              equ          $EFF1                
  259 |  4     equ.s    124 | Equivalence | 11 |         |    0 | 00/0800               | TAN              equ          $F03A                
  260 |  4     equ.s    125 | Equivalence | 11 |         |    0 | 00/0800               | ATN              equ          $F09E                
  261 |  4     equ.s    126 | Empty       | 11 |         |    0 | 00/0800               |                                                    
  262 |  4     equ.s    127 | Empty       | 11 |         |    0 | 00/0800               |                                                    
  263 |  4     equ.s    128 | Comment     | 11 |         |    0 | 00/0800               | ; eb82   SIGN   ;convert FAC to -1,0,1
  264 |  4     equ.s    129 | Comment     | 11 |         |    0 | 00/0800               | * A intégrer :
  265 |  4     equ.s    130 | Comment     | 11 |         |    0 | 00/0800               | *FSUB = $E7A7    OVERFLOW = $E8D5        ONE = $E913        FLOG = $E941    CONUPK = $E9E3  MUL10 = $EA39 
  266 |  4     equ.s    131 | Comment     | 11 |         |    0 | 00/0800               | * FDIV = $EA66        DIVERR = $EAE1        MOVFM = $EAF9    FLOAT = $EB93        FCOMP = $EBB2      
  267 |  4     equ.s    132 | Comment     | 11 |         |    0 | 00/0800               | * FINT = $EC23       FPWRT = $EE9    FEXP = $EF09      FCOS = $EFEA    FSIN = $EFF1  FTAN = $F03A 
  268 |  4     equ.s    133 | Comment     | 11 |         |    0 | 00/0800               | * PIHALF = $F066   FATN = $F09E        
  269 |  4     equ.s    134 | Comment     | 11 |         |    0 | 00/0800               | *
  270 |  4     equ.s    135 | Comment     | 11 |         |    0 | 00/0800               | ************ Applesoft BASIC ************
  271 |  4     equ.s    136 | Equivalence | 11 |         |    0 | 00/0800               | TXTTAB           equ          $67                  ; $67/$68 address of beginning of BASIC Program ($0801 is default)
  272 |  4     equ.s    137 | Equivalence | 11 |         |    0 | 00/0800               | PRGEND           equ          $AF                  ; $AF/$B0 address of end of Applesoft program plus 1 or 2 of BASIC
  273 |  4     equ.s    138 | Equivalence | 11 |         |    0 | 00/0800               | VARTAB           equ          $69                  ; $69/$6A address of beginning of simple variables, just after Basic prog. (unless modified by LOMEN)
  274 |  4     equ.s    139 | Equivalence | 11 |         |    0 | 00/0800               | ARYTAB           equ          $6B                  ; $6B/$6C addresse of beginning of array variables, just after simple variables
  275 |  4     equ.s    140 | Equivalence | 11 |         |    0 | 00/0800               | STREND           equ          $6D                  ; $6D/$6E addresse of end of array variables
  276 |  4     equ.s    141 | Equivalence | 11 |         |    0 | 00/0800               | MEMSIZ           equ          $73                  ; $73/$74 : top of string data, set by HIMEM: (usually $9600),
  277 |  4     equ.s    142 | Equivalence | 11 |         |    0 | 00/0800               | FRETOP           equ          $6F                  ; $6F/$70 bottom of string data, growing downwards
  278 |  4     equ.s    143 | Equivalence | 11 |         |    0 | 00/0800               | CHRGOT           equ          $B7                  ; get char pointed by TXTPTR in A
  279 |  4     equ.s    144 | Equivalence | 11 |         |    0 | 00/0800               | CHRGET           equ          $B1                  ; advance TXTPRT and read char
  280 |  4     equ.s    145 | Equivalence | 11 |         |    0 | 00/0800               | TXTPTR           equ          $B8                  ; pointer $B8/$B9 used in chrget and chrgot
  281 |  4     equ.s    146 | Equivalence | 11 |         |    0 | 00/0800               | CHKCOM           equ          $DEBE                ; check for comma and move TXTPTR forward
  282 |  4     equ.s    147 | Equivalence | 11 |         |    0 | 00/0800               | FRMNUM           equ          $DD67                ; eval num. value, variable, expression pointed by TXTPTR, advance TXTPTR
  283 |  4     equ.s    148 | Equivalence | 11 |         |    0 | 00/0800               | GETADR           equ          $E752                ; convert FAC to integer (to Y,A)
  284 |  4     equ.s    149 | Equivalence | 11 |         |    0 | 00/0800               | FRMEVL           equ          $DD7B                ; evaluate any expression, result in FAC.
  285 |  4     equ.s    150 | Equivalence | 11 |         |    0 | 00/0800               | FRESTR           equ          $E5FD                ; check if epression is a string. A = length, pointer in $5E/$5F
  286 |  4     equ.s    151 | Equivalence | 11 |         |    0 | 00/0800               | ERRDIR           equ          $E306                ; illegal direct if not running
  287 |  4     equ.s    152 | Empty       | 11 |         |    0 | 00/0800               |                                                    
  288 |  4     equ.s    153 | Equivalence | 11 |         |    0 | 00/0800               | PTRGET           equ          $DFE3                ; On entry, TXTPTR must be pointing to the first character of the variable's name.
  289 |  4     equ.s    154 | Comment     | 11 |         |    0 | 00/0800               | * finds an Applesoft variable's memory address and puts a pointer to it in VARPNT ($83-$84) and in A/Y (low/hi). 
  290 |  4     equ.s    155 | Comment     | 11 |         |    0 | 00/0800               | * The variable's name is left in VARNAM ($81-$82). It will work with any type of variable (integer, array element, string..)
  291 |  4     equ.s    156 | Comment     | 11 |         |    0 | 00/0800               | * If the variable does not already exist, PTRGET will create it for you
  292 |  4     equ.s    157 | Comment     | 11 |         |    0 | 00/0800               | * Advances TXTPTR.
  293 |  4     equ.s    158 | Comment     | 11 |         |    0 | 00/0800               | * Set : vartype equ $11 ; str$=$ff, num=$00 
  294 |  4     equ.s    159 | Comment     | 11 |         |    0 | 00/0800               | * set : numtype equ $12 ; int =$80, real = $00
  295 |  4     equ.s    160 | Empty       | 11 |         |    0 | 00/0800               |                                                    
  296 |  4     equ.s    161 | Equivalence | 11 |         |    0 | 00/0800               | CHKNUM           equ          $DD6A                ; verifies that the most recent var found by PTRGET was numeric.
  297 |  4     equ.s    162 | Comment     | 11 |         |    0 | 00/0800               |  *  https://www.brutaldeluxe.fr/documentation/thesourcerorsapprentice/thesourcerorsapprentice_v1n1.pdf
  298 |  4     equ.s    163 | Comment     | 11 |         |    0 | 00/0800               |  * Type mismatch error if var not numeric
  299 |  4     equ.s    164 | Empty       | 11 |         |    0 | 00/0800               |                                                    
  300 |  1 asmdemo.s     16 | Empty       | 11 |         |    0 | 00/0800               |                                                    
  301 |  1 asmdemo.s     17 | Equivalence | 11 |         |    0 | 00/0800               | MyBuffer         equ          $8000                ; starting address of storage for MyPort grafport
  302 |  1 asmdemo.s     18 | Equivalence | 11 |         |    0 | 00/0800               | TestFont         equ          $800                 ; loading address of "TEST.FONT" file
  303 |  1 asmdemo.s     19 | Equivalence | 11 |         |    0 | 00/0800               | KeyBoard         equ          $C000                ; ascii code of last key pressed (+ 128 if strobe not cleared)
  304 |  1 asmdemo.s     20 | Equivalence | 11 |         |    0 | 00/0800               | Strobe           equ          $C010                ; Keyboard Strobe
  305 |  1 asmdemo.s     21 | Equivalence | 11 |         |    0 | 00/0800               | ptr              equ          $06                  
  306 |  1 asmdemo.s     22 | Equivalence | 11 |         |    0 | 00/0800               | ptr2             equ          $08                  
  307 |  1 asmdemo.s     23 | Empty       | 11 |         |    0 | 00/0800               |                                                    
  308 |  1 asmdemo.s     24 | Code        | 11 |         |    3 | 00/0800 : 20 58 FC    | debut            jsr          {$FC58}              ; clear screen
  309 |  1 asmdemo.s     25 | Empty       | 11 |         |    0 | 00/0803               |                                                    
  310 |  1 asmdemo.s     26 | Code        | 11 |         |    3 | 00/0803 : 20 51 0C    |                  jsr          WaitForKeyPress      
  311 |  1 asmdemo.s     27 | Code        | 11 |         |    3 | 00/0806 : 20 E3 0A    |                  jsr          AdjutVars            
  312 |  1 asmdemo.s     28 | Code        | 11 |         |    3 | 00/0809 : 20 A9 0B    |                  jsr          Graf                 
  313 |  1 asmdemo.s     29 | Empty       | 11 |         |    0 | 00/080C               |                                                    
  314 |  1 asmdemo.s     30 | Code        | 11 |         |    3 | 00/080C : 20 04 0C    |                  jsr          initrandom           
  315 |  1 asmdemo.s     31 | Empty       | 11 |         |    0 | 00/080F               |                                                    
  316 |  1 asmdemo.s     32 | Code        | 11 |         |    2 | 00/080F : A9 5E       |                  lda          #<linedata           ; init ptr2 to beginning of lines data
  317 |  1 asmdemo.s     33 | Code        | 11 |         |    2 | 00/0811 : 85 08       |                  sta          {$08}                
  318 |  1 asmdemo.s     34 | Code        | 11 |         |    2 | 00/0813 : A9 0F       |                  lda          #>linedata           
  319 |  1 asmdemo.s     35 | Code        | 11 |         |    2 | 00/0815 : 85 09       |                  sta          {$08}+1              
  320 |  1 asmdemo.s     36 | Empty       | 11 |         |    0 | 00/0817               |                                                    
  321 |  1 asmdemo.s     37 | Empty       | 11 |         |    0 | 00/0817               | bigloop                                            
  322 |  1 asmdemo.s     38 | Code        | 11 |         |    2 | 00/0817 : A0 00       |                  ldy          #0                   
  323 |  1 asmdemo.s     39 | Code        | 11 |         |    2 | 00/0819 : A2 00       |                  ldx          #0                   
  324 |  1 asmdemo.s     40 | Empty       | 11 |         |    0 | 00/081B               |                                                    
  325 |  1 asmdemo.s     41 | Empty       | 11 |         |    0 | 00/081B               | copy8                                              
  326 |  1 asmdemo.s     42 | Code        | 11 |         |    2 | 00/081B : B1 08       |                  lda          ({$08}),y            ; copy 2 points to Point 1 ad Point2 vars
  327 |  1 asmdemo.s     43 | Code        | 11 |         |    3 | 00/081D : 9D 52 1C    |                  sta          Point1,x             
  328 |  1 asmdemo.s     44 | Code        | 11 |         |    1 | 00/0820 : C8          |                  iny                               
  329 |  1 asmdemo.s     45 | Code        | 11 |         |    1 | 00/0821 : E8          |                  inx                               
  330 |  1 asmdemo.s     46 | Code        | 11 |         |    2 | 00/0822 : E0 08       |                  cpx          #8                   
  331 |  1 asmdemo.s     47 | Code        | 11 |         |    2 | 00/0824 : D0 F5       |                  bne          copy8                
  332 |  1 asmdemo.s     48 | Empty       | 11 |         |    0 | 00/0826               |                                                    
  333 |  1 asmdemo.s     49 | Code        | 11 |         |    3 | 00/0826 : 20 67 0C    |                  jsr          SetDeltaXY           ; calcutate deltas
  334 |  1 asmdemo.s     50 | Empty       | 11 |         |    0 | 00/0829               |                                                    
  335 |  1 asmdemo.s     51 | Empty       | 11 |         |    0 | 00/0829               |                                                    
  336 |  1 asmdemo.s     52 | Macro       | 11 |         |    0 | 00/0829               |                  DoCompare16  deltaMax;seglength;cmp16
  337 |  1 asmdemo.s     52 | Code        | 11 |         |    3 | 00/0829 : AD 39 18    |                  lda          deltaMax+1           ; number 1 on stack
  338 |  1 asmdemo.s     52 | Code        | 11 |         |    1 | 00/082C : 48          |                  pha                               
  339 |  1 asmdemo.s     52 | Code        | 11 |         |    3 | 00/082D : AD 38 18    |                  lda          deltaMax             
  340 |  1 asmdemo.s     52 | Code        | 11 |         |    1 | 00/0830 : 48          |                  pha                               
  341 |  1 asmdemo.s     52 | Code        | 11 |         |    3 | 00/0831 : AD 6E 1C    |                  lda          seglength+1          ; number 2 on stack
  342 |  1 asmdemo.s     52 | Code        | 11 |         |    1 | 00/0834 : 48          |                  pha                               
  343 |  1 asmdemo.s     52 | Code        | 11 |         |    3 | 00/0835 : AD 6D 1C    |                  lda          seglength            
  344 |  1 asmdemo.s     52 | Code        | 11 |         |    1 | 00/0838 : 48          |                  pha                               
  345 |  1 asmdemo.s     52 | Code        | 11 |         |    3 | 00/0839 : 20 EB 0D    |                  jsr          cmp16                ; compare routine (works for signed or unsigned numbers)
  346 |  1 asmdemo.s     53 | Code        | 11 |         |    2 | 00/083C : F0 0A       |                  beq          DoshortLine          
  347 |  1 asmdemo.s     54 | Code        | 11 |         |    2 | 00/083E : 90 08       |                  bcc          DoshortLine          
  348 |  1 asmdemo.s     55 | Empty       | 11 |         |    0 | 00/0840               |                                                    
  349 |  1 asmdemo.s     56 | Code        | 11 |         |    2 | 00/0840 : A9 00       |                  lda          #0                   ; here if deltaMax > seglength
  350 |  1 asmdemo.s     57 | Code        | 11 |         |    3 | 00/0842 : 8D 50 1C    |                  sta          shortLineflag        
  351 |  1 asmdemo.s     58 | Code        | 11 |         |    3 | 00/0845 : 4C 50 08    |                  jmp          longline             
  352 |  1 asmdemo.s     59 | Empty       | 11 |         |    0 | 00/0848               |                                                    
  353 |  1 asmdemo.s     60 | Code        | 11 |         |    2 | 00/0848 : A9 01       | DoshortLine      lda          #1                   ; here if line is too short for variations
  354 |  1 asmdemo.s     61 | Code        | 11 |         |    3 | 00/084A : 8D 50 1C    |                  sta          shortLineflag        
  355 |  1 asmdemo.s     62 | Code        | 11 |         |    3 | 00/084D : 4C 59 08    |                  jmp          dg                   
  356 |  1 asmdemo.s     63 | Empty       | 11 |         |    0 | 00/0850               |                                                    
  357 |  1 asmdemo.s     64 | Empty       | 11 |         |    0 | 00/0850               | longline                                           
  358 |  1 asmdemo.s     65 | Code        | 11 |         |    3 | 00/0850 : 20 68 0D    |                  jsr          SetNpPt              ; determine number of points to be displaced
  359 |  1 asmdemo.s     66 | Code        | 11 |         |    3 | 00/0853 : 20 94 0D    |                  jsr          SetInc               ; set increment in X and Y direction between points to dispalce
  360 |  1 asmdemo.s     67 | Code        | 11 |         |    3 | 00/0856 : 20 C5 09    |                  jsr          PopTab               ; fill a table of points
  361 |  1 asmdemo.s     68 | Empty       | 11 |         |    0 | 00/0859               |                                                    
  362 |  1 asmdemo.s     69 | Code        | 11 |         |    3 | 00/0859 : 20 7C 08    | dg               jsr          DoLine               ; drew
  363 |  1 asmdemo.s     70 | Empty       | 11 |         |    0 | 00/085C               |                                                    
  364 |  1 asmdemo.s     71 | Empty       | 11 |         |    0 | 00/085C               |                                                    
  365 |  1 asmdemo.s     72 | Code        | 11 |         |    2 | 00/085C : A5 08       |                  lda          {$08}                ; set ptr2 point2 to next couple of points
  366 |  1 asmdemo.s     73 | Code        | 11 |         |    1 | 00/085E : 18          |                  clc                               
  367 |  1 asmdemo.s     74 | Code        | 11 |         |    2 | 00/085F : 69 08       |                  adc          #8                   
  368 |  1 asmdemo.s     75 | Code        | 11 |         |    2 | 00/0861 : 85 08       |                  sta          {$08}                
  369 |  1 asmdemo.s     76 | Code        | 11 |         |    2 | 00/0863 : A9 00       |                  lda          #0                   
  370 |  1 asmdemo.s     77 | Code        | 11 |         |    2 | 00/0865 : 65 09       |                  adc          {$08}+1              
  371 |  1 asmdemo.s     78 | Code        | 11 |         |    2 | 00/0867 : 85 09       |                  sta          {$08}+1              
  372 |  1 asmdemo.s     79 | Empty       | 11 |         |    0 | 00/0869               |                                                    
  373 |  1 asmdemo.s     80 | Code        | 11 |         |    2 | 00/0869 : A0 00       |                  ldy          #0                   ; test end of data ($FF $FF marker)
  374 |  1 asmdemo.s     81 | Code        | 11 |         |    2 | 00/086B : B1 08       |                  lda          ({$08}),y            
  375 |  1 asmdemo.s     82 | Code        | 11 |         |    2 | 00/086D : C9 FF       |                  cmp          #$FF                 
  376 |  1 asmdemo.s     83 | Code        | 11 |         |    2 | 00/086F : D0 A6       |                  bne          bigloop              
  377 |  1 asmdemo.s     84 | Code        | 11 |         |    1 | 00/0871 : C8          |                  iny                               
  378 |  1 asmdemo.s     85 | Code        | 11 |         |    2 | 00/0872 : B1 08       |                  lda          ({$08}),y            
  379 |  1 asmdemo.s     86 | Code        | 11 |         |    2 | 00/0874 : C9 FF       |                  cmp          #$FF                 
  380 |  1 asmdemo.s     87 | Code        | 11 |         |    2 | 00/0876 : D0 9F       |                  bne          bigloop              ; loop if end not reached
  381 |  1 asmdemo.s     88 | Empty       | 11 |         |    0 | 00/0878               |                                                    
  382 |  1 asmdemo.s     89 | Code        | 11 |         |    3 | 00/0878 : 4C 00 08    |                  jmp          debut                
  383 |  1 asmdemo.s     90 | Code        | 11 |         |    1 | 00/087B : 60          |                  rts                               
  384 |  1 asmdemo.s     91 | Empty       | 11 |         |    0 | 00/087C               |                                                    
  385 |  1 asmdemo.s     92 | Comment     | 11 |         |    0 | 00/087C               | * * * * * * * * * * * * GRAF * * * * * * * * * * * *
  386 |  1 asmdemo.s     93 | Empty       | 11 |         |    0 | 00/087C               | DoLine                                             
  387 |  1 asmdemo.s     94 | Code        | 11 |         |    3 | 00/087C : AD 50 1C    |                  lda          shortLineflag        
  388 |  1 asmdemo.s     95 | Code        | 11 |         |    2 | 00/087F : F0 0D       |                  beq          dolong               ; if shortLineflag = 0 : process long line
  389 |  1 asmdemo.s     96 | Comment     | 11 |         |    0 | 00/0881               |                                                 ; (longer than seglength)
  390 |  1 asmdemo.s     97 | Macro       | 11 |         |    0 | 00/0881               |                  GP_call      {{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1};Point1; else draw a straight line
  391 |  1 asmdemo.s     97 | Code        | 11 |         |    3 | 00/0881 : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  392 |  1 asmdemo.s     97 | Data        | 11 |         |    1 | 00/0884 : 0E          |                  dfb          {{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  393 |  1 asmdemo.s     97 | Data        | 11 |         |    2 | 00/0885 : 52 1C       |                  da           Point1               ; address of parameter(s) (2 bytes), 0 if no paramter
  394 |  1 asmdemo.s     98 | Macro       | 11 |         |    0 | 00/0887               |                  GP_call      {{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1};Point2; from Point1 to Point2
  395 |  1 asmdemo.s     98 | Code        | 11 |         |    3 | 00/0887 : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  396 |  1 asmdemo.s     98 | Data        | 11 |         |    1 | 00/088A : 10          |                  dfb          {{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  397 |  1 asmdemo.s     98 | Data        | 11 |         |    2 | 00/088B : 56 1C       |                  da           Point2               ; address of parameter(s) (2 bytes), 0 if no paramter
  398 |  1 asmdemo.s     99 | Code        | 11 |         |    1 | 00/088D : 60          |                  rts                               
  399 |  1 asmdemo.s    100 | Empty       | 11 |         |    0 | 00/088E               | dolong                                             
  400 |  1 asmdemo.s    101 | Code        | 11 |         |    3 | 00/088E : 20 EA 08    |                  jsr          mvpt01               
  401 |  1 asmdemo.s    102 | Empty       | 11 |         |    0 | 00/0891               |                                                    
  402 |  1 asmdemo.s    103 | Code        | 11 |         |    3 | 00/0891 : AD 4E 1C    | doline2          lda          savnbpt              
  403 |  1 asmdemo.s    104 | Code        | 11 |         |    3 | 00/0894 : 8D E9 08    |                  sta          segcount             
  404 |  1 asmdemo.s    105 | Empty       | 11 |         |    0 | 00/0897               |                                                    
  405 |  1 asmdemo.s    106 | Macro       | 11 |         |    0 | 00/0897               |                  GP_call      {{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1};theopt
  406 |  1 asmdemo.s    106 | Code        | 11 |         |    3 | 00/0897 : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  407 |  1 asmdemo.s    106 | Data        | 11 |         |    1 | 00/089A : 0E          |                  dfb          {{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  408 |  1 asmdemo.s    106 | Data        | 11 |         |    2 | 00/089B : 4C 18       |                  da           theopt               ; address of parameter(s) (2 bytes), 0 if no paramter
  409 |  1 asmdemo.s    107 | Empty       | 11 |         |    0 | 00/089D               |                                                    
  410 |  1 asmdemo.s    108 | Empty       | 11 |         |    0 | 00/089D               | domove                                             
  411 |  1 asmdemo.s    109 | Macro       | 11 |         |    0 | 00/089D               |                  GP_call      {{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1};theopt
  412 |  1 asmdemo.s    109 | Code        | 11 |         |    3 | 00/089D : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  413 |  1 asmdemo.s    109 | Data        | 11 |         |    1 | 00/08A0 : 10          |                  dfb          {{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  414 |  1 asmdemo.s    109 | Data        | 11 |         |    2 | 00/08A1 : 4C 18       |                  da           theopt               ; address of parameter(s) (2 bytes), 0 if no paramter
  415 |  1 asmdemo.s    110 | Empty       | 11 |         |    0 | 00/08A3               |                                                    
  416 |  1 asmdemo.s    111 | Code        | 11 |         |    3 | 00/08A3 : AD A1 08    |                  lda          domove+4             ; modify code above
  417 |  1 asmdemo.s    112 | Code        | 11 |         |    1 | 00/08A6 : 18          |                  clc                               
  418 |  1 asmdemo.s    113 | Code        | 11 |         |    2 | 00/08A7 : 69 04       |                  adc          #4                   
  419 |  1 asmdemo.s    114 | Code        | 11 |         |    3 | 00/08A9 : 8D A1 08    |                  sta          domove+4             
  420 |  1 asmdemo.s    115 | Code        | 11 |         |    3 | 00/08AC : AD A2 08    |                  lda          domove+5             
  421 |  1 asmdemo.s    116 | Code        | 11 |         |    2 | 00/08AF : 69 00       |                  adc          #0                   
  422 |  1 asmdemo.s    117 | Code        | 11 |         |    3 | 00/08B1 : 8D A2 08    |                  sta          domove+5             
  423 |  1 asmdemo.s    118 | Empty       | 11 |         |    0 | 00/08B4               |                                                    
  424 |  1 asmdemo.s    119 | Code        | 11 |         |    3 | 00/08B4 : CE E9 08    |                  dec          segcount             ; update counter
  425 |  1 asmdemo.s    120 | Code        | 11 |         |    3 | 00/08B7 : AD E9 08    |                  lda          segcount             
  426 |  1 asmdemo.s    121 | Code        | 11 |         |    2 | 00/08BA : 10 E1       |                  bpl          domove               ; if not 0 then loop
  427 |  1 asmdemo.s    122 | Empty       | 11 |         |    0 | 00/08BC               |                                                    
  428 |  1 asmdemo.s    123 | Code        | 11 |         |    2 | 00/08BC : A9 4C       |                  lda          #<theopt             ; reset modified code
  429 |  1 asmdemo.s    124 | Code        | 11 |         |    3 | 00/08BE : 8D A1 08    |                  sta          domove+4             
  430 |  1 asmdemo.s    125 | Code        | 11 |         |    2 | 00/08C1 : A9 18       |                  lda          #>theopt             
  431 |  1 asmdemo.s    126 | Code        | 11 |         |    3 | 00/08C3 : 8D A2 08    |                  sta          domove+5             
  432 |  1 asmdemo.s    127 | Empty       | 11 |         |    0 | 00/08C6               |                                                    
  433 |  1 asmdemo.s    128 | Code        | 11 |         |    1 | 00/08C6 : 60          | outdraw          rts                               
  434 |  1 asmdemo.s    129 | Comment     | 11 |         |    0 | 00/08C7               | ************ loop back here
  435 |  1 asmdemo.s    130 | Empty       | 11 |         |    0 | 00/08C7               |                                                    
  436 |  1 asmdemo.s    131 | Code        | 11 |         |    3 | 00/08C7 : 20 51 0C    | dowait           jsr          WaitForKeyPress      
  437 |  1 asmdemo.s    132 | Code        | 11 |         |    2 | 00/08CA : C9 1B       |                  cmp          #$1B                 ; test escape key
  438 |  1 asmdemo.s    133 | Code        | 11 |         |    2 | 00/08CC : D0 03       |                  bne          noquit               
  439 |  1 asmdemo.s    134 | Code        | 11 |         |    3 | 00/08CE : 4C B7 09    |                  jmp          Quitprog             
  440 |  1 asmdemo.s    135 | Empty       | 11 |         |    0 | 00/08D1               | noquit                                             
  441 |  1 asmdemo.s    136 | Code        | 11 |         |    1 | 00/08D1 : 18          |                  clc                               
  442 |  1 asmdemo.s    137 | Code        | 11 |         |    3 | 00/08D2 : 20 73 0B    |                  jsr          ClearIt              ; clear DHGR screen
  443 |  1 asmdemo.s    138 | Macro       | 11 |         |    0 | 00/08D5               |                  GP_call      {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1};White; reset pen to white
  444 |  1 asmdemo.s    138 | Code        | 11 |         |    3 | 00/08D5 : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  445 |  1 asmdemo.s    138 | Data        | 11 |         |    1 | 00/08D8 : 08          |                  dfb          {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  446 |  1 asmdemo.s    138 | Data        | 11 |         |    2 | 00/08D9 : A7 1C       |                  da           White                ; address of parameter(s) (2 bytes), 0 if no paramter
  447 |  1 asmdemo.s    139 | Code        | 11 |         |    2 | 00/08DB : A9 4C       |                  lda          #<theopt             ; reset modified code
  448 |  1 asmdemo.s    140 | Code        | 11 |         |    3 | 00/08DD : 8D A1 08    |                  sta          domove+4             
  449 |  1 asmdemo.s    141 | Code        | 11 |         |    2 | 00/08E0 : A9 18       |                  lda          #>theopt             
  450 |  1 asmdemo.s    142 | Code        | 11 |         |    3 | 00/08E2 : 8D A2 08    |                  sta          domove+5             
  451 |  1 asmdemo.s    143 | Empty       | 11 |         |    0 | 00/08E5               |                                                    
  452 |  1 asmdemo.s    144 | Code        | 11 |         |    3 | 00/08E5 : 4C 7C 08    |                  jmp          DoLine               ; loop
  453 |  1 asmdemo.s    145 | Code        | 11 |         |    1 | 00/08E8 : 60          |                  rts                               
  454 |  1 asmdemo.s    146 | Data        | 11 |         |    1 | 00/08E9 : 00          | segcount         ds           1                    
  455 |  1 asmdemo.s    147 | Empty       | 11 |         |    0 | 00/08EA               |                                                    
  456 |  1 asmdemo.s    148 | Empty       | 11 |         |    0 | 00/08EA               |                                                    
  457 |  1 asmdemo.s    149 | Comment     | 11 |         |    0 | 00/08EA               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
  458 |  1 asmdemo.s    150 | Comment     | 11 |         |    0 | 00/08EA               | * move points randomly 
  459 |  1 asmdemo.s    151 | Code        | 11 |         |    3 | 00/08EA : AD 4E 1C    | mvpt01           lda          savnbpt              
  460 |  1 asmdemo.s    152 | Code        | 11 |         |    3 | 00/08ED : 8D 4C 1C    |                  sta          nbpt                 
  461 |  1 asmdemo.s    153 | Empty       | 11 |         |    0 | 00/08F0               |                                                    
  462 |  1 asmdemo.s    154 | Code        | 11 |         |    2 | 00/08F0 : A9 4C       |                  lda          #<theopt             ; set ptr to fisrt point
  463 |  1 asmdemo.s    155 | Code        | 11 |         |    2 | 00/08F2 : 85 06       |                  sta          {$06}                
  464 |  1 asmdemo.s    156 | Code        | 11 |         |    2 | 00/08F4 : A9 18       |                  lda          #>theopt             
  465 |  1 asmdemo.s    157 | Code        | 11 |         |    2 | 00/08F6 : 85 07       |                  sta          {$06}+1              
  466 |  1 asmdemo.s    158 | Empty       | 11 |         |    0 | 00/08F8               |                                                    
  467 |  1 asmdemo.s    159 | Code        | 11 |         |    3 | 00/08F8 : 20 D7 0B    | mvpt             jsr          random               ; init x deviation amount
  468 |  1 asmdemo.s    160 | Code        | 11 |         |    3 | 00/08FB : AD D3 0B    |                  lda          R1                   
  469 |  1 asmdemo.s    161 | Comment     | 11 |         |    0 | 00/08FE               |                 ;and #3                          ; ? to reduce number of calls to random function
  470 |  1 asmdemo.s    162 | Code        | 11 |         |    3 | 00/08FE : CD 6C 1C    |                  cmp          maxvar               
  471 |  1 asmdemo.s    163 | Code        | 11 |         |    2 | 00/0901 : B0 F5       |                  bcs          mvpt                 ; loop if > #maxvar
  472 |  1 asmdemo.s    164 | Code        | 11 |         |    3 | 00/0903 : 8D 68 1C    |                  sta          xmov                 ; set x displacement
  473 |  1 asmdemo.s    165 | Empty       | 11 |         |    0 | 00/0906               |                                                    
  474 |  1 asmdemo.s    166 | Code        | 11 |         |    2 | 00/0906 : A9 00       |                  lda          #0                   ; init neg. flag to 0
  475 |  1 asmdemo.s    167 | Code        | 11 |         |    3 | 00/0908 : 8D 6A 1C    |                  sta          xneg                 
  476 |  1 asmdemo.s    168 | Code        | 11 |         |    3 | 00/090B : AD D4 0B    |                  lda          R2                   
  477 |  1 asmdemo.s    169 | Code        | 11 |         |    1 | 00/090E : 0A          |                  asl                               ; get random # in carry
  478 |  1 asmdemo.s    170 | Code        | 11 |         |    2 | 00/090F : 90 05       |                  bcc          initymov             ; if carry = 0 : no action
  479 |  1 asmdemo.s    171 | Code        | 11 |         |    2 | 00/0911 : A9 01       |                  lda          #1                   ; else set neg. flag to 1
  480 |  1 asmdemo.s    172 | Code        | 11 |         |    3 | 00/0913 : 8D 6A 1C    |                  sta          xneg                 
  481 |  1 asmdemo.s    173 | Empty       | 11 |         |    0 | 00/0916               |                                                    
  482 |  1 asmdemo.s    174 | Empty       | 11 |         |    0 | 00/0916               | initymov                                           
  483 |  1 asmdemo.s    175 | Code        | 11 |         |    3 | 00/0916 : 20 D7 0B    |                  jsr          random               
  484 |  1 asmdemo.s    176 | Code        | 11 |         |    3 | 00/0919 : AD D5 0B    |                  lda          R3                   ; init y deviation amount
  485 |  1 asmdemo.s    177 | Code        | 11 |         |    2 | 00/091C : 29 03       |                  and          #3                   ; ? to reduce number of calls to random function
  486 |  1 asmdemo.s    178 | Code        | 11 |         |    3 | 00/091E : AE 51 1C    |                  ldx          VertFlag             ; test verticality of the line
  487 |  1 asmdemo.s    179 | Code        | 11 |         |    2 | 00/0921 : F0 07       |                  beq          vertoff              ;
  488 |  1 asmdemo.s    180 | Code        | 11 |         |    3 | 00/0923 : CD 6C 1C    |                  cmp          maxvar               ; vertical : normal variation
  489 |  1 asmdemo.s    181 | Code        | 11 |         |    2 | 00/0926 : B0 EE       |                  bcs          initymov             
  490 |  1 asmdemo.s    182 | Code        | 11 |         |    2 | 00/0928 : B0 10       |                  bcs          verton               ; always branch
  491 |  1 asmdemo.s    183 | Empty       | 11 |         |    0 | 00/092A               |                                                    
  492 |  1 asmdemo.s    184 | Empty       | 11 |         |    0 | 00/092A               | vertoff                                            
  493 |  1 asmdemo.s    185 | Code        | 11 |         |    1 | 00/092A : 48          |                  pha                               
  494 |  1 asmdemo.s    186 | Code        | 11 |         |    3 | 00/092B : AD 6C 1C    |                  lda          maxvar               
  495 |  1 asmdemo.s    187 | Code        | 11 |         |    3 | 00/092E : 8D 5C 0F    |                  sta          tempo                
  496 |  1 asmdemo.s    188 | Code        | 11 |         |    3 | 00/0931 : CE 5C 0F    |                  dec          tempo                
  497 |  1 asmdemo.s    189 | Code        | 11 |         |    1 | 00/0934 : 68          |                  pla                               
  498 |  1 asmdemo.s    190 | Code        | 11 |         |    3 | 00/0935 : CD 5C 0F    |                  cmp          tempo                ; horizontal : reduce vertical variation
  499 |  1 asmdemo.s    191 | Code        | 11 |         |    2 | 00/0938 : B0 DC       |                  bcs          initymov             ; to take account of pixels size
  500 |  1 asmdemo.s    192 | Code        | 11 |         |    3 | 00/093A : 8D 69 1C    | verton           sta          ymov                 
  501 |  1 asmdemo.s    193 | Empty       | 11 |         |    0 | 00/093D               |                                                    
  502 |  1 asmdemo.s    194 | Code        | 11 |         |    2 | 00/093D : A9 00       |                  lda          #0                   ; init neg. flag to 0
  503 |  1 asmdemo.s    195 | Code        | 11 |         |    3 | 00/093F : 8D 6B 1C    |                  sta          yneg                 
  504 |  1 asmdemo.s    196 | Empty       | 11 |         |    0 | 00/0942               |                                                    
  505 |  1 asmdemo.s    197 | Code        | 11 |         |    3 | 00/0942 : AD D6 0B    |                  lda          R4                   
  506 |  1 asmdemo.s    198 | Code        | 11 |         |    1 | 00/0945 : 0A          |                  asl                               ; get random # in carry
  507 |  1 asmdemo.s    199 | Code        | 11 |         |    2 | 00/0946 : 90 05       |                  bcc          _22                  ; if carry = 0 : no action
  508 |  1 asmdemo.s    200 | Code        | 11 |         |    2 | 00/0948 : A9 01       |                  lda          #1                   
  509 |  1 asmdemo.s    201 | Code        | 11 |         |    3 | 00/094A : 8D 6B 1C    |                  sta          yneg                 
  510 |  1 asmdemo.s    202 | Empty       | 11 |         |    0 | 00/094D               |                                                    
  511 |  1 asmdemo.s    203 | Empty       | 11 |         |    0 | 00/094D               | _22                                                ; set x variation (positive)
  512 |  1 asmdemo.s    204 | Code        | 11 |         |    2 | 00/094D : A0 00       |                  ldy          #0                   
  513 |  1 asmdemo.s    205 | Code        | 11 |         |    3 | 00/094F : AD 6A 1C    |                  lda          xneg                 
  514 |  1 asmdemo.s    206 | Code        | 11 |         |    2 | 00/0952 : D0 12       |                  bne          donegx               
  515 |  1 asmdemo.s    207 | Code        | 11 |         |    2 | 00/0954 : B1 06       |                  lda          ({$06}),y            
  516 |  1 asmdemo.s    208 | Code        | 11 |         |    1 | 00/0956 : 18          |                  clc                               
  517 |  1 asmdemo.s    209 | Code        | 11 |         |    3 | 00/0957 : 6D 68 1C    |                  adc          xmov                 
  518 |  1 asmdemo.s    210 | Code        | 11 |         |    2 | 00/095A : 91 06       |                  sta          ({$06}),y            
  519 |  1 asmdemo.s    211 | Code        | 11 |         |    1 | 00/095C : C8          |                  iny                               
  520 |  1 asmdemo.s    212 | Code        | 11 |         |    2 | 00/095D : B1 06       |                  lda          ({$06}),y            
  521 |  1 asmdemo.s    213 | Code        | 11 |         |    2 | 00/095F : 69 00       |                  adc          #0                   
  522 |  1 asmdemo.s    214 | Code        | 11 |         |    2 | 00/0961 : 91 06       |                  sta          ({$06}),y            
  523 |  1 asmdemo.s    215 | Code        | 11 |         |    3 | 00/0963 : 4C 77 09    |                  jmp          _33                  
  524 |  1 asmdemo.s    216 | Empty       | 11 |         |    0 | 00/0966               |                                                    
  525 |  1 asmdemo.s    217 | Code        | 11 |         |    2 | 00/0966 : A0 00       | donegx           ldy          #0                   ; set x variation (negative)
  526 |  1 asmdemo.s    218 | Code        | 11 |         |    2 | 00/0968 : B1 06       |                  lda          ({$06}),y            
  527 |  1 asmdemo.s    219 | Code        | 11 |         |    1 | 00/096A : 38          |                  sec                               
  528 |  1 asmdemo.s    220 | Code        | 11 |         |    3 | 00/096B : ED 68 1C    |                  sbc          xmov                 
  529 |  1 asmdemo.s    221 | Code        | 11 |         |    2 | 00/096E : 91 06       |                  sta          ({$06}),y            
  530 |  1 asmdemo.s    222 | Code        | 11 |         |    1 | 00/0970 : C8          |                  iny                               
  531 |  1 asmdemo.s    223 | Code        | 11 |         |    2 | 00/0971 : B1 06       |                  lda          ({$06}),y            
  532 |  1 asmdemo.s    224 | Code        | 11 |         |    2 | 00/0973 : E9 00       |                  sbc          #0                   
  533 |  1 asmdemo.s    225 | Code        | 11 |         |    2 | 00/0975 : 91 06       |                  sta          ({$06}),y            
  534 |  1 asmdemo.s    226 | Empty       | 11 |         |    0 | 00/0977               |                                                    
  535 |  1 asmdemo.s    227 | Empty       | 11 |         |    0 | 00/0977               | _33                                                
  536 |  1 asmdemo.s    228 | Code        | 11 |         |    2 | 00/0977 : A0 02       |                  ldy          #2                   ; set y variation (positive)
  537 |  1 asmdemo.s    229 | Code        | 11 |         |    3 | 00/0979 : AD 6B 1C    |                  lda          yneg                 
  538 |  1 asmdemo.s    230 | Code        | 11 |         |    2 | 00/097C : D0 12       |                  bne          donegy               
  539 |  1 asmdemo.s    231 | Code        | 11 |         |    2 | 00/097E : B1 06       |                  lda          ({$06}),y            
  540 |  1 asmdemo.s    232 | Code        | 11 |         |    1 | 00/0980 : 18          |                  clc                               
  541 |  1 asmdemo.s    233 | Code        | 11 |         |    3 | 00/0981 : 6D 69 1C    |                  adc          ymov                 
  542 |  1 asmdemo.s    234 | Code        | 11 |         |    2 | 00/0984 : 91 06       |                  sta          ({$06}),y            
  543 |  1 asmdemo.s    235 | Code        | 11 |         |    1 | 00/0986 : C8          |                  iny                               
  544 |  1 asmdemo.s    236 | Code        | 11 |         |    2 | 00/0987 : B1 06       |                  lda          ({$06}),y            
  545 |  1 asmdemo.s    237 | Code        | 11 |         |    2 | 00/0989 : 69 00       |                  adc          #0                   
  546 |  1 asmdemo.s    238 | Code        | 11 |         |    2 | 00/098B : 91 06       |                  sta          ({$06}),y            
  547 |  1 asmdemo.s    239 | Code        | 11 |         |    3 | 00/098D : 4C A1 09    |                  jmp          _44                  
  548 |  1 asmdemo.s    240 | Empty       | 11 |         |    0 | 00/0990               |                                                    
  549 |  1 asmdemo.s    241 | Code        | 11 |         |    2 | 00/0990 : A0 02       | donegy           ldy          #2                   
  550 |  1 asmdemo.s    242 | Code        | 11 |         |    2 | 00/0992 : B1 06       |                  lda          ({$06}),y            
  551 |  1 asmdemo.s    243 | Code        | 11 |         |    1 | 00/0994 : 38          |                  sec                               
  552 |  1 asmdemo.s    244 | Code        | 11 |         |    3 | 00/0995 : ED 69 1C    |                  sbc          ymov                 
  553 |  1 asmdemo.s    245 | Code        | 11 |         |    2 | 00/0998 : 91 06       |                  sta          ({$06}),y            
  554 |  1 asmdemo.s    246 | Code        | 11 |         |    1 | 00/099A : C8          |                  iny                               
  555 |  1 asmdemo.s    247 | Code        | 11 |         |    2 | 00/099B : B1 06       |                  lda          ({$06}),y            
  556 |  1 asmdemo.s    248 | Code        | 11 |         |    2 | 00/099D : E9 00       |                  sbc          #0                   
  557 |  1 asmdemo.s    249 | Code        | 11 |         |    2 | 00/099F : 91 06       |                  sta          ({$06}),y            
  558 |  1 asmdemo.s    250 | Empty       | 11 |         |    0 | 00/09A1               |                                                    
  559 |  1 asmdemo.s    251 | Empty       | 11 |         |    0 | 00/09A1               | _44                                                
  560 |  1 asmdemo.s    252 | Code        | 11 |         |    2 | 00/09A1 : A5 06       |                  lda          {$06}                
  561 |  1 asmdemo.s    253 | Code        | 11 |         |    1 | 00/09A3 : 18          |                  clc                               
  562 |  1 asmdemo.s    254 | Code        | 11 |         |    2 | 00/09A4 : 69 04       |                  adc          #4                   
  563 |  1 asmdemo.s    255 | Code        | 11 |         |    2 | 00/09A6 : 85 06       |                  sta          {$06}                
  564 |  1 asmdemo.s    256 | Code        | 11 |         |    2 | 00/09A8 : A5 07       |                  lda          {$06}+1              
  565 |  1 asmdemo.s    257 | Code        | 11 |         |    2 | 00/09AA : 69 00       |                  adc          #0                   
  566 |  1 asmdemo.s    258 | Code        | 11 |         |    2 | 00/09AC : 85 07       |                  sta          {$06}+1              
  567 |  1 asmdemo.s    259 | Code        | 11 |         |    3 | 00/09AE : CE 4C 1C    |                  dec          nbpt                 
  568 |  1 asmdemo.s    260 | Code        | 11 |         |    2 | 00/09B1 : F0 03       |                  beq          ozunid_1             
  569 |  1 asmdemo.s    261 | Code        | 11 |         |    3 | 00/09B3 : 4C F8 08    |                  jmp          mvpt                 
  570 |  1 asmdemo.s    262 | Code        | 11 |         |    1 | 00/09B6 : 60          | ozunid_1         rts                               
  571 |  1 asmdemo.s    263 | Empty       | 11 |         |    0 | 00/09B7               |                                                    
  572 |  1 asmdemo.s    264 | Empty       | 11 |         |    0 | 00/09B7               | Quitprog                                           
  573 |  1 asmdemo.s    265 | Comment     | 11 |         |    0 | 00/09B7               |                 ;jsr rstZP
  574 |  1 asmdemo.s    266 | Code        | 11 |         |    3 | 00/09B7 : 20 39 FB    |                  jsr          $fb39                ; SETTXT
  575 |  1 asmdemo.s    267 | Code        | 11 |         |    2 | 00/09BA : A9 03       |                  lda          #3                   
  576 |  1 asmdemo.s    268 | Code        | 11 |         |    3 | 00/09BC : 20 95 FE    |                  jsr          $FE95                ; OUTPRT
  577 |  1 asmdemo.s    269 | Comment     | 11 |         |    0 | 00/09BF               |                 * https://retrocomputing.stackexchange.com/questions/19681/apple-ii-toggles-between-40-and-80-columns-in-assembly-language-apple-iic
  578 |  1 asmdemo.s    270 | Code        | 11 |         |    2 | 00/09BF : A9 15       |                  lda          #21                  ; to turn off 80 col. firmware
  579 |  1 asmdemo.s    271 | Comment     | 11 |         |    0 | 00/09C1               |                 ;lda #17                       ; to swith to 40 col.
  580 |  1 asmdemo.s    272 | Comment     | 11 |         |    0 | 00/09C1               |                 ;lda #18                       ; to swith to 80 col.
  581 |  1 asmdemo.s    273 | Code        | 11 |         |    3 | 00/09C1 : 20 ED FD    |                  jsr          {$FDED}              ; to turn off 80 col.firmware
  582 |  1 asmdemo.s    274 | Comment     | 11 |         |    0 | 00/09C4               |                 ;lda #0                          ; for next call. See https://6502disassembly.com/a2-rom/Applesoft.html
  583 |  1 asmdemo.s    275 | Comment     | 11 |         |    0 | 00/09C4               |                 ;jsr $d649                       ; "NEW" Applesoft command (otherwise LIST command will crash)
  584 |  1 asmdemo.s    276 | Empty       | 11 |         |    0 | 00/09C4               |                                                    
  585 |  1 asmdemo.s    277 | Code        | 11 |         |    1 | 00/09C4 : 60          |                  rts                               
  586 |  1 asmdemo.s    278 | Empty       | 11 |         |    0 | 00/09C5               |                                                    
  587 |  1 asmdemo.s    279 | Comment     | 11 |         |    0 | 00/09C5               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
  588 |  1 asmdemo.s    280 | Empty       | 11 |         |    0 | 00/09C5               | PopTab                                             ; populate table of points
  589 |  1 asmdemo.s    281 | Macro       | 11 |         |    0 | 00/09C5               |                  movInt       Point1;curptX+2      ; init curptX, integer part
  590 |  1 asmdemo.s    281 | Code        | 11 |         |    3 | 00/09C5 : AD 52 1C    |                  lda          Point1               
  591 |  1 asmdemo.s    281 | Code        | 11 |         |    3 | 00/09C8 : 8D 3C 18    |                  sta          curptX+2             
  592 |  1 asmdemo.s    281 | Code        | 11 |         |    3 | 00/09CB : AD 53 1C    |                  lda          Point1+1             
  593 |  1 asmdemo.s    281 | Code        | 11 |         |    3 | 00/09CE : 8D 3D 18    |                  sta          curptX+2+1           
  594 |  1 asmdemo.s    282 | Macro       | 11 |         |    0 | 00/09D1               |                  movInt       Point1+2;curptY+2    ; init curptY, integer part
  595 |  1 asmdemo.s    282 | Code        | 11 |         |    3 | 00/09D1 : AD 54 1C    |                  lda          Point1+2             
  596 |  1 asmdemo.s    282 | Code        | 11 |         |    3 | 00/09D4 : 8D 40 18    |                  sta          curptY+2             
  597 |  1 asmdemo.s    282 | Code        | 11 |         |    3 | 00/09D7 : AD 55 1C    |                  lda          Point1+2+1           
  598 |  1 asmdemo.s    282 | Code        | 11 |         |    3 | 00/09DA : 8D 41 18    |                  sta          curptY+2+1           
  599 |  1 asmdemo.s    283 | Empty       | 11 |         |    0 | 00/09DD               |                                                    
  600 |  1 asmdemo.s    284 | Macro       | 11 |         |    0 | 00/09DD               |                  movInt       Point1;theopt        ; init 1st element of table (X coordinate)
  601 |  1 asmdemo.s    284 | Code        | 11 |         |    3 | 00/09DD : AD 52 1C    |                  lda          Point1               
  602 |  1 asmdemo.s    284 | Code        | 11 |         |    3 | 00/09E0 : 8D 4C 18    |                  sta          theopt               
  603 |  1 asmdemo.s    284 | Code        | 11 |         |    3 | 00/09E3 : AD 53 1C    |                  lda          Point1+1             
  604 |  1 asmdemo.s    284 | Code        | 11 |         |    3 | 00/09E6 : 8D 4D 18    |                  sta          theopt+1             
  605 |  1 asmdemo.s    285 | Macro       | 11 |         |    0 | 00/09E9               |                  movInt       Point1+2;theopt+2    ; init 1st element of table (X coordinate)
  606 |  1 asmdemo.s    285 | Code        | 11 |         |    3 | 00/09E9 : AD 54 1C    |                  lda          Point1+2             
  607 |  1 asmdemo.s    285 | Code        | 11 |         |    3 | 00/09EC : 8D 4E 18    |                  sta          theopt+2             
  608 |  1 asmdemo.s    285 | Code        | 11 |         |    3 | 00/09EF : AD 55 1C    |                  lda          Point1+2+1           
  609 |  1 asmdemo.s    285 | Code        | 11 |         |    3 | 00/09F2 : 8D 4F 18    |                  sta          theopt+2+1           
  610 |  1 asmdemo.s    286 | Empty       | 11 |         |    0 | 00/09F5               |                                                    
  611 |  1 asmdemo.s    287 | Code        | 11 |         |    2 | 00/09F5 : A9 4C       |                  lda          #<theopt             ; int ptr to point to theopt+4
  612 |  1 asmdemo.s    288 | Code        | 11 |         |    1 | 00/09F7 : 18          |                  clc                               
  613 |  1 asmdemo.s    289 | Code        | 11 |         |    2 | 00/09F8 : 69 04       |                  adc          #4                   
  614 |  1 asmdemo.s    290 | Code        | 11 |         |    2 | 00/09FA : 85 06       |                  sta          {$06}                
  615 |  1 asmdemo.s    291 | Code        | 11 |         |    2 | 00/09FC : A9 18       |                  lda          #>theopt             
  616 |  1 asmdemo.s    292 | Code        | 11 |         |    2 | 00/09FE : 69 00       |                  adc          #0                   
  617 |  1 asmdemo.s    293 | Code        | 11 |         |    2 | 00/0A00 : 85 07       |                  sta          {$06}+1              
  618 |  1 asmdemo.s    294 | Empty       | 11 |         |    0 | 00/0A02               |                                                    
  619 |  1 asmdemo.s    295 | Empty       | 11 |         |    0 | 00/0A02               | loopPokeTab                                        
  620 |  1 asmdemo.s    296 | Code        | 11 |         |    3 | 00/0A02 : AD 42 18    |                  lda          signX                
  621 |  1 asmdemo.s    297 | Code        | 11 |         |    2 | 00/0A05 : D0 28       |                  bne          dosubx               
  622 |  1 asmdemo.s    298 | Macro       | 11 |         |    0 | 00/0A07               |                  addInt32     curptX;XincDec       ; add X increment to curptX (integer and decimal parts)
  623 |  1 asmdemo.s    298 | Code        | 11 |         |    1 | 00/0A07 : 18          |                  clc                               
  624 |  1 asmdemo.s    298 | Code        | 11 |         |    3 | 00/0A08 : AD 3A 18    |                  lda          curptX               
  625 |  1 asmdemo.s    298 | Code        | 11 |         |    3 | 00/0A0B : 6D 44 18    |                  adc          XincDec              
  626 |  1 asmdemo.s    298 | Code        | 11 |         |    3 | 00/0A0E : 8D 3A 18    |                  sta          curptX               
  627 |  1 asmdemo.s    298 | Code        | 11 |         |    3 | 00/0A11 : AD 3B 18    |                  lda          curptX+1             
  628 |  1 asmdemo.s    298 | Code        | 11 |         |    3 | 00/0A14 : 6D 45 18    |                  adc          XincDec+1            
  629 |  1 asmdemo.s    298 | Code        | 11 |         |    3 | 00/0A17 : 8D 3B 18    |                  sta          curptX+1             
  630 |  1 asmdemo.s    298 | Code        | 11 |         |    3 | 00/0A1A : AD 3C 18    |                  lda          curptX+2             
  631 |  1 asmdemo.s    298 | Code        | 11 |         |    3 | 00/0A1D : 6D 46 18    |                  adc          XincDec+2            
  632 |  1 asmdemo.s    298 | Code        | 11 |         |    3 | 00/0A20 : 8D 3C 18    |                  sta          curptX+2             
  633 |  1 asmdemo.s    298 | Code        | 11 |         |    3 | 00/0A23 : AD 3D 18    |                  lda          curptX+3             
  634 |  1 asmdemo.s    298 | Code        | 11 |         |    3 | 00/0A26 : 6D 47 18    |                  adc          XincDec+3            
  635 |  1 asmdemo.s    298 | Code        | 11 |         |    3 | 00/0A29 : 8D 3D 18    |                  sta          curptX+3             
  636 |  1 asmdemo.s    299 | Code        | 11 |         |    3 | 00/0A2C : 4C 54 0A    |                  jmp          ynow                 
  637 |  1 asmdemo.s    300 | Macro       | 11 |         |    0 | 00/0A2F               | dosubx           subInt32     curptX;XincDec       
  638 |  1 asmdemo.s    300 | Code        | 11 |         |    1 | 00/0A2F : 38          |                  sec                               
  639 |  1 asmdemo.s    300 | Code        | 11 |         |    3 | 00/0A30 : AD 3A 18    |                  lda          curptX               
  640 |  1 asmdemo.s    300 | Code        | 11 |         |    3 | 00/0A33 : ED 44 18    |                  sbc          XincDec              
  641 |  1 asmdemo.s    300 | Code        | 11 |         |    3 | 00/0A36 : 8D 3A 18    |                  sta          curptX               
  642 |  1 asmdemo.s    300 | Code        | 11 |         |    3 | 00/0A39 : AD 3B 18    |                  lda          curptX+1             
  643 |  1 asmdemo.s    300 | Code        | 11 |         |    3 | 00/0A3C : ED 45 18    |                  sbc          XincDec+1            
  644 |  1 asmdemo.s    300 | Code        | 11 |         |    3 | 00/0A3F : 8D 3B 18    |                  sta          curptX+1             
  645 |  1 asmdemo.s    300 | Code        | 11 |         |    3 | 00/0A42 : AD 3C 18    |                  lda          curptX+2             
  646 |  1 asmdemo.s    300 | Code        | 11 |         |    3 | 00/0A45 : ED 46 18    |                  sbc          XincDec+2            
  647 |  1 asmdemo.s    300 | Code        | 11 |         |    3 | 00/0A48 : 8D 3C 18    |                  sta          curptX+2             
  648 |  1 asmdemo.s    300 | Code        | 11 |         |    3 | 00/0A4B : AD 3D 18    |                  lda          curptX+3             
  649 |  1 asmdemo.s    300 | Code        | 11 |         |    3 | 00/0A4E : ED 47 18    |                  sbc          XincDec+3            
  650 |  1 asmdemo.s    300 | Code        | 11 |         |    3 | 00/0A51 : 8D 3D 18    |                  sta          curptX+3             
  651 |  1 asmdemo.s    301 | Empty       | 11 |         |    0 | 00/0A54               |                                                    
  652 |  1 asmdemo.s    302 | Empty       | 11 |         |    0 | 00/0A54               | ynow                                               
  653 |  1 asmdemo.s    303 | Code        | 11 |         |    3 | 00/0A54 : AD 43 18    |                  lda          signY                
  654 |  1 asmdemo.s    304 | Code        | 11 |         |    2 | 00/0A57 : D0 28       |                  bne          dosuby               
  655 |  1 asmdemo.s    305 | Macro       | 11 |         |    0 | 00/0A59               |                  addInt32     curptY;YincDec       ; add Y increment to curptY (integer and decimal parts)
  656 |  1 asmdemo.s    305 | Code        | 11 |         |    1 | 00/0A59 : 18          |                  clc                               
  657 |  1 asmdemo.s    305 | Code        | 11 |         |    3 | 00/0A5A : AD 3E 18    |                  lda          curptY               
  658 |  1 asmdemo.s    305 | Code        | 11 |         |    3 | 00/0A5D : 6D 48 18    |                  adc          YincDec              
  659 |  1 asmdemo.s    305 | Code        | 11 |         |    3 | 00/0A60 : 8D 3E 18    |                  sta          curptY               
  660 |  1 asmdemo.s    305 | Code        | 11 |         |    3 | 00/0A63 : AD 3F 18    |                  lda          curptY+1             
  661 |  1 asmdemo.s    305 | Code        | 11 |         |    3 | 00/0A66 : 6D 49 18    |                  adc          YincDec+1            
  662 |  1 asmdemo.s    305 | Code        | 11 |         |    3 | 00/0A69 : 8D 3F 18    |                  sta          curptY+1             
  663 |  1 asmdemo.s    305 | Code        | 11 |         |    3 | 00/0A6C : AD 40 18    |                  lda          curptY+2             
  664 |  1 asmdemo.s    305 | Code        | 11 |         |    3 | 00/0A6F : 6D 4A 18    |                  adc          YincDec+2            
  665 |  1 asmdemo.s    305 | Code        | 11 |         |    3 | 00/0A72 : 8D 40 18    |                  sta          curptY+2             
  666 |  1 asmdemo.s    305 | Code        | 11 |         |    3 | 00/0A75 : AD 41 18    |                  lda          curptY+3             
  667 |  1 asmdemo.s    305 | Code        | 11 |         |    3 | 00/0A78 : 6D 4B 18    |                  adc          YincDec+3            
  668 |  1 asmdemo.s    305 | Code        | 11 |         |    3 | 00/0A7B : 8D 41 18    |                  sta          curptY+3             
  669 |  1 asmdemo.s    306 | Code        | 11 |         |    3 | 00/0A7E : 4C A6 0A    |                  jmp          oknow                
  670 |  1 asmdemo.s    307 | Empty       | 11 |         |    0 | 00/0A81               | dosuby                                             
  671 |  1 asmdemo.s    308 | Macro       | 11 |         |    0 | 00/0A81               |                  subInt32     curptY;YincDec       
  672 |  1 asmdemo.s    308 | Code        | 11 |         |    1 | 00/0A81 : 38          |                  sec                               
  673 |  1 asmdemo.s    308 | Code        | 11 |         |    3 | 00/0A82 : AD 3E 18    |                  lda          curptY               
  674 |  1 asmdemo.s    308 | Code        | 11 |         |    3 | 00/0A85 : ED 48 18    |                  sbc          YincDec              
  675 |  1 asmdemo.s    308 | Code        | 11 |         |    3 | 00/0A88 : 8D 3E 18    |                  sta          curptY               
  676 |  1 asmdemo.s    308 | Code        | 11 |         |    3 | 00/0A8B : AD 3F 18    |                  lda          curptY+1             
  677 |  1 asmdemo.s    308 | Code        | 11 |         |    3 | 00/0A8E : ED 49 18    |                  sbc          YincDec+1            
  678 |  1 asmdemo.s    308 | Code        | 11 |         |    3 | 00/0A91 : 8D 3F 18    |                  sta          curptY+1             
  679 |  1 asmdemo.s    308 | Code        | 11 |         |    3 | 00/0A94 : AD 40 18    |                  lda          curptY+2             
  680 |  1 asmdemo.s    308 | Code        | 11 |         |    3 | 00/0A97 : ED 4A 18    |                  sbc          YincDec+2            
  681 |  1 asmdemo.s    308 | Code        | 11 |         |    3 | 00/0A9A : 8D 40 18    |                  sta          curptY+2             
  682 |  1 asmdemo.s    308 | Code        | 11 |         |    3 | 00/0A9D : AD 41 18    |                  lda          curptY+3             
  683 |  1 asmdemo.s    308 | Code        | 11 |         |    3 | 00/0AA0 : ED 4B 18    |                  sbc          YincDec+3            
  684 |  1 asmdemo.s    308 | Code        | 11 |         |    3 | 00/0AA3 : 8D 41 18    |                  sta          curptY+3             
  685 |  1 asmdemo.s    309 | Empty       | 11 |         |    0 | 00/0AA6               | oknow                                              
  686 |  1 asmdemo.s    310 | Code        | 11 |         |    2 | 00/0AA6 : A0 00       |                  ldy          #0                   ; copy integer part of curptX to table
  687 |  1 asmdemo.s    311 | Code        | 11 |         |    3 | 00/0AA8 : AD 3C 18    |                  lda          curptX+2             
  688 |  1 asmdemo.s    312 | Code        | 11 |         |    2 | 00/0AAB : 91 06       |                  sta          ({$06}),y            
  689 |  1 asmdemo.s    313 | Code        | 11 |         |    1 | 00/0AAD : C8          |                  iny                               
  690 |  1 asmdemo.s    314 | Code        | 11 |         |    3 | 00/0AAE : AD 3D 18    |                  lda          curptX+3             
  691 |  1 asmdemo.s    315 | Code        | 11 |         |    2 | 00/0AB1 : 91 06       |                  sta          ({$06}),y            
  692 |  1 asmdemo.s    316 | Empty       | 11 |         |    0 | 00/0AB3               |                                                    
  693 |  1 asmdemo.s    317 | Code        | 11 |         |    2 | 00/0AB3 : A5 06       |                  lda          {$06}                ; inc ptr
  694 |  1 asmdemo.s    318 | Code        | 11 |         |    1 | 00/0AB5 : 18          |                  clc                               
  695 |  1 asmdemo.s    319 | Code        | 11 |         |    2 | 00/0AB6 : 69 02       |                  adc          #2                   
  696 |  1 asmdemo.s    320 | Code        | 11 |         |    2 | 00/0AB8 : 85 06       |                  sta          {$06}                
  697 |  1 asmdemo.s    321 | Code        | 11 |         |    2 | 00/0ABA : A5 07       |                  lda          {$06}+1              
  698 |  1 asmdemo.s    322 | Code        | 11 |         |    2 | 00/0ABC : 69 00       |                  adc          #0                   
  699 |  1 asmdemo.s    323 | Code        | 11 |         |    2 | 00/0ABE : 85 07       |                  sta          {$06}+1              
  700 |  1 asmdemo.s    324 | Empty       | 11 |         |    0 | 00/0AC0               |                                                    
  701 |  1 asmdemo.s    325 | Code        | 11 |         |    2 | 00/0AC0 : A0 00       |                  ldy          #0                   ; copy integer part of curptY to table
  702 |  1 asmdemo.s    326 | Code        | 11 |         |    3 | 00/0AC2 : AD 40 18    |                  lda          curptY+2             
  703 |  1 asmdemo.s    327 | Code        | 11 |         |    2 | 00/0AC5 : 91 06       |                  sta          ({$06}),y            
  704 |  1 asmdemo.s    328 | Code        | 11 |         |    1 | 00/0AC7 : C8          |                  iny                               
  705 |  1 asmdemo.s    329 | Code        | 11 |         |    3 | 00/0AC8 : AD 41 18    |                  lda          curptY+3             
  706 |  1 asmdemo.s    330 | Code        | 11 |         |    2 | 00/0ACB : 91 06       |                  sta          ({$06}),y            
  707 |  1 asmdemo.s    331 | Empty       | 11 |         |    0 | 00/0ACD               |                                                    
  708 |  1 asmdemo.s    332 | Code        | 11 |         |    2 | 00/0ACD : A5 06       |                  lda          {$06}                ; inc ptr
  709 |  1 asmdemo.s    333 | Code        | 11 |         |    1 | 00/0ACF : 18          |                  clc                               
  710 |  1 asmdemo.s    334 | Code        | 11 |         |    2 | 00/0AD0 : 69 02       |                  adc          #2                   
  711 |  1 asmdemo.s    335 | Code        | 11 |         |    2 | 00/0AD2 : 85 06       |                  sta          {$06}                
  712 |  1 asmdemo.s    336 | Code        | 11 |         |    2 | 00/0AD4 : A5 07       |                  lda          {$06}+1              
  713 |  1 asmdemo.s    337 | Code        | 11 |         |    2 | 00/0AD6 : 69 00       |                  adc          #0                   
  714 |  1 asmdemo.s    338 | Code        | 11 |         |    2 | 00/0AD8 : 85 07       |                  sta          {$06}+1              
  715 |  1 asmdemo.s    339 | Empty       | 11 |         |    0 | 00/0ADA               |                                                    
  716 |  1 asmdemo.s    340 | Code        | 11 |         |    3 | 00/0ADA : CE 4C 1C    |                  dec          nbpt                 
  717 |  1 asmdemo.s    341 | Code        | 11 |         |    2 | 00/0ADD : F0 03       |                  beq          endpoptable          
  718 |  1 asmdemo.s    342 | Code        | 11 |         |    3 | 00/0ADF : 4C 02 0A    |                  jmp          loopPokeTab          
  719 |  1 asmdemo.s    343 | Empty       | 11 |         |    0 | 00/0AE2               | endpoptable                                        
  720 |  1 asmdemo.s    344 | Code        | 11 |         |    1 | 00/0AE2 : 60          |                  rts                               
  721 |  1 asmdemo.s    345 | Empty       | 11 |         |    0 | 00/0AE3               |                                                    
  722 |  1 asmdemo.s    346 | Comment     | 11 |         |    0 | 00/0AE3               | *
  723 |  1 asmdemo.s    347 | Comment     | 11 |         |    0 | 00/0AE3               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  724 |  1 asmdemo.s    348 | Comment     | 11 |         |    0 | 00/0AE3               | *
  725 |  1 asmdemo.s    349 | Comment     | 11 |         |    0 | 00/0AE3               | * On keypressed, modify vars
  726 |  1 asmdemo.s    350 | Comment     | 11 |         |    0 | 00/0AE3               | *
  727 |  1 asmdemo.s    351 | Equivalence | 11 |         |    0 | 00/0AE3               | maxvardef        equ          3                    
  728 |  1 asmdemo.s    352 | Equivalence | 11 |         |    0 | 00/0AE3               | seglengthdef     equ          8                    
  729 |  1 asmdemo.s    353 | Equivalence | 11 |         |    0 | 00/0AE3               | pensizeXdef      equ          2                    
  730 |  1 asmdemo.s    354 | Equivalence | 11 |         |    0 | 00/0AE3               | pensizeYdef      equ          1                    
  731 |  1 asmdemo.s    355 | Empty       | 11 |         |    0 | 00/0AE3               |                                                    
  732 |  1 asmdemo.s    356 | Equivalence | 11 |         |    0 | 00/0AE3               | seglengthmax     equ          100                  
  733 |  1 asmdemo.s    357 | Equivalence | 11 |         |    0 | 00/0AE3               | seglengthmin     equ          3                    
  734 |  1 asmdemo.s    358 | Equivalence | 11 |         |    0 | 00/0AE3               | maxvarmax        equ          50                   
  735 |  1 asmdemo.s    359 | Equivalence | 11 |         |    0 | 00/0AE3               | maxvarmin        equ          3                    
  736 |  1 asmdemo.s    360 | Empty       | 11 |         |    0 | 00/0AE3               |                                                    
  737 |  1 asmdemo.s    361 | Equivalence | 11 |         |    0 | 00/0AE3               | pensizeXmax      equ          12                   
  738 |  1 asmdemo.s    362 | Equivalence | 11 |         |    0 | 00/0AE3               | pensizeXmin      equ          1                    
  739 |  1 asmdemo.s    363 | Equivalence | 11 |         |    0 | 00/0AE3               | pensizeYmax      equ          12                   
  740 |  1 asmdemo.s    364 | Equivalence | 11 |         |    0 | 00/0AE3               | pensizeYmin      equ          1                    
  741 |  1 asmdemo.s    365 | Empty       | 11 |         |    0 | 00/0AE3               |                                                    
  742 |  1 asmdemo.s    366 | Empty       | 11 |         |    0 | 00/0AE3               | AdjutVars                                          
  743 |  1 asmdemo.s    367 | Code        | 11 |         |    2 | 00/0AE3 : C9 4F       |                  cmp          #'O'                 ; O : reset original values
  744 |  1 asmdemo.s    368 | Code        | 11 |         |    2 | 00/0AE5 : D0 15       |                  bne          notO                 
  745 |  1 asmdemo.s    369 | Code        | 11 |         |    2 | 00/0AE7 : A9 03       |                  lda          #{3}                 
  746 |  1 asmdemo.s    370 | Code        | 11 |         |    3 | 00/0AE9 : 8D 6C 1C    |                  sta          maxvar               
  747 |  1 asmdemo.s    371 | Code        | 11 |         |    2 | 00/0AEC : A9 08       |                  lda          #{8}                 
  748 |  1 asmdemo.s    372 | Code        | 11 |         |    3 | 00/0AEE : 8D 6D 1C    |                  sta          seglength            
  749 |  1 asmdemo.s    373 | Code        | 11 |         |    2 | 00/0AF1 : A9 02       |                  lda          #{2}                 
  750 |  1 asmdemo.s    374 | Code        | 11 |         |    3 | 00/0AF3 : 8D B6 1C    |                  sta          pensize2             
  751 |  1 asmdemo.s    375 | Code        | 11 |         |    2 | 00/0AF6 : A9 01       |                  lda          #{1}                 
  752 |  1 asmdemo.s    376 | Code        | 11 |         |    3 | 00/0AF8 : 8D B7 1C    |                  sta          pensize2+1           
  753 |  1 asmdemo.s    377 | Code        | 11 |         |    1 | 00/0AFB : 60          |                  rts                               
  754 |  1 asmdemo.s    378 | Empty       | 11 |         |    0 | 00/0AFC               |                                                    
  755 |  1 asmdemo.s    379 | Code        | 11 |         |    2 | 00/0AFC : C9 58       | notO             cmp          #'X'                 ; X : pensize.x bigger
  756 |  1 asmdemo.s    380 | Code        | 11 |         |    2 | 00/0AFE : D0 0B       |                  bne          notX                 
  757 |  1 asmdemo.s    381 | Code        | 11 |         |    3 | 00/0B00 : AD B6 1C    |                  lda          pensize2             
  758 |  1 asmdemo.s    382 | Code        | 11 |         |    2 | 00/0B03 : C9 0C       |                  cmp          #{12}                
  759 |  1 asmdemo.s    383 | Code        | 11 |         |    2 | 00/0B05 : B0 03       |                  bcs          psxmax               
  760 |  1 asmdemo.s    384 | Code        | 11 |         |    3 | 00/0B07 : EE B6 1C    |                  inc          pensize2             
  761 |  1 asmdemo.s    385 | Code        | 11 |         |    1 | 00/0B0A : 60          | psxmax           rts                               
  762 |  1 asmdemo.s    386 | Empty       | 11 |         |    0 | 00/0B0B               |                                                    
  763 |  1 asmdemo.s    387 | Code        | 11 |         |    2 | 00/0B0B : C9 57       | notX             cmp          #'W'                 ; W : pensize.x smaller
  764 |  1 asmdemo.s    388 | Code        | 11 |         |    2 | 00/0B0D : D0 0B       |                  bne          notW                 
  765 |  1 asmdemo.s    389 | Code        | 11 |         |    3 | 00/0B0F : AD B6 1C    |                  lda          pensize2             
  766 |  1 asmdemo.s    390 | Code        | 11 |         |    2 | 00/0B12 : C9 01       |                  cmp          #{1}                 
  767 |  1 asmdemo.s    391 | Code        | 11 |         |    2 | 00/0B14 : F0 03       |                  beq          psxmin               
  768 |  1 asmdemo.s    392 | Code        | 11 |         |    3 | 00/0B16 : CE B6 1C    |                  dec          pensize2             
  769 |  1 asmdemo.s    393 | Code        | 11 |         |    1 | 00/0B19 : 60          | psxmin           rts                               
  770 |  1 asmdemo.s    394 | Empty       | 11 |         |    0 | 00/0B1A               |                                                    
  771 |  1 asmdemo.s    395 | Code        | 11 |         |    2 | 00/0B1A : C9 59       | notW             cmp          #'Y'                 ; Y : pensize.y bigger
  772 |  1 asmdemo.s    396 | Code        | 11 |         |    2 | 00/0B1C : D0 0B       |                  bne          notY                 
  773 |  1 asmdemo.s    397 | Code        | 11 |         |    3 | 00/0B1E : AD B7 1C    |                  lda          pensize2+1           
  774 |  1 asmdemo.s    398 | Code        | 11 |         |    2 | 00/0B21 : C9 0C       |                  cmp          #{12}                
  775 |  1 asmdemo.s    399 | Code        | 11 |         |    2 | 00/0B23 : B0 03       |                  bcs          psymax               
  776 |  1 asmdemo.s    400 | Code        | 11 |         |    3 | 00/0B25 : EE B7 1C    |                  inc          pensize2+1           
  777 |  1 asmdemo.s    401 | Code        | 11 |         |    1 | 00/0B28 : 60          | psymax           rts                               
  778 |  1 asmdemo.s    402 | Empty       | 11 |         |    0 | 00/0B29               |                                                    
  779 |  1 asmdemo.s    403 | Code        | 11 |         |    2 | 00/0B29 : C9 55       | notY             cmp          #'U'                 ; U : pensize.y smaller
  780 |  1 asmdemo.s    404 | Code        | 11 |         |    2 | 00/0B2B : D0 0B       |                  bne          notU                 
  781 |  1 asmdemo.s    405 | Code        | 11 |         |    3 | 00/0B2D : AD B7 1C    |                  lda          pensize2+1           
  782 |  1 asmdemo.s    406 | Code        | 11 |         |    2 | 00/0B30 : C9 01       |                  cmp          #{1}                 
  783 |  1 asmdemo.s    407 | Code        | 11 |         |    2 | 00/0B32 : F0 03       |                  beq          psymin               
  784 |  1 asmdemo.s    408 | Code        | 11 |         |    3 | 00/0B34 : CE B7 1C    |                  dec          pensize2+1           
  785 |  1 asmdemo.s    409 | Code        | 11 |         |    1 | 00/0B37 : 60          | psymin           rts                               
  786 |  1 asmdemo.s    410 | Empty       | 11 |         |    0 | 00/0B38               |                                                    
  787 |  1 asmdemo.s    411 | Code        | 11 |         |    2 | 00/0B38 : C9 53       | notU             cmp          #'S'                 ; S : segments smaller
  788 |  1 asmdemo.s    412 | Code        | 11 |         |    2 | 00/0B3A : D0 0B       |                  bne          notS                 
  789 |  1 asmdemo.s    413 | Code        | 11 |         |    3 | 00/0B3C : AD 6D 1C    |                  lda          seglength            
  790 |  1 asmdemo.s    414 | Code        | 11 |         |    2 | 00/0B3F : C9 64       |                  cmp          #{100}               
  791 |  1 asmdemo.s    415 | Code        | 11 |         |    2 | 00/0B41 : B0 2F       |                  bcs          notL                 
  792 |  1 asmdemo.s    416 | Code        | 11 |         |    3 | 00/0B43 : EE 6D 1C    |                  inc          seglength            
  793 |  1 asmdemo.s    417 | Code        | 11 |         |    1 | 00/0B46 : 60          |                  rts                               
  794 |  1 asmdemo.s    418 | Empty       | 11 |         |    0 | 00/0B47               |                                                    
  795 |  1 asmdemo.s    419 | Code        | 11 |         |    2 | 00/0B47 : C9 44       | notS             cmp          #'D'                 ; D : segments longer
  796 |  1 asmdemo.s    420 | Code        | 11 |         |    2 | 00/0B49 : D0 0A       |                  bne          notD                 
  797 |  1 asmdemo.s    421 | Code        | 11 |         |    3 | 00/0B4B : AD 6D 1C    |                  lda          seglength            
  798 |  1 asmdemo.s    422 | Code        | 11 |         |    2 | 00/0B4E : C9 03       |                  cmp          #{3}                 
  799 |  1 asmdemo.s    423 | Code        | 11 |         |    2 | 00/0B50 : 90 20       |                  bcc          notL                 
  800 |  1 asmdemo.s    424 | Code        | 11 |         |    3 | 00/0B52 : CE 6D 1C    |                  dec          seglength            
  801 |  1 asmdemo.s    425 | Empty       | 11 |         |    0 | 00/0B55               |                                                    
  802 |  1 asmdemo.s    426 | Code        | 11 |         |    2 | 00/0B55 : C9 4D       | notD             cmp          #'M'                 ; M : bigger variations
  803 |  1 asmdemo.s    427 | Code        | 11 |         |    2 | 00/0B57 : D0 0B       |                  bne          notM                 
  804 |  1 asmdemo.s    428 | Code        | 11 |         |    3 | 00/0B59 : AD 6C 1C    |                  lda          maxvar               
  805 |  1 asmdemo.s    429 | Code        | 11 |         |    2 | 00/0B5C : C9 32       |                  cmp          #{50}                
  806 |  1 asmdemo.s    430 | Code        | 11 |         |    2 | 00/0B5E : B0 12       |                  bcs          notL                 
  807 |  1 asmdemo.s    431 | Code        | 11 |         |    3 | 00/0B60 : EE 6C 1C    |                  inc          maxvar               
  808 |  1 asmdemo.s    432 | Code        | 11 |         |    1 | 00/0B63 : 60          |                  rts                               
  809 |  1 asmdemo.s    433 | Empty       | 11 |         |    0 | 00/0B64               |                                                    
  810 |  1 asmdemo.s    434 | Code        | 11 |         |    2 | 00/0B64 : C9 4C       | notM             cmp          #'L'                 ; L : smaller variations
  811 |  1 asmdemo.s    435 | Code        | 11 |         |    2 | 00/0B66 : D0 0A       |                  bne          notL                 
  812 |  1 asmdemo.s    436 | Code        | 11 |         |    3 | 00/0B68 : AD 6C 1C    |                  lda          maxvar               
  813 |  1 asmdemo.s    437 | Code        | 11 |         |    2 | 00/0B6B : C9 03       |                  cmp          #{3}                 
  814 |  1 asmdemo.s    438 | Code        | 11 |         |    2 | 00/0B6D : 90 03       |                  bcc          notL                 
  815 |  1 asmdemo.s    439 | Code        | 11 |         |    3 | 00/0B6F : CE 6C 1C    |                  dec          maxvar               
  816 |  1 asmdemo.s    440 | Code        | 11 |         |    1 | 00/0B72 : 60          | notL             rts                               
  817 |  1 asmdemo.s    441 | Comment     | 11 |         |    0 | 00/0B73               | *
  818 |  1 asmdemo.s    442 | Comment     | 11 |         |    0 | 00/0B73               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  819 |  1 asmdemo.s    443 | Comment     | 11 |         |    0 | 00/0B73               | *
  820 |  1 asmdemo.s    444 | Empty       | 11 |         |    0 | 00/0B73               | ClearIt                                            ; fill port with black
  821 |  1 asmdemo.s    445 | Code        | 11 |         |    2 | 00/0B73 : B0 19       |                  bcs          ozunid_2             
  822 |  1 asmdemo.s    446 | Macro       | 11 |         |    0 | 00/0B75               |                  GP_call      {{{{{{{1}+1}+1}+1}+1}+1}+1};ModeCopy; pen + destination = pen
  823 |  1 asmdemo.s    446 | Code        | 11 |         |    3 | 00/0B75 : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  824 |  1 asmdemo.s    446 | Data        | 11 |         |    1 | 00/0B78 : 07          |                  dfb          {{{{{{{1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  825 |  1 asmdemo.s    446 | Data        | 11 |         |    2 | 00/0B79 : B1 1C       |                  da           ModeCopy             ; address of parameter(s) (2 bytes), 0 if no paramter
  826 |  1 asmdemo.s    447 | Empty       | 11 |         |    0 | 00/0B7B               |                                                    
  827 |  1 asmdemo.s    448 | Macro       | 11 |         |    0 | 00/0B7B               |                  GP_call      {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1};Black; black (0,0,...)
  828 |  1 asmdemo.s    448 | Code        | 11 |         |    3 | 00/0B7B : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  829 |  1 asmdemo.s    448 | Data        | 11 |         |    1 | 00/0B7E : 08          |                  dfb          {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  830 |  1 asmdemo.s    448 | Data        | 11 |         |    2 | 00/0B7F : 9E 1C       |                  da           Black                ; address of parameter(s) (2 bytes), 0 if no paramter
  831 |  1 asmdemo.s    449 | Macro       | 11 |         |    0 | 00/0B81               |                  GP_call      {{{{{{{1}+1}+1}+1}+1}+1}+1};ModeCopy
  832 |  1 asmdemo.s    449 | Code        | 11 |         |    3 | 00/0B81 : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  833 |  1 asmdemo.s    449 | Data        | 11 |         |    1 | 00/0B84 : 07          |                  dfb          {{{{{{{1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  834 |  1 asmdemo.s    449 | Data        | 11 |         |    2 | 00/0B85 : B1 1C       |                  da           ModeCopy             ; address of parameter(s) (2 bytes), 0 if no paramter
  835 |  1 asmdemo.s    450 | Macro       | 11 |         |    0 | 00/0B87               |                  GP_call      {{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1};WowRect; paint very large rectangle in black
  836 |  1 asmdemo.s    450 | Code        | 11 |         |    3 | 00/0B87 : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  837 |  1 asmdemo.s    450 | Data        | 11 |         |    1 | 00/0B8A : 11          |                  dfb          {{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  838 |  1 asmdemo.s    450 | Data        | 11 |         |    2 | 00/0B8B : A1 0B       |                  da           WowRect              ; address of parameter(s) (2 bytes), 0 if no paramter
  839 |  1 asmdemo.s    451 | Code        | 11 |         |    1 | 00/0B8D : 60          |                  rts                               
  840 |  1 asmdemo.s    452 | Empty       | 11 |         |    0 | 00/0B8E               |                                                    
  841 |  1 asmdemo.s    453 | Macro       | 11 |         |    0 | 00/0B8E               | ozunid_2         GP_call      {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1};White
  842 |  1 asmdemo.s    453 | Code        | 11 |         |    3 | 00/0B8E : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  843 |  1 asmdemo.s    453 | Data        | 11 |         |    1 | 00/0B91 : 08          |                  dfb          {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  844 |  1 asmdemo.s    453 | Data        | 11 |         |    2 | 00/0B92 : A7 1C       |                  da           White                ; address of parameter(s) (2 bytes), 0 if no paramter
  845 |  1 asmdemo.s    454 | Macro       | 11 |         |    0 | 00/0B94               |                  GP_call      {{{{{{{1}+1}+1}+1}+1}+1}+1};ModeCopy
  846 |  1 asmdemo.s    454 | Code        | 11 |         |    3 | 00/0B94 : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  847 |  1 asmdemo.s    454 | Data        | 11 |         |    1 | 00/0B97 : 07          |                  dfb          {{{{{{{1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  848 |  1 asmdemo.s    454 | Data        | 11 |         |    2 | 00/0B98 : B1 1C       |                  da           ModeCopy             ; address of parameter(s) (2 bytes), 0 if no paramter
  849 |  1 asmdemo.s    455 | Macro       | 11 |         |    0 | 00/0B9A               |                  GP_call      {{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1};WowRect; paint very large rectangle in black
  850 |  1 asmdemo.s    455 | Code        | 11 |         |    3 | 00/0B9A : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  851 |  1 asmdemo.s    455 | Data        | 11 |         |    1 | 00/0B9D : 11          |                  dfb          {{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  852 |  1 asmdemo.s    455 | Data        | 11 |         |    2 | 00/0B9E : A1 0B       |                  da           WowRect              ; address of parameter(s) (2 bytes), 0 if no paramter
  853 |  1 asmdemo.s    456 | Comment     | 11 |         |    0 | 00/0BA0               |                 ;GP_call SetPattern;White                ; restore pattern to white (1,1,...)
  854 |  1 asmdemo.s    457 | Code        | 11 |         |    1 | 00/0BA0 : 60          |                  rts                               
  855 |  1 asmdemo.s    458 | Data        | 11 |         |    8 | 00/0BA1 : 00 00 00 00 | WowRect          dw           0,0,10000,10000      ; very large rectangle
      |                     |             |    |         |      |           10 27 10 27 |
  856 |  1 asmdemo.s    459 | Comment     | 11 |         |    0 | 00/0BA9               | *
  857 |  1 asmdemo.s    460 | Comment     | 11 |         |    0 | 00/0BA9               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  858 |  1 asmdemo.s    461 | Comment     | 11 |         |    0 | 00/0BA9               | *
  859 |  1 asmdemo.s    462 | Empty       | 11 |         |    0 | 00/0BA9               | Graf                                               
  860 |  1 asmdemo.s    463 | Macro       | 11 |         |    0 | 00/0BA9               |                  GP_call      {1};0                
  861 |  1 asmdemo.s    463 | Code        | 11 |         |    3 | 00/0BA9 : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  862 |  1 asmdemo.s    463 | Data        | 11 |         |    1 | 00/0BAC : 01          |                  dfb          {1}                  ; command ID (1 byte)
  863 |  1 asmdemo.s    463 | Data        | 11 |         |    2 | 00/0BAD : 00 00       |                  da           0                    ; address of parameter(s) (2 bytes), 0 if no paramter
  864 |  1 asmdemo.s    464 | Macro       | 11 |         |    0 | 00/0BAF               |                  GP_call      {{{1}+1}+1};ScreenPort; Set up ScreenPort for drawing onto screen
  865 |  1 asmdemo.s    464 | Code        | 11 |         |    3 | 00/0BAF : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  866 |  1 asmdemo.s    464 | Data        | 11 |         |    1 | 00/0BB2 : 03          |                  dfb          {{{1}+1}+1}          ; command ID (1 byte)
  867 |  1 asmdemo.s    464 | Data        | 11 |         |    2 | 00/0BB3 : 7A 1C       |                  da           ScreenPort           ; address of parameter(s) (2 bytes), 0 if no paramter
  868 |  1 asmdemo.s    465 | Macro       | 11 |         |    0 | 00/0BB5               |                  GP_call      {{{{1}+1}+1}+1};ScreenPort;  set grafport to screen
  869 |  1 asmdemo.s    465 | Code        | 11 |         |    3 | 00/0BB5 : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  870 |  1 asmdemo.s    465 | Data        | 11 |         |    1 | 00/0BB8 : 04          |                  dfb          {{{{1}+1}+1}+1}      ; command ID (1 byte)
  871 |  1 asmdemo.s    465 | Data        | 11 |         |    2 | 00/0BB9 : 7A 1C       |                  da           ScreenPort           ; address of parameter(s) (2 bytes), 0 if no paramter
  872 |  1 asmdemo.s    466 | Code        | 11 |         |    1 | 00/0BBB : 18          |                  clc                               ; flag : carry on : paint white else paint black
  873 |  1 asmdemo.s    467 | Code        | 11 |         |    3 | 00/0BBC : 20 73 0B    |                  jsr          ClearIt              
  874 |  1 asmdemo.s    468 | Macro       | 11 |         |    0 | 00/0BBF               |                  GP_call      {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1};White
  875 |  1 asmdemo.s    468 | Code        | 11 |         |    3 | 00/0BBF : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  876 |  1 asmdemo.s    468 | Data        | 11 |         |    1 | 00/0BC2 : 08          |                  dfb          {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  877 |  1 asmdemo.s    468 | Data        | 11 |         |    2 | 00/0BC3 : A7 1C       |                  da           White                ; address of parameter(s) (2 bytes), 0 if no paramter
  878 |  1 asmdemo.s    469 | Macro       | 11 |         |    0 | 00/0BC5               |                  GP_call      {{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1};pensize2; large width, to "make" square pixels
  879 |  1 asmdemo.s    469 | Code        | 11 |         |    3 | 00/0BC5 : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  880 |  1 asmdemo.s    469 | Data        | 11 |         |    1 | 00/0BC8 : 0A          |                  dfb          {{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  881 |  1 asmdemo.s    469 | Data        | 11 |         |    2 | 00/0BC9 : B6 1C       |                  da           pensize2             ; address of parameter(s) (2 bytes), 0 if no paramter
  882 |  1 asmdemo.s    470 | Code        | 11 |         |    1 | 00/0BCB : 60          |                  rts                               
  883 |  1 asmdemo.s    471 | Comment     | 11 |         |    0 | 00/0BCC               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  884 |  1 asmdemo.s    472 | Comment     | 11 |         |    0 | 00/0BCC               | * Quit proc.
  885 |  1 asmdemo.s    473 | Empty       | 11 |         |    0 | 00/0BCC               | ProDOSquit                                         
  886 |  1 asmdemo.s    474 | Comment     | 11 |         |    0 | 00/0BCC               |                 ;GP_call SetSwitches;Switch
  887 |  1 asmdemo.s    475 | Code        | 11 |         |    3 | 00/0BCC : 20 00 BF    |                  jsr          $BF00                ; ProDOS Quit
  888 |  1 asmdemo.s    476 | Data        | 11 |         |    1 | 00/0BCF : 65          |                  dfb          $65                  
  889 |  1 asmdemo.s    477 | Data        | 11 |         |    2 | 00/0BD0 : 71 1C       |                  dw           QuitParams           
  890 |  1 asmdemo.s    478 | Code        | 11 |         |    1 | 00/0BD2 : 60          |                  rts                               
  891 |  1 asmdemo.s    479 | Comment     | 11 |         |    0 | 00/0BD3               | ;Switch          dfb 8
  892 |  1 asmdemo.s    480 | Empty       | 11 |         |    0 | 00/0BD3               |                                                    
  893 |  1 asmdemo.s    481 | Comment     | 11 |         |    0 | 00/0BD3               | * 
  894 |  1 asmdemo.s    482 | Comment     | 11 |         |    0 | 00/0BD3               | * * * * * * * * * * * * UTILITIES * * * * * * * * * * * *
  895 |  1 asmdemo.s    483 | Comment     | 11 |         |    0 | 00/0BD3               | *
  896 |  1 asmdemo.s    484 | Comment     | 11 |         |    0 | 00/0BD3               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
  897 |  1 asmdemo.s    485 | Comment     | 11 |         |    0 | 00/0BD3               | * Random number generator
  898 |  1 asmdemo.s    486 | Comment     | 11 |         |    0 | 00/0BD3               | *     
  899 |  1 asmdemo.s    487 | Data        | 11 |         |    1 | 00/0BD3 : 00          | R1               hex          00                   
  900 |  1 asmdemo.s    488 | Data        | 11 |         |    1 | 00/0BD4 : 00          | R2               hex          00                   
  901 |  1 asmdemo.s    489 | Data        | 11 |         |    1 | 00/0BD5 : 00          | R3               hex          00                   
  902 |  1 asmdemo.s    490 | Data        | 11 |         |    1 | 00/0BD6 : 00          | R4               hex          00                   
  903 |  1 asmdemo.s    491 | Comment     | 11 |         |    0 | 00/0BD7               | *
  904 |  1 asmdemo.s    492 | Code        | 11 |         |    3 | 00/0BD7 : 6E D6 0B    | random           ror          R4                   ; Bit 25 to carry
  905 |  1 asmdemo.s    493 | Code        | 11 |         |    3 | 00/0BDA : AD D5 0B    |                  lda          R3                   ; Shift left 8 bits
  906 |  1 asmdemo.s    494 | Code        | 11 |         |    3 | 00/0BDD : 8D D6 0B    |                  sta          R4                   
  907 |  1 asmdemo.s    495 | Code        | 11 |         |    3 | 00/0BE0 : AD D4 0B    |                  lda          R2                   
  908 |  1 asmdemo.s    496 | Code        | 11 |         |    3 | 00/0BE3 : 8D D5 0B    |                  sta          R3                   
  909 |  1 asmdemo.s    497 | Code        | 11 |         |    3 | 00/0BE6 : AD D3 0B    |                  lda          R1                   
  910 |  1 asmdemo.s    498 | Code        | 11 |         |    3 | 00/0BE9 : 8D D4 0B    |                  sta          R2                   
  911 |  1 asmdemo.s    499 | Code        | 11 |         |    3 | 00/0BEC : AD D6 0B    |                  lda          R4                   ; Get original bits 17-24
  912 |  1 asmdemo.s    500 | Code        | 11 |         |    1 | 00/0BEF : 6A          |                  ror                               ; Now bits 18-25 in ACC
  913 |  1 asmdemo.s    501 | Code        | 11 |         |    3 | 00/0BF0 : 2E D3 0B    |                  rol          R1                   ; R1 holds bits 1-7
  914 |  1 asmdemo.s    502 | Code        | 11 |         |    3 | 00/0BF3 : 4D D3 0B    |                  eor          R1                   ; Seven bits at once
  915 |  1 asmdemo.s    503 | Code        | 11 |         |    3 | 00/0BF6 : 6E D6 0B    |                  ror          R4                   ; Shift right by one bit
  916 |  1 asmdemo.s    504 | Code        | 11 |         |    3 | 00/0BF9 : 6E D5 0B    |                  ror          R3                   
  917 |  1 asmdemo.s    505 | Code        | 11 |         |    3 | 00/0BFC : 6E D4 0B    |                  ror          R2                   
  918 |  1 asmdemo.s    506 | Code        | 11 |         |    1 | 00/0BFF : 6A          |                  ror                               
  919 |  1 asmdemo.s    507 | Code        | 11 |         |    3 | 00/0C00 : 8D D3 0B    |                  sta          R1                   
  920 |  1 asmdemo.s    508 | Code        | 11 |         |    1 | 00/0C03 : 60          |                  rts                               
  921 |  1 asmdemo.s    509 | Comment     | 11 |         |    0 | 00/0C04               | *
  922 |  1 asmdemo.s    510 | Comment     | 11 |         |    0 | 00/0C04               | * Routine to seed the random number generator with a
  923 |  1 asmdemo.s    511 | Comment     | 11 |         |    0 | 00/0C04               | * reasonable initial value:
  924 |  1 asmdemo.s    512 | Comment     | 11 |         |    0 | 00/0C04               | *
  925 |  1 asmdemo.s    513 | Empty       | 11 |         |    0 | 00/0C04               | initrandom                                         
  926 |  1 asmdemo.s    514 | Comment     | 11 |         |    0 | 00/0C04               |         ; lda $4E      ; Seed the random number generator
  927 |  1 asmdemo.s    515 | Code        | 11 |         |    3 | 00/0C04 : AD 65 0C    |                  lda          rseed                
  928 |  1 asmdemo.s    516 | Code        | 11 |         |    3 | 00/0C07 : 8D D3 0B    |                  sta          R1                   ; based on delay between keypresses
  929 |  1 asmdemo.s    517 | Code        | 11 |         |    3 | 00/0C0A : 8D D5 0B    |                  sta          R3                   
  930 |  1 asmdemo.s    518 | Comment     | 11 |         |    0 | 00/0C0D               |         ; lda $4F
  931 |  1 asmdemo.s    519 | Code        | 11 |         |    3 | 00/0C0D : AD 66 0C    |                  lda          rseed+1              
  932 |  1 asmdemo.s    520 | Code        | 11 |         |    3 | 00/0C10 : 8D D4 0B    |                  sta          R2                   
  933 |  1 asmdemo.s    521 | Code        | 11 |         |    3 | 00/0C13 : 8D D6 0B    |                  sta          R4                   
  934 |  1 asmdemo.s    522 | Code        | 11 |         |    1 | 00/0C16 : 60          |                  rts                               
  935 |  1 asmdemo.s    523 | Comment     | 11 |         |    0 | 00/0C17               | *
  936 |  1 asmdemo.s    524 | Comment     | 11 |         |    0 | 00/0C17               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
  937 |  1 asmdemo.s    525 | Comment     | 11 |         |    0 | 00/0C17               | * print a string from stack
  938 |  1 asmdemo.s    526 | Comment     | 11 |         |    0 | 00/0C17               | *
  939 |  1 asmdemo.s    527 | Empty       | 11 |         |    0 | 00/0C17               | print                                              
  940 |  1 asmdemo.s    528 | Equivalence | 11 |         |    0 | 00/0C17               | stack            equ          $100                 
  941 |  1 asmdemo.s    529 | Comment     | 11 |         |    0 | 00/0C17               |                 ; init 
  942 |  1 asmdemo.s    530 | Code        | 11 |         |    1 | 00/0C17 : BA          |                  tsx                               
  943 |  1 asmdemo.s    531 | Code        | 11 |         |    3 | 00/0C18 : 8E 50 0C    |                  stx          savstack             ; save stack regiter
  944 |  1 asmdemo.s    532 | Code        | 11 |         |    1 | 00/0C1B : E8          |                  inx                               
  945 |  1 asmdemo.s    533 | Code        | 11 |         |    3 | 00/0C1C : BD 00 01    |                  lda          {$100},x             
  946 |  1 asmdemo.s    534 | Code        | 11 |         |    2 | 00/0C1F : 85 06       |                  sta          {$06}                
  947 |  1 asmdemo.s    535 | Code        | 11 |         |    3 | 00/0C21 : BD 01 01    |                  lda          {$100}+1,x           
  948 |  1 asmdemo.s    536 | Code        | 11 |         |    2 | 00/0C24 : 85 07       |                  sta          {$06}+1              
  949 |  1 asmdemo.s    537 | Empty       | 11 |         |    0 | 00/0C26               |                                                    
  950 |  1 asmdemo.s    538 | Comment     | 11 |         |    0 | 00/0C26               |                 ; get data and process
  951 |  1 asmdemo.s    539 | Code        | 11 |         |    2 | 00/0C26 : A0 01       |                  ldy          #$01                 
  952 |  1 asmdemo.s    540 | Code        | 11 |         |    2 | 00/0C28 : B1 06       |                  lda          ({$06}),y            ; get length of data
  953 |  1 asmdemo.s    541 | Code        | 11 |         |    3 | 00/0C2A : 8D 4F 0C    |                  sta          savlength            ; save it
  954 |  1 asmdemo.s    542 | Code        | 11 |         |    1 | 00/0C2D : AA          |                  tax                               ; init counter (x)
  955 |  1 asmdemo.s    543 | Code        | 11 |         |    1 | 00/0C2E : C8          | ozunid_3         iny                               ; next char
  956 |  1 asmdemo.s    544 | Code        | 11 |         |    2 | 00/0C2F : B1 06       |                  lda          ({$06}),y            ; load char
  957 |  1 asmdemo.s    545 | Code        | 11 |         |    3 | 00/0C31 : 20 ED FD    |                  jsr          {$FDED}              ; print char
  958 |  1 asmdemo.s    546 | Code        | 11 |         |    1 | 00/0C34 : CA          |                  dex                               ; dec counter
  959 |  1 asmdemo.s    547 | Code        | 11 |         |    2 | 00/0C35 : D0 F7       |                  bne          ozunid_3             
  960 |  1 asmdemo.s    548 | Empty       | 11 |         |    0 | 00/0C37               |                                                    
  961 |  1 asmdemo.s    549 | Comment     | 11 |         |    0 | 00/0C37               |                 ; restore and return
  962 |  1 asmdemo.s    550 | Code        | 11 |         |    3 | 00/0C37 : AE 50 0C    |                  ldx          savstack             ; restore stack register value
  963 |  1 asmdemo.s    551 | Code        | 11 |         |    1 | 00/0C3A : E8          |                  inx                               
  964 |  1 asmdemo.s    552 | Code        | 11 |         |    3 | 00/0C3B : BD 00 01    |                  lda          {$100},x             
  965 |  1 asmdemo.s    553 | Code        | 11 |         |    1 | 00/0C3E : 38          |                  sec                               ; to take account of length byte !! (dfb :1-*-1)
  966 |  1 asmdemo.s    554 | Code        | 11 |         |    3 | 00/0C3F : 6D 4F 0C    |                  adc          savlength            
  967 |  1 asmdemo.s    555 | Code        | 11 |         |    3 | 00/0C42 : 9D 00 01    |                  sta          {$100},x             
  968 |  1 asmdemo.s    556 | Code        | 11 |         |    1 | 00/0C45 : E8          |                  inx                               
  969 |  1 asmdemo.s    557 | Code        | 11 |         |    3 | 00/0C46 : BD 00 01    |                  lda          {$100},x             
  970 |  1 asmdemo.s    558 | Code        | 11 |         |    2 | 00/0C49 : 69 00       |                  adc          #0                   
  971 |  1 asmdemo.s    559 | Code        | 11 |         |    3 | 00/0C4B : 9D 00 01    |                  sta          {$100},x             
  972 |  1 asmdemo.s    560 | Code        | 11 |         |    1 | 00/0C4E : 60          |                  rts                               
  973 |  1 asmdemo.s    561 | Data        | 11 |         |    1 | 00/0C4F : 00          | savlength        ds           1                    
  974 |  1 asmdemo.s    562 | Data        | 11 |         |    1 | 00/0C50 : 00          | savstack         ds           1                    
  975 |  1 asmdemo.s    563 | Empty       | 11 |         |    0 | 00/0C51               |                                                    
  976 |  1 asmdemo.s    564 | Comment     | 11 |         |    0 | 00/0C51               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  977 |  1 asmdemo.s    565 | Comment     | 11 |         |    0 | 00/0C51               | *
  978 |  1 asmdemo.s    566 | Empty       | 11 |         |    0 | 00/0C51               | WaitForKeyPress                                    ; wait a key from user
  979 |  1 asmdemo.s    567 | Code        | 11 |         |    3 | 00/0C51 : 20 DD FB    |                  jsr          {$FBDD}              ; play a sound
  980 |  1 asmdemo.s    568 | Empty       | 11 |         |    0 | 00/0C54               |                                                    
  981 |  1 asmdemo.s    569 | Empty       | 11 |         |    0 | 00/0C54               | Wait                                               
  982 |  1 asmdemo.s    570 | Code        | 11 |         |    3 | 00/0C54 : EE 65 0C    |                  inc          rseed                
  983 |  1 asmdemo.s    571 | Code        | 11 |         |    2 | 00/0C57 : D0 03       |                  bne          ozunid_4             
  984 |  1 asmdemo.s    572 | Code        | 11 |         |    3 | 00/0C59 : EE 66 0C    |                  inc          rseed+1              
  985 |  1 asmdemo.s    573 | Empty       | 11 |         |    0 | 00/0C5C               | ozunid_4                                           
  986 |  1 asmdemo.s    574 | Code        | 11 |         |    3 | 00/0C5C : 2C 10 C0    |                  bit          {$C010}              ; test keybord input
  987 |  1 asmdemo.s    575 | Code        | 11 |         |    2 | 00/0C5F : 10 F3       |                  bpl          Wait                 ; loop while no key pressed
  988 |  1 asmdemo.s    576 | Code        | 11 |         |    3 | 00/0C61 : AD 00 C0    |                  lda          {$C000}              ; get key value
  989 |  1 asmdemo.s    577 | Code        | 11 |         |    1 | 00/0C64 : 60          |                  rts                               
  990 |  1 asmdemo.s    578 | Data        | 11 |         |    2 | 00/0C65 : 8E B7       | rseed            dw           46990                
  991 |  1 asmdemo.s    579 | Comment     | 11 |         |    0 | 00/0C67               | *
  992 |  1 asmdemo.s    580 | Comment     | 11 |         |    0 | 00/0C67               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
  993 |  1 asmdemo.s    581 | Comment     | 11 |         |    0 | 00/0C67               | * Librairies
  994 |  1 asmdemo.s    582 | Directive   | 11 |         |    0 | 00/0C67               |                  put          math1                ; calculting for this program
  995 |  5   math1.s      1 | Comment     | 11 |         |    0 | 00/0C67               | * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
  996 |  5   math1.s      2 | Comment     | 11 |         |    0 | 00/0C67               | * Functions :
  997 |  5   math1.s      3 | Comment     | 11 |         |    0 | 00/0C67               | * - SetDeltaXY :
  998 |  5   math1.s      4 | Comment     | 11 |         |    0 | 00/0C67               | * Set deltaX, daltaY : point2.x - point1.x, point2.y - point1.y,
  999 |  5   math1.s      5 | Comment     | 11 |         |    0 | 00/0C67               | * signX, signY  = 0 if deltaX/daltaY positve ; = 1 if deltaX/daltaY negative
 1000 |  5   math1.s      6 | Comment     | 11 |         |    0 | 00/0C67               | * deltaXabs, deltaYabs : absolute value of deltaX and daltaY 
 1001 |  5   math1.s      7 | Comment     | 11 |         |    0 | 00/0C67               | * deltaMax = Max(deltaXabs, deltaYabs)
 1002 |  5   math1.s      8 | Comment     | 11 |         |    0 | 00/0C67               | *
 1003 |  5   math1.s      9 | Comment     | 11 |         |    0 | 00/0C67               | * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
 1004 |  5   math1.s     10 | Comment     | 11 |         |    0 | 00/0C67               | *
 1005 |  5   math1.s     11 | Empty       | 11 |         |    0 | 00/0C67               |                                                    
 1006 |  5   math1.s     12 | Empty       | 11 |         |    0 | 00/0C67               | SetDeltaXY                                         
 1007 |  5   math1.s     13 | Empty       | 11 |         |    0 | 00/0C67               |                                                    
 1008 |  5   math1.s     14 | Comment     | 11 |         |    0 | 00/0C67               | * 
 1009 |  5   math1.s     15 | Comment     | 11 |         |    0 | 00/0C67               | * set deltaX
 1010 |  5   math1.s     16 | Code        | 11 |         |    3 | 00/0C67 : AD 56 1C    |                  lda          Point2               ; deltaX = point2.x - point1.x
 1011 |  5   math1.s     17 | Code        | 11 |         |    1 | 00/0C6A : 38          |                  sec                               
 1012 |  5   math1.s     18 | Code        | 11 |         |    3 | 00/0C6B : ED 52 1C    |                  sbc          Point1               
 1013 |  5   math1.s     19 | Code        | 11 |         |    3 | 00/0C6E : 8D 30 18    |                  sta          deltaX               
 1014 |  5   math1.s     20 | Code        | 11 |         |    3 | 00/0C71 : AD 57 1C    |                  lda          Point2+1             
 1015 |  5   math1.s     21 | Code        | 11 |         |    3 | 00/0C74 : ED 53 1C    |                  sbc          Point1+1             ; high byte of Point2.x - Point1.x in A
 1016 |  5   math1.s     22 | Code        | 11 |         |    3 | 00/0C77 : 8D 31 18    |                  sta          deltaX+1             
 1017 |  5   math1.s     23 | Comment     | 11 |         |    0 | 00/0C7A               |                 ;printm deltaX                   ; debug
 1018 |  5   math1.s     24 | Comment     | 11 |         |    0 | 00/0C7A               | * set signX 
 1019 |  5   math1.s     25 | Code        | 11 |         |    2 | 00/0C7A : A9 00       |                  lda          #0                   
 1020 |  5   math1.s     26 | Code        | 11 |         |    3 | 00/0C7C : 8D 42 18    |                  sta          signX                
 1021 |  5   math1.s     27 | Code        | 11 |         |    3 | 00/0C7F : AD 31 18    |                  lda          deltaX+1             
 1022 |  5   math1.s     28 | Code        | 11 |         |    2 | 00/0C82 : 29 80       |                  and          #$80                 
 1023 |  5   math1.s     29 | Code        | 11 |         |    2 | 00/0C84 : F0 03       |                  beq          ozunid_5             
 1024 |  5   math1.s     30 | Code        | 11 |         |    3 | 00/0C86 : EE 42 18    |                  inc          signX                
 1025 |  5   math1.s     31 | Empty       | 11 |         |    0 | 00/0C89               | ozunid_5                                           
 1026 |  5   math1.s     32 | Comment     | 11 |         |    0 | 00/0C89               | * set deltaY
 1027 |  5   math1.s     33 | Code        | 11 |         |    3 | 00/0C89 : AD 58 1C    |                  lda          Point2+2             ; point2.y - point1.y = deltaY
 1028 |  5   math1.s     34 | Code        | 11 |         |    1 | 00/0C8C : 38          |                  sec                               
 1029 |  5   math1.s     35 | Code        | 11 |         |    3 | 00/0C8D : ED 54 1C    |                  sbc          Point1+2             
 1030 |  5   math1.s     36 | Code        | 11 |         |    3 | 00/0C90 : 8D 32 18    |                  sta          deltaY               
 1031 |  5   math1.s     37 | Code        | 11 |         |    3 | 00/0C93 : AD 59 1C    |                  lda          Point2+3             
 1032 |  5   math1.s     38 | Code        | 11 |         |    3 | 00/0C96 : ED 55 1C    |                  sbc          Point1+3             ; high byte of Point2.x - Point1.x in Y
 1033 |  5   math1.s     39 | Code        | 11 |         |    3 | 00/0C99 : 8D 33 18    |                  sta          deltaY+1             
 1034 |  5   math1.s     40 | Comment     | 11 |         |    0 | 00/0C9C               |                 ;printm deltaY                   ; debug
 1035 |  5   math1.s     41 | Comment     | 11 |         |    0 | 00/0C9C               | * set signY
 1036 |  5   math1.s     42 | Code        | 11 |         |    2 | 00/0C9C : A9 00       |                  lda          #0                   
 1037 |  5   math1.s     43 | Code        | 11 |         |    3 | 00/0C9E : 8D 43 18    |                  sta          signY                
 1038 |  5   math1.s     44 | Code        | 11 |         |    3 | 00/0CA1 : AD 33 18    |                  lda          deltaY+1             
 1039 |  5   math1.s     45 | Code        | 11 |         |    2 | 00/0CA4 : 29 80       |                  and          #$80                 
 1040 |  5   math1.s     46 | Code        | 11 |         |    2 | 00/0CA6 : F0 03       |                  beq          ozunid_6             
 1041 |  5   math1.s     47 | Code        | 11 |         |    3 | 00/0CA8 : EE 43 18    |                  inc          signY                
 1042 |  5   math1.s     48 | Empty       | 11 |         |    0 | 00/0CAB               | ozunid_6                                           
 1043 |  5   math1.s     49 | Comment     | 11 |         |    0 | 00/0CAB               |                 ;printm signX                    ; debug (print signX and signY)
 1044 |  5   math1.s     50 | Empty       | 11 |         |    0 | 00/0CAB               |                                                    
 1045 |  5   math1.s     51 | Comment     | 11 |         |    0 | 00/0CAB               | * set |deltaX| in deltaXabs var
 1046 |  5   math1.s     52 | Code        | 11 |         |    3 | 00/0CAB : AD 30 18    |                  lda          deltaX               ; init deltaXabs
 1047 |  5   math1.s     53 | Code        | 11 |         |    3 | 00/0CAE : 8D 34 18    |                  sta          deltaXabs            
 1048 |  5   math1.s     54 | Code        | 11 |         |    3 | 00/0CB1 : AD 31 18    |                  lda          deltaX+1             
 1049 |  5   math1.s     55 | Code        | 11 |         |    3 | 00/0CB4 : 8D 35 18    |                  sta          deltaXabs+1          
 1050 |  5   math1.s     56 | Empty       | 11 |         |    0 | 00/0CB7               |                                                    
 1051 |  5   math1.s     57 | Code        | 11 |         |    2 | 00/0CB7 : 29 80       |                  and          #$80                 ; deltaX positive ?
 1052 |  5   math1.s     58 | Code        | 11 |         |    2 | 00/0CB9 : F0 21       |                  beq          dxpos                ; yes : jump over
 1053 |  5   math1.s     59 | Comment     | 11 |         |    0 | 00/0CBB               |                 ; two's complement 
 1054 |  5   math1.s     60 | Code        | 11 |         |    3 | 00/0CBB : AD 30 18    |                  lda          deltaX               ; no : get |deltaX|
 1055 |  5   math1.s     61 | Code        | 11 |         |    2 | 00/0CBE : 49 FF       |                  eor          #$FF                 
 1056 |  5   math1.s     62 | Code        | 11 |         |    3 | 00/0CC0 : 8D 34 18    |                  sta          deltaXabs            
 1057 |  5   math1.s     63 | Code        | 11 |         |    3 | 00/0CC3 : AD 31 18    |                  lda          deltaX+1             
 1058 |  5   math1.s     64 | Code        | 11 |         |    2 | 00/0CC6 : 49 FF       |                  eor          #$FF                 
 1059 |  5   math1.s     65 | Code        | 11 |         |    3 | 00/0CC8 : 8D 35 18    |                  sta          deltaXabs+1          
 1060 |  5   math1.s     66 | Code        | 11 |         |    3 | 00/0CCB : AD 34 18    |                  lda          deltaXabs            
 1061 |  5   math1.s     67 | Code        | 11 |         |    1 | 00/0CCE : 18          |                  clc                               
 1062 |  5   math1.s     68 | Code        | 11 |         |    2 | 00/0CCF : 69 01       |                  adc          #1                   
 1063 |  5   math1.s     69 | Code        | 11 |         |    3 | 00/0CD1 : 8D 34 18    |                  sta          deltaXabs            
 1064 |  5   math1.s     70 | Code        | 11 |         |    3 | 00/0CD4 : AD 35 18    |                  lda          deltaXabs+1          
 1065 |  5   math1.s     71 | Code        | 11 |         |    2 | 00/0CD7 : 69 00       |                  adc          #0                   
 1066 |  5   math1.s     72 | Code        | 11 |         |    3 | 00/0CD9 : 8D 35 18    |                  sta          deltaXabs+1          
 1067 |  5   math1.s     73 | Empty       | 11 |         |    0 | 00/0CDC               | dxpos                                              
 1068 |  5   math1.s     74 | Macro       | 11 |         |    0 | 00/0CDC               |                  cr                                
 1069 |  5   math1.s     74 | Code        | 11 |         |    2 | 00/0CDC : A9 8D       |                  lda          #$8D                 
 1070 |  5   math1.s     74 | Code        | 11 |         |    3 | 00/0CDE : 20 ED FD    |                  jsr          {$FDED}              
 1071 |  5   math1.s     75 | Comment     | 11 |         |    0 | 00/0CE1               |                 ;printm deltaXabs                 ; debug 
 1072 |  5   math1.s     76 | Empty       | 11 |         |    0 | 00/0CE1               |                                                    
 1073 |  5   math1.s     77 | Comment     | 11 |         |    0 | 00/0CE1               | * set |deltaX| in deltaYabs var
 1074 |  5   math1.s     78 | Code        | 11 |         |    3 | 00/0CE1 : AD 32 18    |                  lda          deltaY               ; init deltaYabs
 1075 |  5   math1.s     79 | Code        | 11 |         |    3 | 00/0CE4 : 8D 36 18    |                  sta          deltaYabs            
 1076 |  5   math1.s     80 | Code        | 11 |         |    3 | 00/0CE7 : AD 33 18    |                  lda          deltaY+1             
 1077 |  5   math1.s     81 | Code        | 11 |         |    3 | 00/0CEA : 8D 37 18    |                  sta          deltaYabs+1          
 1078 |  5   math1.s     82 | Empty       | 11 |         |    0 | 00/0CED               |                                                    
 1079 |  5   math1.s     83 | Code        | 11 |         |    2 | 00/0CED : 29 80       |                  and          #$80                 ; deltaY positive ?
 1080 |  5   math1.s     84 | Code        | 11 |         |    2 | 00/0CEF : F0 21       |                  beq          dypos                ; yes : jump over
 1081 |  5   math1.s     85 | Comment     | 11 |         |    0 | 00/0CF1               |                 ; two's complement 
 1082 |  5   math1.s     86 | Code        | 11 |         |    3 | 00/0CF1 : AD 32 18    |                  lda          deltaY               ; no : get |deltaY|
 1083 |  5   math1.s     87 | Code        | 11 |         |    2 | 00/0CF4 : 49 FF       |                  eor          #$FF                 
 1084 |  5   math1.s     88 | Code        | 11 |         |    3 | 00/0CF6 : 8D 36 18    |                  sta          deltaYabs            
 1085 |  5   math1.s     89 | Code        | 11 |         |    3 | 00/0CF9 : AD 33 18    |                  lda          deltaY+1             
 1086 |  5   math1.s     90 | Code        | 11 |         |    2 | 00/0CFC : 49 FF       |                  eor          #$FF                 
 1087 |  5   math1.s     91 | Code        | 11 |         |    3 | 00/0CFE : 8D 37 18    |                  sta          deltaYabs+1          
 1088 |  5   math1.s     92 | Code        | 11 |         |    3 | 00/0D01 : AD 36 18    |                  lda          deltaYabs            
 1089 |  5   math1.s     93 | Code        | 11 |         |    1 | 00/0D04 : 18          |                  clc                               
 1090 |  5   math1.s     94 | Code        | 11 |         |    2 | 00/0D05 : 69 01       |                  adc          #1                   
 1091 |  5   math1.s     95 | Code        | 11 |         |    3 | 00/0D07 : 8D 36 18    |                  sta          deltaYabs            
 1092 |  5   math1.s     96 | Code        | 11 |         |    3 | 00/0D0A : AD 37 18    |                  lda          deltaYabs+1          
 1093 |  5   math1.s     97 | Code        | 11 |         |    2 | 00/0D0D : 69 00       |                  adc          #0                   
 1094 |  5   math1.s     98 | Code        | 11 |         |    3 | 00/0D0F : 8D 37 18    |                  sta          deltaYabs+1          
 1095 |  5   math1.s     99 | Empty       | 11 |         |    0 | 00/0D12               | dypos                                              
 1096 |  5   math1.s    100 | Comment     | 11 |         |    0 | 00/0D12               |                 ;printm deltaYabs                 ; debug 
 1097 |  5   math1.s    101 | Empty       | 11 |         |    0 | 00/0D12               |                                                    
 1098 |  5   math1.s    102 | Comment     | 11 |         |    0 | 00/0D12               | * Set max(daltaXabs,deltaYabs)
 1099 |  5   math1.s    103 | Empty       | 11 |         |    0 | 00/0D12               |                                                    
 1100 |  5   math1.s    104 | Macro       | 11 |         |    0 | 00/0D12               |                  DoCompare16  deltaXabs;deltaYabs;cmp16
 1101 |  5   math1.s    104 | Code        | 11 |         |    3 | 00/0D12 : AD 35 18    |                  lda          deltaXabs+1          ; number 1 on stack
 1102 |  5   math1.s    104 | Code        | 11 |         |    1 | 00/0D15 : 48          |                  pha                               
 1103 |  5   math1.s    104 | Code        | 11 |         |    3 | 00/0D16 : AD 34 18    |                  lda          deltaXabs            
 1104 |  5   math1.s    104 | Code        | 11 |         |    1 | 00/0D19 : 48          |                  pha                               
 1105 |  5   math1.s    104 | Code        | 11 |         |    3 | 00/0D1A : AD 37 18    |                  lda          deltaYabs+1          ; number 2 on stack
 1106 |  5   math1.s    104 | Code        | 11 |         |    1 | 00/0D1D : 48          |                  pha                               
 1107 |  5   math1.s    104 | Code        | 11 |         |    3 | 00/0D1E : AD 36 18    |                  lda          deltaYabs            
 1108 |  5   math1.s    104 | Code        | 11 |         |    1 | 00/0D21 : 48          |                  pha                               
 1109 |  5   math1.s    104 | Code        | 11 |         |    3 | 00/0D22 : 20 EB 0D    |                  jsr          cmp16                ; compare routine (works for signed or unsigned numbers)
 1110 |  5   math1.s    105 | Code        | 11 |         |    2 | 00/0D25 : F0 16       |                  beq          isegal               
 1111 |  5   math1.s    106 | Code        | 11 |         |    2 | 00/0D27 : B0 28       |                  bcs          isbigger             
 1112 |  5   math1.s    107 | Empty       | 11 |         |    0 | 00/0D29               |                                                    
 1113 |  5   math1.s    108 | Empty       | 11 |         |    0 | 00/0D29               | issmaller                                          
 1114 |  5   math1.s    109 | Comment     | 11 |         |    0 | 00/0D29               |                 ;jsr print                       ; debug
 1115 |  5   math1.s    110 | Comment     | 11 |         |    0 | 00/0D29               |                 ;dfb :1-*-1
 1116 |  5   math1.s    111 | Comment     | 11 |         |    0 | 00/0D29               |                 ;asc "SMALLER"
 1117 |  5   math1.s    112 | Code        | 11 |         |    3 | 00/0D29 : AD 36 18    | ozunid_7         lda          deltaYabs            
 1118 |  5   math1.s    113 | Code        | 11 |         |    3 | 00/0D2C : 8D 38 18    |                  sta          deltaMax             
 1119 |  5   math1.s    114 | Code        | 11 |         |    3 | 00/0D2F : AD 37 18    |                  lda          deltaYabs+1          
 1120 |  5   math1.s    115 | Code        | 11 |         |    3 | 00/0D32 : 8D 39 18    |                  sta          deltaMax+1           
 1121 |  5   math1.s    116 | Empty       | 11 |         |    0 | 00/0D35               |                                                    
 1122 |  5   math1.s    117 | Code        | 11 |         |    2 | 00/0D35 : A9 01       |                  lda          #1                   ; flag to indicate line is rather vertical
 1123 |  5   math1.s    118 | Code        | 11 |         |    3 | 00/0D37 : 8D 51 1C    |                  sta          VertFlag             
 1124 |  5   math1.s    119 | Empty       | 11 |         |    0 | 00/0D3A               |                                                    
 1125 |  5   math1.s    120 | Code        | 11 |         |    3 | 00/0D3A : 4C 62 0D    |                  jmp          prnMax               
 1126 |  5   math1.s    121 | Empty       | 11 |         |    0 | 00/0D3D               |                                                    
 1127 |  5   math1.s    122 | Empty       | 11 |         |    0 | 00/0D3D               | isegal                                             
 1128 |  5   math1.s    123 | Comment     | 11 |         |    0 | 00/0D3D               |                 ;jsr print                       ; debug
 1129 |  5   math1.s    124 | Comment     | 11 |         |    0 | 00/0D3D               |                 ;dfb :2-*-1
 1130 |  5   math1.s    125 | Comment     | 11 |         |    0 | 00/0D3D               |                 ;asc "EGAL"
 1131 |  5   math1.s    126 | Code        | 11 |         |    3 | 00/0D3D : AD 36 18    | ozunid_8         lda          deltaYabs            ; or deltaXabs (=)
 1132 |  5   math1.s    127 | Code        | 11 |         |    3 | 00/0D40 : 8D 38 18    |                  sta          deltaMax             
 1133 |  5   math1.s    128 | Code        | 11 |         |    3 | 00/0D43 : AD 37 18    |                  lda          deltaYabs+1          
 1134 |  5   math1.s    129 | Code        | 11 |         |    3 | 00/0D46 : 8D 39 18    |                  sta          deltaMax+1           
 1135 |  5   math1.s    130 | Empty       | 11 |         |    0 | 00/0D49               |                                                    
 1136 |  5   math1.s    131 | Code        | 11 |         |    2 | 00/0D49 : A9 01       |                  lda          #1                   ; flag to indicate line is rather vertical
 1137 |  5   math1.s    132 | Code        | 11 |         |    3 | 00/0D4B : 8D 51 1C    |                  sta          VertFlag             ; although deltaX=deltaY, but Apple II pixels are "vertical"
 1138 |  5   math1.s    133 | Empty       | 11 |         |    0 | 00/0D4E               |                                                    
 1139 |  5   math1.s    134 | Code        | 11 |         |    3 | 00/0D4E : 4C 62 0D    |                  jmp          prnMax               
 1140 |  5   math1.s    135 | Empty       | 11 |         |    0 | 00/0D51               |                                                    
 1141 |  5   math1.s    136 | Empty       | 11 |         |    0 | 00/0D51               | isbigger                                           
 1142 |  5   math1.s    137 | Comment     | 11 |         |    0 | 00/0D51               |                 ;jsr print                       ; debug 
 1143 |  5   math1.s    138 | Comment     | 11 |         |    0 | 00/0D51               |                 ;dfb :3-*-1
 1144 |  5   math1.s    139 | Comment     | 11 |         |    0 | 00/0D51               |                 ;asc "BIGGER"
 1145 |  5   math1.s    140 | Code        | 11 |         |    3 | 00/0D51 : AD 34 18    | _3               lda          deltaXabs            
 1146 |  5   math1.s    141 | Code        | 11 |         |    3 | 00/0D54 : 8D 38 18    |                  sta          deltaMax             
 1147 |  5   math1.s    142 | Code        | 11 |         |    3 | 00/0D57 : AD 35 18    |                  lda          deltaXabs+1          
 1148 |  5   math1.s    143 | Code        | 11 |         |    3 | 00/0D5A : 8D 39 18    |                  sta          deltaMax+1           
 1149 |  5   math1.s    144 | Empty       | 11 |         |    0 | 00/0D5D               |                                                    
 1150 |  5   math1.s    145 | Code        | 11 |         |    2 | 00/0D5D : A9 00       |                  lda          #0                   ; flag to indicate line is not vertical (rather horizontal)
 1151 |  5   math1.s    146 | Code        | 11 |         |    3 | 00/0D5F : 8D 51 1C    |                  sta          VertFlag             
 1152 |  5   math1.s    147 | Empty       | 11 |         |    0 | 00/0D62               |                                                    
 1153 |  5   math1.s    148 | Empty       | 11 |         |    0 | 00/0D62               | prnMax                                             
 1154 |  5   math1.s    149 | Macro       | 11 |         |    0 | 00/0D62               |                  cr                                
 1155 |  5   math1.s    149 | Code        | 11 |         |    2 | 00/0D62 : A9 8D       |                  lda          #$8D                 
 1156 |  5   math1.s    149 | Code        | 11 |         |    3 | 00/0D64 : 20 ED FD    |                  jsr          {$FDED}              
 1157 |  5   math1.s    150 | Comment     | 11 |         |    0 | 00/0D67               |                 ;printm deltaMax                 ; debug
 1158 |  5   math1.s    151 | Code        | 11 |         |    1 | 00/0D67 : 60          |                  rts                               
 1159 |  5   math1.s    152 | Empty       | 11 |         |    0 | 00/0D68               |                                                    
 1160 |  5   math1.s    153 | Empty       | 11 |         |    0 | 00/0D68               |                                                    
 1161 |  5   math1.s    154 | Empty       | 11 |         |    0 | 00/0D68               |                                                    
 1162 |  5   math1.s    155 | Empty       | 11 |         |    0 | 00/0D68               |                                                    
 1163 |  1 asmdemo.s    583 | Directive   | 11 |         |    0 | 00/0D68               |                  put          math2                ; division using fixed point functions
 1164 |  6   math2.s      1 | Comment     | 11 |         |    0 | 00/0D68               | * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
 1165 |  6   math2.s      2 | Comment     | 11 |         |    0 | 00/0D68               | * Functions :
 1166 |  6   math2.s      3 | Comment     | 11 |         |    0 | 00/0D68               | * - Set SetNpPt :
 1167 |  6   math2.s      4 | Comment     | 11 |         |    0 | 00/0D68               | *       ==> Calculate number of points : divide DeltaMax by seglength (constant)
 1168 |  6   math2.s      5 | Comment     | 11 |         |    0 | 00/0D68               | * - SetInc :
 1169 |  6   math2.s      6 | Comment     | 11 |         |    0 | 00/0D68               | *       ==> Calculate increment in X and Y directions.
 1170 |  6   math2.s      7 | Comment     | 11 |         |    0 | 00/0D68               | *       uses a new version of div16, with fixed point (16 bit integer part + 16 bit decimal part )
 1171 |  6   math2.s      8 | Comment     | 11 |         |    0 | 00/0D68               | * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
 1172 |  6   math2.s      9 | Empty       | 11 |         |    0 | 00/0D68               |                                                    
 1173 |  6   math2.s     10 | Empty       | 11 |         |    0 | 00/0D68               | SetNpPt                                            
 1174 |  6   math2.s     11 | Comment     | 11 |         |    0 | 00/0D68               | * Calculate number of points : divide DeltaMax by seglength (constant)
 1175 |  6   math2.s     12 | Empty       | 11 |         |    0 | 00/0D68               |                                                    
 1176 |  6   math2.s     13 | Empty       | 11 |         |    0 | 00/0D68               |                                                    
 1177 |  6   math2.s     14 | Macro       | 11 |         |    0 | 00/0D68               |                  DoDivid16    deltaMax;seglength;div16
 1178 |  6   math2.s     14 | Code        | 11 |         |    3 | 00/0D68 : AD 39 18    |                  lda          deltaMax+1           ; dividend on stack
 1179 |  6   math2.s     14 | Code        | 11 |         |    1 | 00/0D6B : 48          |                  pha                               
 1180 |  6   math2.s     14 | Code        | 11 |         |    3 | 00/0D6C : AD 38 18    |                  lda          deltaMax             
 1181 |  6   math2.s     14 | Code        | 11 |         |    1 | 00/0D6F : 48          |                  pha                               
 1182 |  6   math2.s     14 | Code        | 11 |         |    3 | 00/0D70 : AD 6E 1C    |                  lda          seglength+1          ; divisor on stack
 1183 |  6   math2.s     14 | Code        | 11 |         |    1 | 00/0D73 : 48          |                  pha                               
 1184 |  6   math2.s     14 | Code        | 11 |         |    3 | 00/0D74 : AD 6D 1C    |                  lda          seglength            
 1185 |  6   math2.s     14 | Code        | 11 |         |    1 | 00/0D77 : 48          |                  pha                               
 1186 |  6   math2.s     14 | Code        | 11 |         |    3 | 00/0D78 : 20 30 0E    |                  jsr          div16                ; call division routine
 1187 |  6   math2.s     15 | Macro       | 11 |         |    0 | 00/0D7B               |                  movInt       dividend;nbpt        ; sav number of points
 1188 |  6   math2.s     15 | Code        | 11 |         |    3 | 00/0D7B : AD 55 0F    |                  lda          dividend             
 1189 |  6   math2.s     15 | Code        | 11 |         |    3 | 00/0D7E : 8D 4C 1C    |                  sta          nbpt                 
 1190 |  6   math2.s     15 | Code        | 11 |         |    3 | 00/0D81 : AD 56 0F    |                  lda          dividend+1           
 1191 |  6   math2.s     15 | Code        | 11 |         |    3 | 00/0D84 : 8D 4D 1C    |                  sta          nbpt+1               
 1192 |  6   math2.s     16 | Macro       | 11 |         |    0 | 00/0D87               |                  movInt       dividend;savnbpt     ; in 2 vars.
 1193 |  6   math2.s     16 | Code        | 11 |         |    3 | 00/0D87 : AD 55 0F    |                  lda          dividend             
 1194 |  6   math2.s     16 | Code        | 11 |         |    3 | 00/0D8A : 8D 4E 1C    |                  sta          savnbpt              
 1195 |  6   math2.s     16 | Code        | 11 |         |    3 | 00/0D8D : AD 56 0F    |                  lda          dividend+1           
 1196 |  6   math2.s     16 | Code        | 11 |         |    3 | 00/0D90 : 8D 4F 1C    |                  sta          savnbpt+1            
 1197 |  6   math2.s     17 | Code        | 11 |         |    1 | 00/0D93 : 60          |                  rts                               
 1198 |  6   math2.s     18 | Empty       | 11 |         |    0 | 00/0D94               |                                                    
 1199 |  6   math2.s     19 | Empty       | 11 |         |    0 | 00/0D94               | SetInc                                             
 1200 |  6   math2.s     20 | Comment     | 11 |         |    0 | 00/0D94               | * Calculate increment fox X and Y : divide deltaXabs and deltaYabs by number of points.
 1201 |  6   math2.s     21 | Comment     | 11 |         |    0 | 00/0D94               | * DecimalX and DecimmalY calculate decimal part of above division :
 1202 |  6   math2.s     22 | Comment     | 11 |         |    0 | 00/0D94               | *  ===> ALGO <===
 1203 |  6   math2.s     23 | Comment     | 11 |         |    0 | 00/0D94               | * remainder = remaider * 2 ; if remaider < divisor (=nbpt) then shift left XincDec (and YincDec repectively)
 1204 |  6   math2.s     24 | Comment     | 11 |         |    0 | 00/0D94               | * with carry clear and loop (unless already 16 loops)
 1205 |  6   math2.s     25 | Comment     | 11 |         |    0 | 00/0D94               | * if remaider >= divisor (=nbpt) then shift left XincDec (and YincDec repectively)
 1206 |  6   math2.s     26 | Comment     | 11 |         |    0 | 00/0D94               | * with carry set and loop (unless already 16 loops)
 1207 |  6   math2.s     27 | Empty       | 11 |         |    0 | 00/0D94               |                                                    
 1208 |  6   math2.s     28 | Empty       | 11 |         |    0 | 00/0D94               | DoX                                                
 1209 |  6   math2.s     29 | Macro       | 11 |         |    0 | 00/0D94               |                  DoDivid16    deltaXabs;nbpt;div16dec
 1210 |  6   math2.s     29 | Code        | 11 |         |    3 | 00/0D94 : AD 35 18    |                  lda          deltaXabs+1          ; dividend on stack
 1211 |  6   math2.s     29 | Code        | 11 |         |    1 | 00/0D97 : 48          |                  pha                               
 1212 |  6   math2.s     29 | Code        | 11 |         |    3 | 00/0D98 : AD 34 18    |                  lda          deltaXabs            
 1213 |  6   math2.s     29 | Code        | 11 |         |    1 | 00/0D9B : 48          |                  pha                               
 1214 |  6   math2.s     29 | Code        | 11 |         |    3 | 00/0D9C : AD 4D 1C    |                  lda          nbpt+1               ; divisor on stack
 1215 |  6   math2.s     29 | Code        | 11 |         |    1 | 00/0D9F : 48          |                  pha                               
 1216 |  6   math2.s     29 | Code        | 11 |         |    3 | 00/0DA0 : AD 4C 1C    |                  lda          nbpt                 
 1217 |  6   math2.s     29 | Code        | 11 |         |    1 | 00/0DA3 : 48          |                  pha                               
 1218 |  6   math2.s     29 | Code        | 11 |         |    3 | 00/0DA4 : 20 83 0E    |                  jsr          div16dec             ; call division routine
 1219 |  6   math2.s     30 | Macro       | 11 |         |    0 | 00/0DA7               |                  movInt       dividend;Xinc        ; integer part
 1220 |  6   math2.s     30 | Code        | 11 |         |    3 | 00/0DA7 : AD 55 0F    |                  lda          dividend             
 1221 |  6   math2.s     30 | Code        | 11 |         |    3 | 00/0DAA : 8D 46 18    |                  sta          Xinc                 
 1222 |  6   math2.s     30 | Code        | 11 |         |    3 | 00/0DAD : AD 56 0F    |                  lda          dividend+1           
 1223 |  6   math2.s     30 | Code        | 11 |         |    3 | 00/0DB0 : 8D 47 18    |                  sta          Xinc+1               
 1224 |  6   math2.s     31 | Macro       | 11 |         |    0 | 00/0DB3               |                  movInt       decimal;XincDec      ; decimal part
 1225 |  6   math2.s     31 | Code        | 11 |         |    3 | 00/0DB3 : AD 53 0F    |                  lda          decimal              
 1226 |  6   math2.s     31 | Code        | 11 |         |    3 | 00/0DB6 : 8D 44 18    |                  sta          XincDec              
 1227 |  6   math2.s     31 | Code        | 11 |         |    3 | 00/0DB9 : AD 54 0F    |                  lda          decimal+1            
 1228 |  6   math2.s     31 | Code        | 11 |         |    3 | 00/0DBC : 8D 45 18    |                  sta          XincDec+1            
 1229 |  6   math2.s     32 | Empty       | 11 |         |    0 | 00/0DBF               |                                                    
 1230 |  6   math2.s     33 | Comment     | 11 |         |    0 | 00/0DBF               |                 ;cr
 1231 |  6   math2.s     34 | Comment     | 11 |         |    0 | 00/0DBF               |                 ;printm deltaXabs                        ; = dividend
 1232 |  6   math2.s     35 | Comment     | 11 |         |    0 | 00/0DBF               |                 ;printm nbpt                             ; = divisor
 1233 |  6   math2.s     36 | Comment     | 11 |         |    0 | 00/0DBF               |                 ;printm dividend                         ; result of division (integer part)
 1234 |  6   math2.s     37 | Comment     | 11 |         |    0 | 00/0DBF               |                 ;printm XincDec                          ; result of division (decimal part)    
 1235 |  6   math2.s     38 | Empty       | 11 |         |    0 | 00/0DBF               |                                                    
 1236 |  6   math2.s     39 | Empty       | 11 |         |    0 | 00/0DBF               | DoY                                                
 1237 |  6   math2.s     40 | Macro       | 11 |         |    0 | 00/0DBF               |                  DoDivid16    deltaYabs;nbpt;div16dec
 1238 |  6   math2.s     40 | Code        | 11 |         |    3 | 00/0DBF : AD 37 18    |                  lda          deltaYabs+1          ; dividend on stack
 1239 |  6   math2.s     40 | Code        | 11 |         |    1 | 00/0DC2 : 48          |                  pha                               
 1240 |  6   math2.s     40 | Code        | 11 |         |    3 | 00/0DC3 : AD 36 18    |                  lda          deltaYabs            
 1241 |  6   math2.s     40 | Code        | 11 |         |    1 | 00/0DC6 : 48          |                  pha                               
 1242 |  6   math2.s     40 | Code        | 11 |         |    3 | 00/0DC7 : AD 4D 1C    |                  lda          nbpt+1               ; divisor on stack
 1243 |  6   math2.s     40 | Code        | 11 |         |    1 | 00/0DCA : 48          |                  pha                               
 1244 |  6   math2.s     40 | Code        | 11 |         |    3 | 00/0DCB : AD 4C 1C    |                  lda          nbpt                 
 1245 |  6   math2.s     40 | Code        | 11 |         |    1 | 00/0DCE : 48          |                  pha                               
 1246 |  6   math2.s     40 | Code        | 11 |         |    3 | 00/0DCF : 20 83 0E    |                  jsr          div16dec             ; call division routine
 1247 |  6   math2.s     41 | Macro       | 11 |         |    0 | 00/0DD2               |                  movInt       dividend;Yinc        ; integer part
 1248 |  6   math2.s     41 | Code        | 11 |         |    3 | 00/0DD2 : AD 55 0F    |                  lda          dividend             
 1249 |  6   math2.s     41 | Code        | 11 |         |    3 | 00/0DD5 : 8D 4A 18    |                  sta          Yinc                 
 1250 |  6   math2.s     41 | Code        | 11 |         |    3 | 00/0DD8 : AD 56 0F    |                  lda          dividend+1           
 1251 |  6   math2.s     41 | Code        | 11 |         |    3 | 00/0DDB : 8D 4B 18    |                  sta          Yinc+1               
 1252 |  6   math2.s     42 | Macro       | 11 |         |    0 | 00/0DDE               |                  movInt       decimal;YincDec      ; decimal part
 1253 |  6   math2.s     42 | Code        | 11 |         |    3 | 00/0DDE : AD 53 0F    |                  lda          decimal              
 1254 |  6   math2.s     42 | Code        | 11 |         |    3 | 00/0DE1 : 8D 48 18    |                  sta          YincDec              
 1255 |  6   math2.s     42 | Code        | 11 |         |    3 | 00/0DE4 : AD 54 0F    |                  lda          decimal+1            
 1256 |  6   math2.s     42 | Code        | 11 |         |    3 | 00/0DE7 : 8D 49 18    |                  sta          YincDec+1            
 1257 |  6   math2.s     43 | Comment     | 11 |         |    0 | 00/0DEA               |                 ;cr
 1258 |  6   math2.s     44 | Comment     | 11 |         |    0 | 00/0DEA               |                 ;printm deltaYabs                        ; = dividend
 1259 |  6   math2.s     45 | Comment     | 11 |         |    0 | 00/0DEA               |                 ;printm nbpt                             ; = divisor
 1260 |  6   math2.s     46 | Comment     | 11 |         |    0 | 00/0DEA               |                 ;printm dividend                         ; result of division (integer part)
 1261 |  6   math2.s     47 | Comment     | 11 |         |    0 | 00/0DEA               |                 ;printm YincDec                          ; result of division (decimal part)               
 1262 |  6   math2.s     48 | Empty       | 11 |         |    0 | 00/0DEA               |                                                    
 1263 |  6   math2.s     49 | Code        | 11 |         |    1 | 00/0DEA : 60          | endinc           rts                               
 1264 |  6   math2.s     50 | Empty       | 11 |         |    0 | 00/0DEB               |                                                    
 1265 |  6   math2.s     51 | Empty       | 11 |         |    0 | 00/0DEB               |                                                    
 1266 |  6   math2.s     52 | Empty       | 11 |         |    0 | 00/0DEB               |                                                    
 1267 |  6   math2.s     53 | Comment     | 11 |         |    0 | 00/0DEB               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 1268 |  6   math2.s     54 | Empty       | 11 |         |    0 | 00/0DEB               |                                                    
 1269 |  1 asmdemo.s    584 | Directive   | 11 |         |    0 | 00/0DEB               |                  put          fpdlib               ; my fixed point library
 1270 |  7  fpdlib.s      1 | Comment     | 11 |         |    0 | 00/0DEB               | * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 1271 |  7  fpdlib.s      2 | Comment     | 11 |         |    0 | 00/0DEB               | *                                     Fixed point division                                      *
 1272 |  7  fpdlib.s      3 | Comment     | 11 |         |    0 | 00/0DEB               | * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 1273 |  7  fpdlib.s      4 | Comment     | 11 |         |    0 | 00/0DEB               | * Functions :                                                                                   *
 1274 |  7  fpdlib.s      5 | Comment     | 11 |         |    0 | 00/0DEB               |                                                                                                 * 
 1275 |  7  fpdlib.s      6 | Comment     | 11 |         |    0 | 00/0DEB               | * 1/ cmp16 : Compares two 16 bits values, passed on the stack.                                  *
 1276 |  7  fpdlib.s      7 | Comment     | 11 |         |    0 | 00/0DEB               | * 2/ div16 : Divides two 16 bits values, passed on the stack (standard 16 bits division).       * 
 1277 |  7  fpdlib.s      8 | Comment     | 11 |         |    0 | 00/0DEB               | *         Result in dividend var (16 bits), remainder in rem var (16 bit).                      * 
 1278 |  7  fpdlib.s      9 | Comment     | 11 |         |    0 | 00/0DEB               | * 3/ div16dec : Divides two 16 bits values, passed on the stack                                 *                                     
 1279 |  7  fpdlib.s     10 | Comment     | 11 |         |    0 | 00/0DEB               | *            Result :                                                                           *
 1280 |  7  fpdlib.s     11 | Comment     | 11 |         |    0 | 00/0DEB               | *               - integer part in dividend var (16 bit).                                        *
 1281 |  7  fpdlib.s     12 | Comment     | 11 |         |    0 | 00/0DEB               | *               - decimal part in decimal var (16 bit).                                         *
 1282 |  7  fpdlib.s     13 | Comment     | 11 |         |    0 | 00/0DEB               | * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 1283 |  7  fpdlib.s     14 | Empty       | 11 |         |    0 | 00/0DEB               |                                                    
 1284 |  7  fpdlib.s     15 | Comment     | 11 |         |    0 | 00/0DEB               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 1285 |  7  fpdlib.s     16 | Empty       | 11 |         |    0 | 00/0DEB               | cmp16                                              
 1286 |  7  fpdlib.s     17 | Comment     | 11 |         |    0 | 00/0DEB               | * ref : 6502_Assembly_Language_Subroutines.pdf
 1287 |  7  fpdlib.s     18 | Comment     | 11 |         |    0 | 00/0DEB               | * IN : 
 1288 |  7  fpdlib.s     19 | Comment     | 11 |         |    0 | 00/0DEB               |         ;return address ; subtrahend ; minuend
 1289 |  7  fpdlib.s     20 | Comment     | 11 |         |    0 | 00/0DEB               | * OUT :
 1290 |  7  fpdlib.s     21 | Comment     | 11 |         |    0 | 00/0DEB               |         ; C=1 : first number pushed on the stack is bigger
 1291 |  7  fpdlib.s     22 | Comment     | 11 |         |    0 | 00/0DEB               |         ; C=0 : second number pushed on the stack is bigger
 1292 |  7  fpdlib.s     23 | Empty       | 11 |         |    0 | 00/0DEB               |                                                    
 1293 |  7  fpdlib.s     24 | Comment     | 11 |         |    0 | 00/0DEB               |         ;Flags set as if subtrahend had been subtracted from minuend, with a correction if
 1294 |  7  fpdlib.s     25 | Comment     | 11 |         |    0 | 00/0DEB               |         ;two's complement overflow occurred.
 1295 |  7  fpdlib.s     26 | Comment     | 11 |         |    0 | 00/0DEB               |         ;Zero flag = 1 if subtrahend and minuend are equal, 0 if they are not equal.
 1296 |  7  fpdlib.s     27 | Comment     | 11 |         |    0 | 00/0DEB               |         ;Carry flag = 0 if subtrahend is larger than minuend in the unsigned sense, 1 if it is less
 1297 |  7  fpdlib.s     28 | Comment     | 11 |         |    0 | 00/0DEB               |         ;than or equal to the minuend.
 1298 |  7  fpdlib.s     29 | Comment     | 11 |         |    0 | 00/0DEB               |         ;Negative flag = 1 if subtrahend is larger than minuend in the signed sense, 0 if it is less
 1299 |  7  fpdlib.s     30 | Comment     | 11 |         |    0 | 00/0DEB               |         ;than or equal to the minuend. This flag is corrected if two's complement overflow occurs.
 1300 |  7  fpdlib.s     31 | Comment     | 11 |         |    0 | 00/0DEB               |                         ;save the return address
 1301 |  7  fpdlib.s     32 | Code        | 11 |         |    1 | 00/0DEB : 68          |                  pla                               
 1302 |  7  fpdlib.s     33 | Code        | 11 |         |    3 | 00/0DEC : 8D 07 0E    |                  sta          ret2+1               
 1303 |  7  fpdlib.s     34 | Code        | 11 |         |    1 | 00/0DEF : 68          |                  pla                               
 1304 |  7  fpdlib.s     35 | Code        | 11 |         |    3 | 00/0DF0 : 8D 04 0E    |                  sta          ret+1                
 1305 |  7  fpdlib.s     36 | Comment     | 11 |         |    0 | 00/0DF3               |                 ;get op1
 1306 |  7  fpdlib.s     37 | Code        | 11 |         |    1 | 00/0DF3 : 68          |                  pla                               
 1307 |  7  fpdlib.s     38 | Code        | 11 |         |    3 | 00/0DF4 : 8D 2C 0E    |                  sta          op1                  
 1308 |  7  fpdlib.s     39 | Code        | 11 |         |    1 | 00/0DF7 : 68          |                  pla                               
 1309 |  7  fpdlib.s     40 | Code        | 11 |         |    3 | 00/0DF8 : 8D 2D 0E    |                  sta          op1+1                
 1310 |  7  fpdlib.s     41 | Comment     | 11 |         |    0 | 00/0DFB               |                 ;get op2
 1311 |  7  fpdlib.s     42 | Code        | 11 |         |    1 | 00/0DFB : 68          |                  pla                               
 1312 |  7  fpdlib.s     43 | Code        | 11 |         |    3 | 00/0DFC : 8D 2E 0E    |                  sta          op2                  
 1313 |  7  fpdlib.s     44 | Code        | 11 |         |    1 | 00/0DFF : 68          |                  pla                               
 1314 |  7  fpdlib.s     45 | Code        | 11 |         |    3 | 00/0E00 : 8D 2F 0E    |                  sta          op2+1                
 1315 |  7  fpdlib.s     46 | Comment     | 11 |         |    0 | 00/0E03               |                 ;restore return address
 1316 |  7  fpdlib.s     47 | Code        | 11 |         |    2 | 00/0E03 : A9 00       | ret              lda          #0                   
 1317 |  7  fpdlib.s     48 | Code        | 11 |         |    1 | 00/0E05 : 48          |                  pha                               
 1318 |  7  fpdlib.s     49 | Code        | 11 |         |    2 | 00/0E06 : A9 00       | ret2             lda          #0                   
 1319 |  7  fpdlib.s     50 | Code        | 11 |         |    1 | 00/0E08 : 48          |                  pha                               
 1320 |  7  fpdlib.s     51 | Empty       | 11 |         |    0 | 00/0E09               |                                                    
 1321 |  7  fpdlib.s     52 | Code        | 11 |         |    3 | 00/0E09 : AD 2E 0E    |                  lda          op2                  
 1322 |  7  fpdlib.s     53 | Code        | 11 |         |    3 | 00/0E0C : CD 2C 0E    |                  cmp          op1                  ;compare low bytes
 1323 |  7  fpdlib.s     54 | Code        | 11 |         |    2 | 00/0E0F : F0 0B       |                  beq          equalcmp             ;branch if they are equal
 1324 |  7  fpdlib.s     55 | Comment     | 11 |         |    0 | 00/0E11               |                 ;low bytes are not equal - compare high bytes
 1325 |  7  fpdlib.s     56 | Code        | 11 |         |    3 | 00/0E11 : AD 2F 0E    |                  lda          op2+1                
 1326 |  7  fpdlib.s     57 | Code        | 11 |         |    3 | 00/0E14 : ED 2D 0E    |                  sbc          op1+1                ;compare high bytes
 1327 |  7  fpdlib.s     58 | Code        | 11 |         |    2 | 00/0E17 : 09 01       |                  ora          #1                   ;make z = 0, since low bytes are not equal
 1328 |  7  fpdlib.s     59 | Code        | 11 |         |    2 | 00/0E19 : 70 0A       |                  bvs          ovflow               ;must handle overflow for signed arithmatic
 1329 |  7  fpdlib.s     60 | Code        | 11 |         |    1 | 00/0E1B : 60          |                  rts                               ;exit
 1330 |  7  fpdlib.s     61 | Comment     | 11 |         |    0 | 00/0E1C               |                 ;low bytes are equal - compare high bytes
 1331 |  7  fpdlib.s     62 | Empty       | 11 |         |    0 | 00/0E1C               | equalcmp                                           
 1332 |  7  fpdlib.s     63 | Code        | 11 |         |    3 | 00/0E1C : AD 2F 0E    |                  lda          op2+1                
 1333 |  7  fpdlib.s     64 | Code        | 11 |         |    3 | 00/0E1F : ED 2D 0E    |                  sbc          op1+1                ;upper bytes
 1334 |  7  fpdlib.s     65 | Code        | 11 |         |    2 | 00/0E22 : 70 01       |                  bvs          ovflow               ;must handle overflow for signed arithmetic
 1335 |  7  fpdlib.s     66 | Code        | 11 |         |    1 | 00/0E24 : 60          |                  rts                               ;return with flags set
 1336 |  7  fpdlib.s     67 | Comment     | 11 |         |    0 | 00/0E25               |                 ;overflow with signed arithmetic so complement the negative flag
 1337 |  7  fpdlib.s     68 | Comment     | 11 |         |    0 | 00/0E25               |                 ; do not change the carry flag and make the zero flag equal 0.
 1338 |  7  fpdlib.s     69 | Comment     | 11 |         |    0 | 00/0E25               |                 ; complement negative flag by exclusive-oring 80h and accumulator.
 1339 |  7  fpdlib.s     70 | Empty       | 11 |         |    0 | 00/0E25               | ovflow                                             
 1340 |  7  fpdlib.s     71 | Code        | 11 |         |    2 | 00/0E25 : 49 80       |                  eor          #$80                 ;complement negative flag
 1341 |  7  fpdlib.s     72 | Code        | 11 |         |    2 | 00/0E27 : 09 01       |                  ora          #1                   ;if overflow then the words are not equal z=0
 1342 |  7  fpdlib.s     73 | Comment     | 11 |         |    0 | 00/0E29               |                 ;carry unchanged
 1343 |  7  fpdlib.s     74 | Code        | 11 |         |    1 | 00/0E29 : 60          |                  rts                               
 1344 |  7  fpdlib.s     75 | Empty       | 11 |         |    0 | 00/0E2A               |                                                    
 1345 |  7  fpdlib.s     76 | Data        | 11 |         |    2 | 00/0E2A : 00 00       | retadrcmp        ds           2                    
 1346 |  7  fpdlib.s     77 | Data        | 11 |         |    2 | 00/0E2C : 00 00       | op1              ds           2                    
 1347 |  7  fpdlib.s     78 | Data        | 11 |         |    2 | 00/0E2E : 00 00       | op2              ds           2                    
 1348 |  7  fpdlib.s     79 | Empty       | 11 |         |    0 | 00/0E30               |                                                    
 1349 |  7  fpdlib.s     80 | Comment     | 11 |         |    0 | 00/0E30               | *
 1350 |  7  fpdlib.s     81 | Comment     | 11 |         |    0 | 00/0E30               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 1351 |  7  fpdlib.s     82 | Comment     | 11 |         |    0 | 00/0E30               | * division 16 bits V2
 1352 |  7  fpdlib.s     83 | Comment     | 11 |         |    0 | 00/0E30               | * ref : 6502_Assembly_Language_Subroutines.pdf
 1353 |  7  fpdlib.s     84 | Comment     | 11 |         |    0 | 00/0E30               | *
 1354 |  7  fpdlib.s     85 | Empty       | 11 |         |    0 | 00/0E30               | div16                                              
 1355 |  7  fpdlib.s     86 | Comment     | 11 |         |    0 | 00/0E30               |                 ;save return address
 1356 |  7  fpdlib.s     87 | Code        | 11 |         |    1 | 00/0E30 : 68          |                  pla                               
 1357 |  7  fpdlib.s     88 | Code        | 11 |         |    3 | 00/0E31 : 8D 59 0F    |                  sta          retadr               
 1358 |  7  fpdlib.s     89 | Code        | 11 |         |    1 | 00/0E34 : 68          |                  pla                               
 1359 |  7  fpdlib.s     90 | Code        | 11 |         |    3 | 00/0E35 : 8D 5A 0F    |                  sta          retadr+1             
 1360 |  7  fpdlib.s     91 | Comment     | 11 |         |    0 | 00/0E38               |                 ;get divisor
 1361 |  7  fpdlib.s     92 | Code        | 11 |         |    1 | 00/0E38 : 68          |                  pla                               
 1362 |  7  fpdlib.s     93 | Code        | 11 |         |    3 | 00/0E39 : 8D 57 0F    |                  sta          divisor              
 1363 |  7  fpdlib.s     94 | Code        | 11 |         |    1 | 00/0E3C : 68          |                  pla                               
 1364 |  7  fpdlib.s     95 | Code        | 11 |         |    3 | 00/0E3D : 8D 58 0F    |                  sta          divisor+1            
 1365 |  7  fpdlib.s     96 | Comment     | 11 |         |    0 | 00/0E40               |                 ;get dividend
 1366 |  7  fpdlib.s     97 | Code        | 11 |         |    1 | 00/0E40 : 68          |                  pla                               
 1367 |  7  fpdlib.s     98 | Code        | 11 |         |    3 | 00/0E41 : 8D 55 0F    |                  sta          dividend             
 1368 |  7  fpdlib.s     99 | Code        | 11 |         |    1 | 00/0E44 : 68          |                  pla                               
 1369 |  7  fpdlib.s    100 | Code        | 11 |         |    3 | 00/0E45 : 8D 56 0F    |                  sta          dividend+1           
 1370 |  7  fpdlib.s    101 | Empty       | 11 |         |    0 | 00/0E48               |                                                    
 1371 |  7  fpdlib.s    102 | Comment     | 11 |         |    0 | 00/0E48               |                 ;restore return address
 1372 |  7  fpdlib.s    103 | Code        | 11 |         |    3 | 00/0E48 : AD 5A 0F    |                  lda          retadr+1             
 1373 |  7  fpdlib.s    104 | Code        | 11 |         |    1 | 00/0E4B : 48          |                  pha                               
 1374 |  7  fpdlib.s    105 | Code        | 11 |         |    3 | 00/0E4C : AD 59 0F    |                  lda          retadr               
 1375 |  7  fpdlib.s    106 | Code        | 11 |         |    1 | 00/0E4F : 48          |                  pha                               
 1376 |  7  fpdlib.s    107 | Empty       | 11 |         |    0 | 00/0E50               |                                                    
 1377 |  7  fpdlib.s    108 | Comment     | 11 |         |    0 | 00/0E50               | * perform division
 1378 |  7  fpdlib.s    109 | Code        | 11 |         |    2 | 00/0E50 : A9 00       |                  lda          #0                   ;initialize rem to 0
 1379 |  7  fpdlib.s    110 | Code        | 11 |         |    3 | 00/0E52 : 8D 51 0F    |                  sta          rem                  
 1380 |  7  fpdlib.s    111 | Code        | 11 |         |    3 | 00/0E55 : 8D 52 0F    |                  sta          rem+1                
 1381 |  7  fpdlib.s    112 | Code        | 11 |         |    2 | 00/0E58 : A2 10       |                  ldx          #16                  ;there are 16 bits in dividend
 1382 |  7  fpdlib.s    113 | Code        | 11 |         |    3 | 00/0E5A : 0E 55 0F    | l1               asl          dividend             ;shift hi bit of dividend into rem
 1383 |  7  fpdlib.s    114 | Code        | 11 |         |    3 | 00/0E5D : 2E 56 0F    |                  rol          dividend+1           ;(vacating the lo bit, which will be used for the quotient)
 1384 |  7  fpdlib.s    115 | Code        | 11 |         |    3 | 00/0E60 : 2E 51 0F    |                  rol          rem                  
 1385 |  7  fpdlib.s    116 | Code        | 11 |         |    3 | 00/0E63 : 2E 52 0F    |                  rol          rem+1                
 1386 |  7  fpdlib.s    117 | Code        | 11 |         |    3 | 00/0E66 : AD 51 0F    |                  lda          rem                  
 1387 |  7  fpdlib.s    118 | Code        | 11 |         |    1 | 00/0E69 : 38          |                  sec                               ;trial subtraction
 1388 |  7  fpdlib.s    119 | Code        | 11 |         |    3 | 00/0E6A : ED 57 0F    |                  sbc          divisor              
 1389 |  7  fpdlib.s    120 | Code        | 11 |         |    1 | 00/0E6D : A8          |                  tay                               
 1390 |  7  fpdlib.s    121 | Code        | 11 |         |    3 | 00/0E6E : AD 52 0F    |                  lda          rem+1                
 1391 |  7  fpdlib.s    122 | Code        | 11 |         |    3 | 00/0E71 : ED 58 0F    |                  sbc          divisor+1            
 1392 |  7  fpdlib.s    123 | Code        | 11 |         |    2 | 00/0E74 : 90 09       |                  bcc          l2                   ;did subtraction succeed?
 1393 |  7  fpdlib.s    124 | Code        | 11 |         |    3 | 00/0E76 : 8D 52 0F    |                  sta          rem+1                ;if yes, save it
 1394 |  7  fpdlib.s    125 | Code        | 11 |         |    3 | 00/0E79 : 8C 51 0F    |                  sty          rem                  
 1395 |  7  fpdlib.s    126 | Code        | 11 |         |    3 | 00/0E7C : EE 55 0F    |                  inc          dividend             ;and record a 1 in the quotient
 1396 |  7  fpdlib.s    127 | Code        | 11 |         |    1 | 00/0E7F : CA          | l2               dex                               
 1397 |  7  fpdlib.s    128 | Code        | 11 |         |    2 | 00/0E80 : D0 D8       |                  bne          l1                   
 1398 |  7  fpdlib.s    129 | Code        | 11 |         |    1 | 00/0E82 : 60          |                  rts                               
 1399 |  7  fpdlib.s    130 | Comment     | 11 |         |    0 | 00/0E83               | *
 1400 |  7  fpdlib.s    131 | Comment     | 11 |         |    0 | 00/0E83               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 1401 |  7  fpdlib.s    132 | Comment     | 11 |         |    0 | 00/0E83               | * division 16 bit + decimal
 1402 |  7  fpdlib.s    133 | Comment     | 11 |         |    0 | 00/0E83               | *
 1403 |  7  fpdlib.s    134 | Empty       | 11 |         |    0 | 00/0E83               | div16dec                                           
 1404 |  7  fpdlib.s    135 | Comment     | 11 |         |    0 | 00/0E83               |                 ;save return address
 1405 |  7  fpdlib.s    136 | Code        | 11 |         |    1 | 00/0E83 : 68          |                  pla                               
 1406 |  7  fpdlib.s    137 | Code        | 11 |         |    3 | 00/0E84 : 8D 59 0F    |                  sta          retadr               
 1407 |  7  fpdlib.s    138 | Code        | 11 |         |    1 | 00/0E87 : 68          |                  pla                               
 1408 |  7  fpdlib.s    139 | Code        | 11 |         |    3 | 00/0E88 : 8D 5A 0F    |                  sta          retadr+1             
 1409 |  7  fpdlib.s    140 | Empty       | 11 |         |    0 | 00/0E8B               |                                                    
 1410 |  7  fpdlib.s    141 | Comment     | 11 |         |    0 | 00/0E8B               |                 ;get divisor
 1411 |  7  fpdlib.s    142 | Code        | 11 |         |    1 | 00/0E8B : 68          |                  pla                               
 1412 |  7  fpdlib.s    143 | Code        | 11 |         |    3 | 00/0E8C : 8D 57 0F    |                  sta          divisor              
 1413 |  7  fpdlib.s    144 | Code        | 11 |         |    1 | 00/0E8F : 68          |                  pla                               
 1414 |  7  fpdlib.s    145 | Code        | 11 |         |    3 | 00/0E90 : 8D 58 0F    |                  sta          divisor+1            
 1415 |  7  fpdlib.s    146 | Comment     | 11 |         |    0 | 00/0E93               |                 ;get dividend
 1416 |  7  fpdlib.s    147 | Code        | 11 |         |    1 | 00/0E93 : 68          |                  pla                               
 1417 |  7  fpdlib.s    148 | Code        | 11 |         |    3 | 00/0E94 : 8D 55 0F    |                  sta          dividend             
 1418 |  7  fpdlib.s    149 | Code        | 11 |         |    1 | 00/0E97 : 68          |                  pla                               
 1419 |  7  fpdlib.s    150 | Code        | 11 |         |    3 | 00/0E98 : 8D 56 0F    |                  sta          dividend+1           
 1420 |  7  fpdlib.s    151 | Empty       | 11 |         |    0 | 00/0E9B               |                                                    
 1421 |  7  fpdlib.s    152 | Comment     | 11 |         |    0 | 00/0E9B               |                 ;restore return address
 1422 |  7  fpdlib.s    153 | Code        | 11 |         |    3 | 00/0E9B : AD 5A 0F    |                  lda          retadr+1             
 1423 |  7  fpdlib.s    154 | Code        | 11 |         |    1 | 00/0E9E : 48          |                  pha                               
 1424 |  7  fpdlib.s    155 | Code        | 11 |         |    3 | 00/0E9F : AD 59 0F    |                  lda          retadr               
 1425 |  7  fpdlib.s    156 | Code        | 11 |         |    1 | 00/0EA2 : 48          |                  pha                               
 1426 |  7  fpdlib.s    157 | Empty       | 11 |         |    0 | 00/0EA3               |                                                    
 1427 |  7  fpdlib.s    158 | Comment     | 11 |         |    0 | 00/0EA3               | * perform division, integer part
 1428 |  7  fpdlib.s    159 | Code        | 11 |         |    2 | 00/0EA3 : A9 00       |                  lda          #0                   ;initialize rem to 0
 1429 |  7  fpdlib.s    160 | Code        | 11 |         |    3 | 00/0EA5 : 8D 51 0F    |                  sta          rem                  
 1430 |  7  fpdlib.s    161 | Code        | 11 |         |    3 | 00/0EA8 : 8D 52 0F    |                  sta          rem+1                
 1431 |  7  fpdlib.s    162 | Code        | 11 |         |    2 | 00/0EAB : A2 10       |                  ldx          #16                  ;there are 16 bits in dividend
 1432 |  7  fpdlib.s    163 | Code        | 11 |         |    3 | 00/0EAD : 0E 55 0F    | l11              asl          dividend             ;shift hi bit of dividend into rem
 1433 |  7  fpdlib.s    164 | Code        | 11 |         |    3 | 00/0EB0 : 2E 56 0F    |                  rol          dividend+1           ;(vacating the lo bit, which will be used for the quotient)
 1434 |  7  fpdlib.s    165 | Code        | 11 |         |    3 | 00/0EB3 : 2E 51 0F    |                  rol          rem                  
 1435 |  7  fpdlib.s    166 | Code        | 11 |         |    3 | 00/0EB6 : 2E 52 0F    |                  rol          rem+1                
 1436 |  7  fpdlib.s    167 | Code        | 11 |         |    3 | 00/0EB9 : AD 51 0F    |                  lda          rem                  
 1437 |  7  fpdlib.s    168 | Code        | 11 |         |    1 | 00/0EBC : 38          |                  sec                               ;trial subtraction
 1438 |  7  fpdlib.s    169 | Code        | 11 |         |    3 | 00/0EBD : ED 57 0F    |                  sbc          divisor              
 1439 |  7  fpdlib.s    170 | Code        | 11 |         |    1 | 00/0EC0 : A8          |                  tay                               
 1440 |  7  fpdlib.s    171 | Code        | 11 |         |    3 | 00/0EC1 : AD 52 0F    |                  lda          rem+1                
 1441 |  7  fpdlib.s    172 | Code        | 11 |         |    3 | 00/0EC4 : ED 58 0F    |                  sbc          divisor+1            
 1442 |  7  fpdlib.s    173 | Code        | 11 |         |    2 | 00/0EC7 : 90 09       |                  bcc          l22                  ;did subtraction succeed?
 1443 |  7  fpdlib.s    174 | Code        | 11 |         |    3 | 00/0EC9 : 8D 52 0F    |                  sta          rem+1                ;if yes, save it
 1444 |  7  fpdlib.s    175 | Code        | 11 |         |    3 | 00/0ECC : 8C 51 0F    |                  sty          rem                  
 1445 |  7  fpdlib.s    176 | Code        | 11 |         |    3 | 00/0ECF : EE 55 0F    |                  inc          dividend             ;and record a 1 in the quotient
 1446 |  7  fpdlib.s    177 | Code        | 11 |         |    1 | 00/0ED2 : CA          | l22              dex                               
 1447 |  7  fpdlib.s    178 | Code        | 11 |         |    2 | 00/0ED3 : D0 D8       |                  bne          l11                  
 1448 |  7  fpdlib.s    179 | Empty       | 11 |         |    0 | 00/0ED5               |                                                    
 1449 |  7  fpdlib.s    180 | Comment     | 11 |         |    0 | 00/0ED5               | * now decimal part
 1450 |  7  fpdlib.s    181 | Comment     | 11 |         |    0 | 00/0ED5               | *
 1451 |  7  fpdlib.s    182 | Code        | 11 |         |    2 | 00/0ED5 : A9 00       |                  lda          #0                   ; init decimal part to 0
 1452 |  7  fpdlib.s    183 | Code        | 11 |         |    3 | 00/0ED7 : 8D 53 0F    |                  sta          decimal              
 1453 |  7  fpdlib.s    184 | Code        | 11 |         |    3 | 00/0EDA : 8D 54 0F    |                  sta          decimal+1            
 1454 |  7  fpdlib.s    185 | Empty       | 11 |         |    0 | 00/0EDD               |                                                    
 1455 |  7  fpdlib.s    186 | Code        | 11 |         |    3 | 00/0EDD : AD 51 0F    |                  lda          rem                  ; test remaider
 1456 |  7  fpdlib.s    187 | Code        | 11 |         |    3 | 00/0EE0 : 0D 52 0F    |                  ora          rem+1                ; if remaider = 0 : exit
 1457 |  7  fpdlib.s    188 | Code        | 11 |         |    2 | 00/0EE3 : F0 1B       |                  beq          endec                
 1458 |  7  fpdlib.s    189 | Empty       | 11 |         |    0 | 00/0EE5               |                                                    
 1459 |  7  fpdlib.s    190 | Macro       | 11 |         |    0 | 00/0EE5               |                  movInt       dividend;tempo       ; save result (integer part)
 1460 |  7  fpdlib.s    190 | Code        | 11 |         |    3 | 00/0EE5 : AD 55 0F    |                  lda          dividend             
 1461 |  7  fpdlib.s    190 | Code        | 11 |         |    3 | 00/0EE8 : 8D 5C 0F    |                  sta          tempo                
 1462 |  7  fpdlib.s    190 | Code        | 11 |         |    3 | 00/0EEB : AD 56 0F    |                  lda          dividend+1           
 1463 |  7  fpdlib.s    190 | Code        | 11 |         |    3 | 00/0EEE : 8D 5D 0F    |                  sta          tempo+1              
 1464 |  7  fpdlib.s    191 | Code        | 11 |         |    3 | 00/0EF1 : 20 01 0F    |                  jsr          Decimal              ; calculate decimal part
 1465 |  7  fpdlib.s    192 | Macro       | 11 |         |    0 | 00/0EF4               |                  movInt       tempo;dividend       ; restore result (integer part)
 1466 |  7  fpdlib.s    192 | Code        | 11 |         |    3 | 00/0EF4 : AD 5C 0F    |                  lda          tempo                
 1467 |  7  fpdlib.s    192 | Code        | 11 |         |    3 | 00/0EF7 : 8D 55 0F    |                  sta          dividend             
 1468 |  7  fpdlib.s    192 | Code        | 11 |         |    3 | 00/0EFA : AD 5D 0F    |                  lda          tempo+1              
 1469 |  7  fpdlib.s    192 | Code        | 11 |         |    3 | 00/0EFD : 8D 56 0F    |                  sta          dividend+1           
 1470 |  7  fpdlib.s    193 | Empty       | 11 |         |    0 | 00/0F00               |                                                    
 1471 |  7  fpdlib.s    194 | Code        | 11 |         |    1 | 00/0F00 : 60          | endec            rts                               
 1472 |  7  fpdlib.s    195 | Comment     | 11 |         |    0 | 00/0F01               | * 
 1473 |  7  fpdlib.s    196 | Comment     | 11 |         |    0 | 00/0F01               | *
 1474 |  7  fpdlib.s    197 | Empty       | 11 |         |    0 | 00/0F01               | Decimal                                            ; calcute decimal part
 1475 |  7  fpdlib.s    198 | Comment     | 11 |         |    0 | 00/0F01               | * ALGO :
 1476 |  7  fpdlib.s    199 | Comment     | 11 |         |    0 | 00/0F01               | * remainder = remaider * 2 ; 
 1477 |  7  fpdlib.s    200 | Comment     | 11 |         |    0 | 00/0F01               | * if remaider < divisor then shift left decimal var with carry clear and loop (unless already 16 loops)
 1478 |  7  fpdlib.s    201 | Comment     | 11 |         |    0 | 00/0F01               | * if remaider >= divisor then shift left decimal var with carry set,
 1479 |  7  fpdlib.s    202 | Comment     | 11 |         |    0 | 00/0F01               | * divide remainder by divisor and loop (unless already 16 loops)
 1480 |  7  fpdlib.s    203 | Comment     | 11 |         |    0 | 00/0F01               | *
 1481 |  7  fpdlib.s    204 | Code        | 11 |         |    2 | 00/0F01 : A9 10       |                  lda          #16                  ; init loop counter
 1482 |  7  fpdlib.s    205 | Code        | 11 |         |    3 | 00/0F03 : 8D 5B 0F    |                  sta          loopcnt              
 1483 |  7  fpdlib.s    206 | Empty       | 11 |         |    0 | 00/0F06               |                                                    
 1484 |  7  fpdlib.s    207 | Code        | 11 |         |    3 | 00/0F06 : 0E 51 0F    | restart          asl          rem                  ; remainder x 2
 1485 |  7  fpdlib.s    208 | Code        | 11 |         |    3 | 00/0F09 : 2E 52 0F    |                  rol          rem+1                
 1486 |  7  fpdlib.s    209 | Macro       | 11 |         |    0 | 00/0F0C               |                  DoCompare16  rem;divisor;cmp16    ; compare with divisor
 1487 |  7  fpdlib.s    209 | Code        | 11 |         |    3 | 00/0F0C : AD 52 0F    |                  lda          rem+1                ; number 1 on stack
 1488 |  7  fpdlib.s    209 | Code        | 11 |         |    1 | 00/0F0F : 48          |                  pha                               
 1489 |  7  fpdlib.s    209 | Code        | 11 |         |    3 | 00/0F10 : AD 51 0F    |                  lda          rem                  
 1490 |  7  fpdlib.s    209 | Code        | 11 |         |    1 | 00/0F13 : 48          |                  pha                               
 1491 |  7  fpdlib.s    209 | Code        | 11 |         |    3 | 00/0F14 : AD 58 0F    |                  lda          divisor+1            ; number 2 on stack
 1492 |  7  fpdlib.s    209 | Code        | 11 |         |    1 | 00/0F17 : 48          |                  pha                               
 1493 |  7  fpdlib.s    209 | Code        | 11 |         |    3 | 00/0F18 : AD 57 0F    |                  lda          divisor              
 1494 |  7  fpdlib.s    209 | Code        | 11 |         |    1 | 00/0F1B : 48          |                  pha                               
 1495 |  7  fpdlib.s    209 | Code        | 11 |         |    3 | 00/0F1C : 20 EB 0D    |                  jsr          cmp16                ; compare routine (works for signed or unsigned numbers)
 1496 |  7  fpdlib.s    210 | Code        | 11 |         |    2 | 00/0F1F : F0 10       |                  beq          equal                
 1497 |  7  fpdlib.s    211 | Code        | 11 |         |    2 | 00/0F21 : B0 0E       |                  bcs          bigger               ; branch if equal or bigger
 1498 |  7  fpdlib.s    212 | Code        | 11 |         |    1 | 00/0F23 : 18          |                  clc                               
 1499 |  7  fpdlib.s    213 | Code        | 11 |         |    3 | 00/0F24 : 2E 53 0F    |                  rol          decimal              ; else shift left decimal with 0 in carry
 1500 |  7  fpdlib.s    214 | Code        | 11 |         |    3 | 00/0F27 : 2E 54 0F    |                  rol          decimal+1            
 1501 |  7  fpdlib.s    215 | Code        | 11 |         |    3 | 00/0F2A : CE 5B 0F    |                  dec          loopcnt              ; loop if not 16 loops
 1502 |  7  fpdlib.s    216 | Code        | 11 |         |    2 | 00/0F2D : F0 21       |                  beq          endfunc              
 1503 |  7  fpdlib.s    217 | Code        | 11 |         |    2 | 00/0F2F : D0 D5       |                  bne          restart              
 1504 |  7  fpdlib.s    218 | Empty       | 11 |         |    0 | 00/0F31               | equal                                              
 1505 |  7  fpdlib.s    219 | Empty       | 11 |         |    0 | 00/0F31               | bigger                                             
 1506 |  7  fpdlib.s    220 | Code        | 11 |         |    1 | 00/0F31 : 38          |                  sec                               ; here if remainder >= divisor.
 1507 |  7  fpdlib.s    221 | Code        | 11 |         |    3 | 00/0F32 : 2E 53 0F    |                  rol          decimal              ; rol decimal with carry set
 1508 |  7  fpdlib.s    222 | Code        | 11 |         |    3 | 00/0F35 : 2E 54 0F    |                  rol          decimal+1            
 1509 |  7  fpdlib.s    223 | Macro       | 11 |         |    0 | 00/0F38               |                  DoDivid16    rem;divisor;div16    ; divide again to get a new remainder
 1510 |  7  fpdlib.s    223 | Code        | 11 |         |    3 | 00/0F38 : AD 52 0F    |                  lda          rem+1                ; dividend on stack
 1511 |  7  fpdlib.s    223 | Code        | 11 |         |    1 | 00/0F3B : 48          |                  pha                               
 1512 |  7  fpdlib.s    223 | Code        | 11 |         |    3 | 00/0F3C : AD 51 0F    |                  lda          rem                  
 1513 |  7  fpdlib.s    223 | Code        | 11 |         |    1 | 00/0F3F : 48          |                  pha                               
 1514 |  7  fpdlib.s    223 | Code        | 11 |         |    3 | 00/0F40 : AD 58 0F    |                  lda          divisor+1            ; divisor on stack
 1515 |  7  fpdlib.s    223 | Code        | 11 |         |    1 | 00/0F43 : 48          |                  pha                               
 1516 |  7  fpdlib.s    223 | Code        | 11 |         |    3 | 00/0F44 : AD 57 0F    |                  lda          divisor              
 1517 |  7  fpdlib.s    223 | Code        | 11 |         |    1 | 00/0F47 : 48          |                  pha                               
 1518 |  7  fpdlib.s    223 | Code        | 11 |         |    3 | 00/0F48 : 20 30 0E    |                  jsr          div16                ; call division routine
 1519 |  7  fpdlib.s    224 | Code        | 11 |         |    3 | 00/0F4B : CE 5B 0F    |                  dec          loopcnt              ; loop if not 16 loops
 1520 |  7  fpdlib.s    225 | Code        | 11 |         |    2 | 00/0F4E : D0 B6       |                  bne          restart              
 1521 |  7  fpdlib.s    226 | Empty       | 11 |         |    0 | 00/0F50               | endfunc                                            
 1522 |  7  fpdlib.s    227 | Code        | 11 |         |    1 | 00/0F50 : 60          |                  rts                               
 1523 |  7  fpdlib.s    228 | Comment     | 11 |         |    0 | 00/0F51               | *
 1524 |  7  fpdlib.s    229 | Comment     | 11 |         |    0 | 00/0F51               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 1525 |  7  fpdlib.s    230 | Comment     | 11 |         |    0 | 00/0F51               | * Variables
 1526 |  7  fpdlib.s    231 | Comment     | 11 |         |    0 | 00/0F51               | *
 1527 |  7  fpdlib.s    232 | Data        | 11 |         |    2 | 00/0F51 : 00 00       | rem              dw           0                    
 1528 |  7  fpdlib.s    233 | Data        | 11 |         |    2 | 00/0F53 : 00 00       | decimal          dw           0                    
 1529 |  7  fpdlib.s    234 | Data        | 11 |         |    2 | 00/0F55 : 00 00       | dividend         dw           0                    
 1530 |  7  fpdlib.s    235 | Data        | 11 |         |    2 | 00/0F57 : 00 00       | divisor          dw           0                    
 1531 |  7  fpdlib.s    236 | Data        | 11 |         |    2 | 00/0F59 : 00 00       | retadr           dw           0                    
 1532 |  7  fpdlib.s    237 | Data        | 11 |         |    1 | 00/0F5B : 00          | loopcnt          ds           1                    
 1533 |  7  fpdlib.s    238 | Data        | 11 |         |    2 | 00/0F5C : 00 00       | tempo            ds           2                    
 1534 |  1 asmdemo.s    585 | Directive   | 11 |         |    0 | 00/0F5E               |                  put          data                 
 1535 |  8    data.s      1 | Empty       | 11 |         |    0 | 00/0F5E               | linedata                                           
 1536 |  8    data.s      2 | Empty       | 11 |         |    0 | 00/0F5E               |                                                    
 1537 |  8    data.s      3 | Comment     | 11 |         |    0 | 00/0F5E               | * frame
 1538 |  8    data.s      4 | Data        | 11 |         |    8 | 00/0F5E : 01 00 01 00 |                  dw           1,1,556,2            
      |                     |             |    |         |      |           2C 02 02 00 |
 1539 |  8    data.s      5 | Data        | 11 |         |    8 | 00/0F66 : 2C 02 02 00 |                  dw           556,2,555,190        
      |                     |             |    |         |      |           2B 02 BE 00 |
 1540 |  8    data.s      6 | Data        | 11 |         |    8 | 00/0F6E : 2B 02 BE 00 |                  dw           555,190,3,190        
      |                     |             |    |         |      |           03 00 BE 00 |
 1541 |  8    data.s      7 | Data        | 11 |         |    8 | 00/0F76 : 03 00 BE 00 |                  dw           3,190,3,1            
      |                     |             |    |         |      |           03 00 01 00 |
 1542 |  8    data.s      8 | Comment     | 11 |         |    0 | 00/0F7E               |         ;dfb $FF,$FF
 1543 |  8    data.s      9 | Empty       | 11 |         |    0 | 00/0F7E               |                                                    
 1544 |  8    data.s     10 | Comment     | 11 |         |    0 | 00/0F7E               | * top pattern
 1545 |  8    data.s     11 | Data        | 11 |         |    8 | 00/0F7E : 19 00 5B 00 |                  dw           25,91,27,52          
      |                     |             |    |         |      |           1B 00 34 00 |
 1546 |  8    data.s     12 | Data        | 11 |         |    8 | 00/0F86 : 1C 00 5A 00 |                  dw           28,90,98,50          
      |                     |             |    |         |      |           62 00 32 00 |
 1547 |  8    data.s     13 | Data        | 11 |         |    8 | 00/0F8E : 62 00 32 00 |                  dw           98,50,96,88          
      |                     |             |    |         |      |           60 00 58 00 |
 1548 |  8    data.s     14 | Data        | 11 |         |    8 | 00/0F96 : 60 00 58 00 |                  dw           96,88,198,48         
      |                     |             |    |         |      |           C6 00 30 00 |
 1549 |  8    data.s     15 | Data        | 11 |         |    8 | 00/0F9E : C5 00 30 00 |                  dw           197,48,196,86        
      |                     |             |    |         |      |           C4 00 56 00 |
 1550 |  8    data.s     16 | Data        | 11 |         |    8 | 00/0FA6 : C4 00 56 00 |                  dw           196,86,288,48        
      |                     |             |    |         |      |           20 01 30 00 |
 1551 |  8    data.s     17 | Data        | 11 |         |    8 | 00/0FAE : 20 01 30 00 |                  dw           288,48,287,86        
      |                     |             |    |         |      |           1F 01 56 00 |
 1552 |  8    data.s     18 | Data        | 11 |         |    8 | 00/0FB6 : 1E 01 55 00 |                  dw           286,85,372,48        
      |                     |             |    |         |      |           74 01 30 00 |
 1553 |  8    data.s     19 | Data        | 11 |         |    8 | 00/0FBE : 74 01 30 00 |                  dw           372,48,372,83        
      |                     |             |    |         |      |           74 01 53 00 |
 1554 |  8    data.s     20 | Data        | 11 |         |    8 | 00/0FC6 : 74 01 53 00 |                  dw           372,83,442,48        
      |                     |             |    |         |      |           BA 01 30 00 |
 1555 |  8    data.s     21 | Data        | 11 |         |    8 | 00/0FCE : BA 01 30 00 |                  dw           442,48,439,83        
      |                     |             |    |         |      |           B7 01 53 00 |
 1556 |  8    data.s     22 | Data        | 11 |         |    8 | 00/0FD6 : B7 01 53 00 |                  dw           439,83,512,50        
      |                     |             |    |         |      |           00 02 32 00 |
 1557 |  8    data.s     23 | Data        | 11 |         |    8 | 00/0FDE : 00 02 32 00 |                  dw           512,50,512,82        
      |                     |             |    |         |      |           00 02 52 00 |
 1558 |  8    data.s     24 | Data        | 11 |         |    8 | 00/0FE6 : 2C 02 41 00 |                  dw           556,65,513,83        
      |                     |             |    |         |      |           01 02 53 00 |
 1559 |  8    data.s     25 | Data        | 11 |         |    8 | 00/0FEE : 1F 00 32 00 |                  dw           31,50,557,46         
      |                     |             |    |         |      |           2D 02 2E 00 |
 1560 |  8    data.s     26 | Data        | 11 |         |    8 | 00/0FF6 : 2C 02 2E 00 |                  dw           556,46,554,85        
      |                     |             |    |         |      |           2A 02 55 00 |
 1561 |  8    data.s     27 | Data        | 11 |         |    8 | 00/0FFE : 2A 02 55 00 |                  dw           554,85,26,91         
      |                     |             |    |         |      |           1A 00 5B 00 |
 1562 |  8    data.s     28 | Data        | 11 |         |    8 | 00/1006 : 1B 00 34 00 |                  dw           27,52,68,66          
      |                     |             |    |         |      |           44 00 42 00 |
 1563 |  8    data.s     29 | Data        | 11 |         |    8 | 00/100E : 65 00 34 00 |                  dw           101,52,150,65        
      |                     |             |    |         |      |           96 00 41 00 |
 1564 |  8    data.s     30 | Data        | 11 |         |    8 | 00/1016 : C8 00 31 00 |                  dw           200,49,247,63        
      |                     |             |    |         |      |           F7 00 3F 00 |
 1565 |  8    data.s     31 | Data        | 11 |         |    8 | 00/101E : 22 01 33 00 |                  dw           290,51,332,65        
      |                     |             |    |         |      |           4C 01 41 00 |
 1566 |  8    data.s     32 | Data        | 11 |         |    8 | 00/1026 : 76 01 31 00 |                  dw           374,49,411,64        
      |                     |             |    |         |      |           9B 01 40 00 |
 1567 |  8    data.s     33 | Data        | 11 |         |    8 | 00/102E : BA 01 32 00 |                  dw           442,50,475,66        
      |                     |             |    |         |      |           DB 01 42 00 |
 1568 |  8    data.s     34 | Data        | 11 |         |    8 | 00/1036 : 02 02 32 00 |                  dw           514,50,552,64        
      |                     |             |    |         |      |           28 02 40 00 |
 1569 |  8    data.s     35 | Data        | 11 |         |    8 | 00/103E : 1B 00 3B 00 |                  dw           27,59,38,56          
      |                     |             |    |         |      |           26 00 38 00 |
 1570 |  8    data.s     36 | Data        | 11 |         |    8 | 00/1046 : 1B 00 40 00 |                  dw           27,64,47,59          
      |                     |             |    |         |      |           2F 00 3B 00 |
 1571 |  8    data.s     37 | Data        | 11 |         |    8 | 00/104E : 1C 00 45 00 |                  dw           28,69,49,63          
      |                     |             |    |         |      |           31 00 3F 00 |
 1572 |  8    data.s     38 | Data        | 11 |         |    8 | 00/1056 : 1D 00 49 00 |                  dw           29,73,60,61          
      |                     |             |    |         |      |           3C 00 3D 00 |
 1573 |  8    data.s     39 | Data        | 11 |         |    8 | 00/105E : 21 00 4D 00 |                  dw           33,77,60,64          
      |                     |             |    |         |      |           3C 00 40 00 |
 1574 |  8    data.s     40 | Data        | 11 |         |    8 | 00/1066 : 1E 00 53 00 |                  dw           30,83,61,69          
      |                     |             |    |         |      |           3D 00 45 00 |
 1575 |  8    data.s     41 | Data        | 11 |         |    8 | 00/106E : 64 00 36 00 |                  dw           100,54,103,52        
      |                     |             |    |         |      |           67 00 34 00 |
 1576 |  8    data.s     42 | Data        | 11 |         |    8 | 00/1076 : 64 00 38 00 |                  dw           100,56,107,52        
      |                     |             |    |         |      |           6B 00 34 00 |
 1577 |  8    data.s     43 | Data        | 11 |         |    8 | 00/107E : 63 00 3B 00 |                  dw           99,59,112,55         
      |                     |             |    |         |      |           70 00 37 00 |
 1578 |  8    data.s     44 | Data        | 11 |         |    8 | 00/1086 : 64 00 3F 00 |                  dw           100,63,118,57        
      |                     |             |    |         |      |           76 00 39 00 |
 1579 |  8    data.s     45 | Data        | 11 |         |    8 | 00/108E : 64 00 43 00 |                  dw           100,67,127,57        
      |                     |             |    |         |      |           7F 00 39 00 |
 1580 |  8    data.s     46 | Data        | 11 |         |    8 | 00/1096 : 63 00 48 00 |                  dw           99,72,132,60         
      |                     |             |    |         |      |           84 00 3C 00 |
 1581 |  8    data.s     47 | Data        | 11 |         |    8 | 00/109E : 63 00 4B 00 |                  dw           99,75,132,64         
      |                     |             |    |         |      |           84 00 40 00 |
 1582 |  8    data.s     48 | Data        | 11 |         |    8 | 00/10A6 : 62 00 50 00 |                  dw           98,80,143,62         
      |                     |             |    |         |      |           8F 00 3E 00 |
 1583 |  8    data.s     49 | Data        | 11 |         |    8 | 00/10AE : 69 00 51 00 |                  dw           105,81,144,64        
      |                     |             |    |         |      |           90 00 40 00 |
 1584 |  8    data.s     50 | Data        | 11 |         |    8 | 00/10B6 : C6 00 36 00 |                  dw           198,54,207,52        
      |                     |             |    |         |      |           CF 00 34 00 |
 1585 |  8    data.s     51 | Data        | 11 |         |    8 | 00/10BE : C7 00 3A 00 |                  dw           199,58,216,53        
      |                     |             |    |         |      |           D8 00 35 00 |
 1586 |  8    data.s     52 | Data        | 11 |         |    8 | 00/10C6 : C7 00 3F 00 |                  dw           199,63,222,56        
      |                     |             |    |         |      |           DE 00 38 00 |
 1587 |  8    data.s     53 | Data        | 11 |         |    8 | 00/10CE : C7 00 43 00 |                  dw           199,67,223,59        
      |                     |             |    |         |      |           DF 00 3B 00 |
 1588 |  8    data.s     54 | Data        | 11 |         |    8 | 00/10D6 : C6 00 47 00 |                  dw           198,71,229,61        
      |                     |             |    |         |      |           E5 00 3D 00 |
 1589 |  8    data.s     55 | Data        | 11 |         |    8 | 00/10DE : CA 00 4C 00 |                  dw           202,76,233,62        
      |                     |             |    |         |      |           E9 00 3E 00 |
 1590 |  8    data.s     56 | Data        | 11 |         |    8 | 00/10E6 : C9 00 51 00 |                  dw           201,81,242,62        
      |                     |             |    |         |      |           F2 00 3E 00 |
 1591 |  8    data.s     57 | Data        | 11 |         |    8 | 00/10EE : 22 01 38 00 |                  dw           290,56,295,54        
      |                     |             |    |         |      |           27 01 36 00 |
 1592 |  8    data.s     58 | Data        | 11 |         |    8 | 00/10F6 : 23 01 3A 00 |                  dw           291,58,300,55        
      |                     |             |    |         |      |           2C 01 37 00 |
 1593 |  8    data.s     59 | Data        | 11 |         |    8 | 00/10FE : 23 01 3E 00 |                  dw           291,62,307,57        
      |                     |             |    |         |      |           33 01 39 00 |
 1594 |  8    data.s     60 | Data        | 11 |         |    8 | 00/1106 : 23 01 43 00 |                  dw           291,67,311,59        
      |                     |             |    |         |      |           37 01 3B 00 |
 1595 |  8    data.s     61 | Data        | 11 |         |    8 | 00/110E : 25 01 47 00 |                  dw           293,71,318,61        
      |                     |             |    |         |      |           3E 01 3D 00 |
 1596 |  8    data.s     62 | Data        | 11 |         |    8 | 00/1116 : 25 01 4D 00 |                  dw           293,77,326,63        
      |                     |             |    |         |      |           46 01 3F 00 |
 1597 |  8    data.s     63 | Data        | 11 |         |    8 | 00/111E : 78 01 38 00 |                  dw           376,56,381,54        
      |                     |             |    |         |      |           7D 01 36 00 |
 1598 |  8    data.s     64 | Data        | 11 |         |    8 | 00/1126 : 78 01 3E 00 |                  dw           376,62,391,56        
      |                     |             |    |         |      |           87 01 38 00 |
 1599 |  8    data.s     65 | Data        | 11 |         |    8 | 00/112E : 74 01 42 00 |                  dw           372,66,392,59        
      |                     |             |    |         |      |           88 01 3B 00 |
 1600 |  8    data.s     66 | Data        | 11 |         |    8 | 00/1136 : 7A 01 45 00 |                  dw           378,69,397,62        
      |                     |             |    |         |      |           8D 01 3E 00 |
 1601 |  8    data.s     67 | Data        | 11 |         |    8 | 00/113E : 79 01 4A 00 |                  dw           377,74,404,63        
      |                     |             |    |         |      |           94 01 3F 00 |
 1602 |  8    data.s     68 | Data        | 11 |         |    8 | 00/1146 : BA 01 37 00 |                  dw           442,55,446,52        
      |                     |             |    |         |      |           BE 01 34 00 |
 1603 |  8    data.s     69 | Data        | 11 |         |    8 | 00/114E : BC 01 3B 00 |                  dw           444,59,450,56        
      |                     |             |    |         |      |           C2 01 38 00 |
 1604 |  8    data.s     70 | Data        | 11 |         |    8 | 00/1156 : BA 01 3E 00 |                  dw           442,62,455,57        
      |                     |             |    |         |      |           C7 01 39 00 |
 1605 |  8    data.s     71 | Data        | 11 |         |    8 | 00/115E : BB 01 43 00 |                  dw           443,67,461,61        
      |                     |             |    |         |      |           CD 01 3D 00 |
 1606 |  8    data.s     72 | Data        | 11 |         |    8 | 00/1166 : BA 01 48 00 |                  dw           442,72,464,61        
      |                     |             |    |         |      |           D0 01 3D 00 |
 1607 |  8    data.s     73 | Data        | 11 |         |    8 | 00/116E : BA 01 4B 00 |                  dw           442,75,469,63        
      |                     |             |    |         |      |           D5 01 3F 00 |
 1608 |  8    data.s     74 | Data        | 11 |         |    8 | 00/1176 : BA 01 4F 00 |                  dw           442,79,473,65        
      |                     |             |    |         |      |           D9 01 41 00 |
 1609 |  8    data.s     75 | Data        | 11 |         |    8 | 00/117E : 02 02 3A 00 |                  dw           514,58,523,54        
      |                     |             |    |         |      |           0B 02 36 00 |
 1610 |  8    data.s     76 | Data        | 11 |         |    8 | 00/1186 : 02 02 3D 00 |                  dw           514,61,522,56        
      |                     |             |    |         |      |           0A 02 38 00 |
 1611 |  8    data.s     77 | Data        | 11 |         |    8 | 00/118E : 02 02 42 00 |                  dw           514,66,530,56        
      |                     |             |    |         |      |           12 02 38 00 |
 1612 |  8    data.s     78 | Data        | 11 |         |    8 | 00/1196 : 02 02 45 00 |                  dw           514,69,533,57        
      |                     |             |    |         |      |           15 02 39 00 |
 1613 |  8    data.s     79 | Data        | 11 |         |    8 | 00/119E : 02 02 48 00 |                  dw           514,72,535,58        
      |                     |             |    |         |      |           17 02 3A 00 |
 1614 |  8    data.s     80 | Data        | 11 |         |    8 | 00/11A6 : 02 02 4C 00 |                  dw           514,76,539,61        
      |                     |             |    |         |      |           1B 02 3D 00 |
 1615 |  8    data.s     81 | Data        | 11 |         |    8 | 00/11AE : 05 02 50 00 |                  dw           517,80,544,64        
      |                     |             |    |         |      |           20 02 40 00 |
 1616 |  8    data.s     82 | Empty       | 11 |         |    0 | 00/11B6               |                                                    
 1617 |  8    data.s     83 | Comment     | 11 |         |    0 | 00/11B6               | * middle pattern
 1618 |  8    data.s     84 | Data        | 11 |         |    8 | 00/11B6 : 1C 00 5F 00 |                  dw           28,95,22,120         
      |                     |             |    |         |      |           16 00 78 00 |
 1619 |  8    data.s     85 | Data        | 11 |         |    8 | 00/11BE : 1D 00 5F 00 |                  dw           29,95,84,122         
      |                     |             |    |         |      |           54 00 7A 00 |
 1620 |  8    data.s     86 | Data        | 11 |         |    8 | 00/11C6 : 3A 00 6D 00 |                  dw           58,109,100,94        
      |                     |             |    |         |      |           64 00 5E 00 |
 1621 |  8    data.s     87 | Data        | 11 |         |    8 | 00/11CE : 65 00 5E 00 |                  dw           101,94,103,122       
      |                     |             |    |         |      |           67 00 7A 00 |
 1622 |  8    data.s     88 | Data        | 11 |         |    8 | 00/11D6 : 66 00 5E 00 |                  dw           102,94,175,119       
      |                     |             |    |         |      |           AF 00 77 00 |
 1623 |  8    data.s     89 | Data        | 11 |         |    8 | 00/11DE : 8D 00 69 00 |                  dw           141,105,183,94       
      |                     |             |    |         |      |           B7 00 5E 00 |
 1624 |  8    data.s     90 | Data        | 11 |         |    8 | 00/11E6 : C1 00 5E 00 |                  dw           193,94,182,94        
      |                     |             |    |         |      |           B6 00 5E 00 |
 1625 |  8    data.s     91 | Data        | 11 |         |    8 | 00/11EE : C2 00 5F 00 |                  dw           194,95,198,119       
      |                     |             |    |         |      |           C6 00 77 00 |
 1626 |  8    data.s     92 | Data        | 11 |         |    8 | 00/11F6 : C4 00 5F 00 |                  dw           196,95,266,118       
      |                     |             |    |         |      |           0A 01 76 00 |
 1627 |  8    data.s     93 | Data        | 11 |         |    8 | 00/11FE : E6 00 6A 00 |                  dw           230,106,280,93       
      |                     |             |    |         |      |           18 01 5D 00 |
 1628 |  8    data.s     94 | Data        | 11 |         |    8 | 00/1206 : 18 01 5D 00 |                  dw           280,93,290,93        
      |                     |             |    |         |      |           22 01 5D 00 |
 1629 |  8    data.s     95 | Data        | 11 |         |    8 | 00/120E : 22 01 5D 00 |                  dw           290,93,291,118       
      |                     |             |    |         |      |           23 01 76 00 |
 1630 |  8    data.s     96 | Data        | 11 |         |    8 | 00/1216 : 25 01 5E 00 |                  dw           293,94,356,119       
      |                     |             |    |         |      |           64 01 77 00 |
 1631 |  8    data.s     97 | Data        | 11 |         |    8 | 00/121E : 40 01 68 00 |                  dw           320,104,366,92       
      |                     |             |    |         |      |           6E 01 5C 00 |
 1632 |  8    data.s     98 | Data        | 11 |         |    8 | 00/1226 : 6F 01 5D 00 |                  dw           367,93,367,118       
      |                     |             |    |         |      |           6F 01 76 00 |
 1633 |  8    data.s     99 | Data        | 11 |         |    8 | 00/122E : 72 01 5D 00 |                  dw           370,93,429,120       
      |                     |             |    |         |      |           AD 01 78 00 |
 1634 |  8    data.s    100 | Data        | 11 |         |    8 | 00/1236 : 8F 01 6A 00 |                  dw           399,106,443,93       
      |                     |             |    |         |      |           BB 01 5D 00 |
 1635 |  8    data.s    101 | Data        | 11 |         |    8 | 00/123E : BA 01 5C 00 |                  dw           442,92,447,121       
      |                     |             |    |         |      |           BF 01 79 00 |
 1636 |  8    data.s    102 | Data        | 11 |         |    8 | 00/1246 : BB 01 5D 00 |                  dw           443,93,511,122       
      |                     |             |    |         |      |           FF 01 7A 00 |
 1637 |  8    data.s    103 | Data        | 11 |         |    8 | 00/124E : E2 01 6B 00 |                  dw           482,107,520,93       
      |                     |             |    |         |      |           08 02 5D 00 |
 1638 |  8    data.s    104 | Data        | 11 |         |    8 | 00/1256 : 05 02 5D 00 |                  dw           517,93,527,121       
      |                     |             |    |         |      |           0F 02 79 00 |
 1639 |  8    data.s    105 | Data        | 11 |         |    8 | 00/125E : 07 02 5D 00 |                  dw           519,93,556,105       
      |                     |             |    |         |      |           2C 02 69 00 |
 1640 |  8    data.s    106 | Data        | 11 |         |    8 | 00/1266 : 15 00 79 00 |                  dw           21,121,557,122       
      |                     |             |    |         |      |           2D 02 7A 00 |
 1641 |  8    data.s    107 | Data        | 11 |         |    8 | 00/126E : 1E 00 5F 00 |                  dw           30,95,557,92         
      |                     |             |    |         |      |           2D 02 5C 00 |
 1642 |  8    data.s    108 | Data        | 11 |         |    8 | 00/1276 : 2A 02 5C 00 |                  dw           554,92,555,120       
      |                     |             |    |         |      |           2B 02 78 00 |
 1643 |  8    data.s    109 | Data        | 11 |         |    8 | 00/127E : 20 00 61 00 |                  dw           32,97,29,100         
      |                     |             |    |         |      |           1D 00 64 00 |
 1644 |  8    data.s    110 | Data        | 11 |         |    8 | 00/1286 : 24 00 64 00 |                  dw           36,100,25,106        
      |                     |             |    |         |      |           19 00 6A 00 |
 1645 |  8    data.s    111 | Data        | 11 |         |    8 | 00/128E : 26 00 67 00 |                  dw           38,103,26,108        
      |                     |             |    |         |      |           1A 00 6C 00 |
 1646 |  8    data.s    112 | Data        | 11 |         |    8 | 00/1296 : 2C 00 69 00 |                  dw           44,105,23,112        
      |                     |             |    |         |      |           17 00 70 00 |
 1647 |  8    data.s    113 | Data        | 11 |         |    8 | 00/129E : 30 00 6B 00 |                  dw           48,107,26,116        
      |                     |             |    |         |      |           1A 00 74 00 |
 1648 |  8    data.s    114 | Data        | 11 |         |    8 | 00/12A6 : 36 00 6D 00 |                  dw           54,109,22,119        
      |                     |             |    |         |      |           16 00 77 00 |
 1649 |  8    data.s    115 | Data        | 11 |         |    8 | 00/12AE : 3A 00 70 00 |                  dw           58,112,34,121        
      |                     |             |    |         |      |           22 00 79 00 |
 1650 |  8    data.s    116 | Data        | 11 |         |    8 | 00/12B6 : 44 00 72 00 |                  dw           68,114,49,120        
      |                     |             |    |         |      |           31 00 78 00 |
 1651 |  8    data.s    117 | Data        | 11 |         |    8 | 00/12BE : 47 00 74 00 |                  dw           71,116,59,120        
      |                     |             |    |         |      |           3B 00 78 00 |
 1652 |  8    data.s    118 | Data        | 11 |         |    8 | 00/12C6 : 49 00 75 00 |                  dw           73,117,68,120        
      |                     |             |    |         |      |           44 00 78 00 |
 1653 |  8    data.s    119 | Data        | 11 |         |    8 | 00/12CE : 4C 00 76 00 |                  dw           76,118,72,121        
      |                     |             |    |         |      |           48 00 79 00 |
 1654 |  8    data.s    120 | Data        | 11 |         |    8 | 00/12D6 : 6E 00 62 00 |                  dw           110,98,102,102       
      |                     |             |    |         |      |           66 00 66 00 |
 1655 |  8    data.s    121 | Data        | 11 |         |    8 | 00/12DE : 73 00 63 00 |                  dw           115,99,103,104       
      |                     |             |    |         |      |           67 00 68 00 |
 1656 |  8    data.s    122 | Data        | 11 |         |    8 | 00/12E6 : 79 00 65 00 |                  dw           121,101,104,108      
      |                     |             |    |         |      |           68 00 6C 00 |
 1657 |  8    data.s    123 | Data        | 11 |         |    8 | 00/12EE : 7D 00 66 00 |                  dw           125,102,107,108      
      |                     |             |    |         |      |           6B 00 6C 00 |
 1658 |  8    data.s    124 | Data        | 11 |         |    8 | 00/12F6 : 81 00 69 00 |                  dw           129,105,103,115      
      |                     |             |    |         |      |           67 00 73 00 |
 1659 |  8    data.s    125 | Data        | 11 |         |    8 | 00/12FE : 88 00 6B 00 |                  dw           136,107,105,118      
      |                     |             |    |         |      |           69 00 76 00 |
 1660 |  8    data.s    126 | Data        | 11 |         |    8 | 00/1306 : 8F 00 6D 00 |                  dw           143,109,116,120      
      |                     |             |    |         |      |           74 00 78 00 |
 1661 |  8    data.s    127 | Data        | 11 |         |    8 | 00/130E : 93 00 70 00 |                  dw           147,112,128,120      
      |                     |             |    |         |      |           80 00 78 00 |
 1662 |  8    data.s    128 | Data        | 11 |         |    8 | 00/1316 : 9C 00 71 00 |                  dw           156,113,139,120      
      |                     |             |    |         |      |           8B 00 78 00 |
 1663 |  8    data.s    129 | Data        | 11 |         |    8 | 00/131E : 9F 00 74 00 |                  dw           159,116,155,120      
      |                     |             |    |         |      |           9B 00 78 00 |
 1664 |  8    data.s    130 | Data        | 11 |         |    8 | 00/1326 : C4 00 64 00 |                  dw           196,100,203,98       
      |                     |             |    |         |      |           CB 00 62 00 |
 1665 |  8    data.s    131 | Data        | 11 |         |    8 | 00/132E : C4 00 68 00 |                  dw           196,104,208,100      
      |                     |             |    |         |      |           D0 00 64 00 |
 1666 |  8    data.s    132 | Data        | 11 |         |    8 | 00/1336 : D5 00 66 00 |                  dw           213,102,197,107      
      |                     |             |    |         |      |           C5 00 6B 00 |
 1667 |  8    data.s    133 | Data        | 11 |         |    8 | 00/133E : C6 00 6F 00 |                  dw           198,111,216,104      
      |                     |             |    |         |      |           D8 00 68 00 |
 1668 |  8    data.s    134 | Data        | 11 |         |    8 | 00/1346 : DD 00 6A 00 |                  dw           221,106,199,115      
      |                     |             |    |         |      |           C7 00 73 00 |
 1669 |  8    data.s    135 | Data        | 11 |         |    8 | 00/134E : CA 00 76 00 |                  dw           202,118,227,107      
      |                     |             |    |         |      |           E3 00 6B 00 |
 1670 |  8    data.s    136 | Data        | 11 |         |    8 | 00/1356 : E9 00 6F 00 |                  dw           233,111,211,118      
      |                     |             |    |         |      |           D3 00 76 00 |
 1671 |  8    data.s    137 | Data        | 11 |         |    8 | 00/135E : E0 00 77 00 |                  dw           224,119,241,111      
      |                     |             |    |         |      |           F1 00 6F 00 |
 1672 |  8    data.s    138 | Data        | 11 |         |    8 | 00/1366 : E7 00 77 00 |                  dw           231,119,244,114      
      |                     |             |    |         |      |           F4 00 72 00 |
 1673 |  8    data.s    139 | Data        | 11 |         |    8 | 00/136E : EF 00 76 00 |                  dw           239,118,251,114      
      |                     |             |    |         |      |           FB 00 72 00 |
 1674 |  8    data.s    140 | Data        | 11 |         |    8 | 00/1376 : FB 00 77 00 |                  dw           251,119,256,116      
      |                     |             |    |         |      |           00 01 74 00 |
 1675 |  8    data.s    141 | Data        | 11 |         |    8 | 00/137E : 2D 01 76 00 |                  dw           301,118,328,109      
      |                     |             |    |         |      |           48 01 6D 00 |
 1676 |  8    data.s    142 | Data        | 11 |         |    8 | 00/1386 : 28 01 74 00 |                  dw           296,116,320,107      
      |                     |             |    |         |      |           40 01 6B 00 |
 1677 |  8    data.s    143 | Data        | 11 |         |    8 | 00/138E : 2B 01 70 00 |                  dw           299,112,317,104      
      |                     |             |    |         |      |           3D 01 68 00 |
 1678 |  8    data.s    144 | Data        | 11 |         |    8 | 00/1396 : 28 01 6C 00 |                  dw           296,108,312,102      
      |                     |             |    |         |      |           38 01 66 00 |
 1679 |  8    data.s    145 | Data        | 11 |         |    8 | 00/139E : 27 01 69 00 |                  dw           295,105,306,100      
      |                     |             |    |         |      |           32 01 64 00 |
 1680 |  8    data.s    146 | Data        | 11 |         |    8 | 00/13A6 : 2B 01 65 00 |                  dw           299,101,302,100      
      |                     |             |    |         |      |           2E 01 64 00 |
 1681 |  8    data.s    147 | Data        | 11 |         |    8 | 00/13AE : 23 01 63 00 |                  dw           291,99,298,96        
      |                     |             |    |         |      |           2A 01 60 00 |
 1682 |  8    data.s    148 | Data        | 11 |         |    8 | 00/13B6 : 41 01 73 00 |                  dw           321,115,332,111      
      |                     |             |    |         |      |           4C 01 6F 00 |
 1683 |  8    data.s    149 | Data        | 11 |         |    8 | 00/13BE : 49 01 76 00 |                  dw           329,118,337,113      
      |                     |             |    |         |      |           51 01 71 00 |
 1684 |  8    data.s    150 | Data        | 11 |         |    8 | 00/13C6 : 50 01 76 00 |                  dw           336,118,343,114      
      |                     |             |    |         |      |           57 01 72 00 |
 1685 |  8    data.s    151 | Data        | 11 |         |    8 | 00/13CE : 70 01 63 00 |                  dw           368,99,374,96        
      |                     |             |    |         |      |           76 01 60 00 |
 1686 |  8    data.s    152 | Data        | 11 |         |    8 | 00/13D6 : 73 01 66 00 |                  dw           371,102,378,98       
      |                     |             |    |         |      |           7A 01 62 00 |
 1687 |  8    data.s    153 | Data        | 11 |         |    8 | 00/13DE : 73 01 6A 00 |                  dw           371,106,384,99       
      |                     |             |    |         |      |           80 01 63 00 |
 1688 |  8    data.s    154 | Data        | 11 |         |    8 | 00/13E6 : 73 01 6D 00 |                  dw           371,109,386,103      
      |                     |             |    |         |      |           82 01 67 00 |
 1689 |  8    data.s    155 | Data        | 11 |         |    8 | 00/13EE : 76 01 70 00 |                  dw           374,112,389,105      
      |                     |             |    |         |      |           85 01 69 00 |
 1690 |  8    data.s    156 | Data        | 11 |         |    8 | 00/13F6 : 73 01 74 00 |                  dw           371,116,395,106      
      |                     |             |    |         |      |           8B 01 6A 00 |
 1691 |  8    data.s    157 | Data        | 11 |         |    8 | 00/13FE : 76 01 77 00 |                  dw           374,119,401,108      
      |                     |             |    |         |      |           91 01 6C 00 |
 1692 |  8    data.s    158 | Data        | 11 |         |    8 | 00/1406 : 82 01 77 00 |                  dw           386,119,404,110      
      |                     |             |    |         |      |           94 01 6E 00 |
 1693 |  8    data.s    159 | Data        | 11 |         |    8 | 00/140E : 8B 01 77 00 |                  dw           395,119,411,113      
      |                     |             |    |         |      |           9B 01 71 00 |
 1694 |  8    data.s    160 | Data        | 11 |         |    8 | 00/1416 : 95 01 77 00 |                  dw           405,119,414,114      
      |                     |             |    |         |      |           9E 01 72 00 |
 1695 |  8    data.s    161 | Data        | 11 |         |    8 | 00/141E : A0 01 78 00 |                  dw           416,120,421,117      
      |                     |             |    |         |      |           A5 01 75 00 |
 1696 |  8    data.s    162 | Data        | 11 |         |    8 | 00/1426 : C2 01 64 00 |                  dw           450,100,458,99       
      |                     |             |    |         |      |           CA 01 63 00 |
 1697 |  8    data.s    163 | Data        | 11 |         |    8 | 00/142E : BF 01 6B 00 |                  dw           447,107,461,101      
      |                     |             |    |         |      |           CD 01 65 00 |
 1698 |  8    data.s    164 | Data        | 11 |         |    8 | 00/1436 : C2 01 6D 00 |                  dw           450,109,466,103      
      |                     |             |    |         |      |           D2 01 67 00 |
 1699 |  8    data.s    165 | Data        | 11 |         |    8 | 00/143E : C6 01 6F 00 |                  dw           454,111,476,106      
      |                     |             |    |         |      |           DC 01 6A 00 |
 1700 |  8    data.s    166 | Data        | 11 |         |    8 | 00/1446 : C5 01 75 00 |                  dw           453,117,477,109      
      |                     |             |    |         |      |           DD 01 6D 00 |
 1701 |  8    data.s    167 | Data        | 11 |         |    8 | 00/144E : C8 01 78 00 |                  dw           456,120,486,112      
      |                     |             |    |         |      |           E6 01 70 00 |
 1702 |  8    data.s    168 | Data        | 11 |         |    8 | 00/1456 : D8 01 79 00 |                  dw           472,121,492,114      
      |                     |             |    |         |      |           EC 01 72 00 |
 1703 |  8    data.s    169 | Data        | 11 |         |    8 | 00/145E : E7 01 79 00 |                  dw           487,121,495,118      
      |                     |             |    |         |      |           EF 01 76 00 |
 1704 |  8    data.s    170 | Data        | 11 |         |    8 | 00/1466 : F1 01 79 00 |                  dw           497,121,505,117      
      |                     |             |    |         |      |           F9 01 75 00 |
 1705 |  8    data.s    171 | Data        | 11 |         |    8 | 00/146E : 10 02 76 00 |                  dw           528,118,553,112      
      |                     |             |    |         |      |           29 02 70 00 |
 1706 |  8    data.s    172 | Data        | 11 |         |    8 | 00/1476 : 17 02 71 00 |                  dw           535,113,551,107      
      |                     |             |    |         |      |           27 02 6B 00 |
 1707 |  8    data.s    173 | Data        | 11 |         |    8 | 00/147E : 0C 02 70 00 |                  dw           524,112,545,103      
      |                     |             |    |         |      |           21 02 67 00 |
 1708 |  8    data.s    174 | Data        | 11 |         |    8 | 00/1486 : 0F 02 6A 00 |                  dw           527,106,545,100      
      |                     |             |    |         |      |           21 02 64 00 |
 1709 |  8    data.s    175 | Data        | 11 |         |    8 | 00/148E : 09 02 68 00 |                  dw           521,104,537,98       
      |                     |             |    |         |      |           19 02 62 00 |
 1710 |  8    data.s    176 | Data        | 11 |         |    8 | 00/1496 : 0F 02 64 00 |                  dw           527,100,534,96       
      |                     |             |    |         |      |           16 02 60 00 |
 1711 |  8    data.s    177 | Data        | 11 |         |    8 | 00/149E : 08 02 61 00 |                  dw           520,97,525,95        
      |                     |             |    |         |      |           0D 02 5F 00 |
 1712 |  8    data.s    178 | Data        | 11 |         |    8 | 00/14A6 : 21 02 77 00 |                  dw           545,119,554,116      
      |                     |             |    |         |      |           2A 02 74 00 |
 1713 |  8    data.s    179 | Empty       | 11 |         |    0 | 00/14AE               |                                                    
 1714 |  8    data.s    180 | Comment     | 11 |         |    0 | 00/14AE               | * bottom pattern
 1715 |  8    data.s    181 | Data        | 11 |         |    8 | 00/14AE : 16 00 7C 00 |                  dw           22,124,23,155        
      |                     |             |    |         |      |           17 00 9B 00 |
 1716 |  8    data.s    182 | Data        | 11 |         |    8 | 00/14B6 : 17 00 7C 00 |                  dw           23,124,60,152        
      |                     |             |    |         |      |           3C 00 98 00 |
 1717 |  8    data.s    183 | Data        | 11 |         |    8 | 00/14BE : 31 00 97 00 |                  dw           49,151,93,128        
      |                     |             |    |         |      |           5D 00 80 00 |
 1718 |  8    data.s    184 | Data        | 11 |         |    8 | 00/14C6 : 5D 00 80 00 |                  dw           93,128,98,155        
      |                     |             |    |         |      |           62 00 9B 00 |
 1719 |  8    data.s    185 | Data        | 11 |         |    8 | 00/14CE : 60 00 7F 00 |                  dw           96,127,140,154       
      |                     |             |    |         |      |           8C 00 9A 00 |
 1720 |  8    data.s    186 | Data        | 11 |         |    8 | 00/14D6 : 84 00 9B 00 |                  dw           132,155,169,124      
      |                     |             |    |         |      |           A9 00 7C 00 |
 1721 |  8    data.s    187 | Data        | 11 |         |    8 | 00/14DE : A9 00 7D 00 |                  dw           169,125,173,154      
      |                     |             |    |         |      |           AD 00 9A 00 |
 1722 |  8    data.s    188 | Data        | 11 |         |    8 | 00/14E6 : A9 00 7D 00 |                  dw           169,125,210,157      
      |                     |             |    |         |      |           D2 00 9D 00 |
 1723 |  8    data.s    189 | Data        | 11 |         |    8 | 00/14EE : C8 00 9C 00 |                  dw           200,156,240,124      
      |                     |             |    |         |      |           F0 00 7C 00 |
 1724 |  8    data.s    190 | Data        | 11 |         |    8 | 00/14F6 : 76 01 7C 00 |                  dw           374,124,377,160      
      |                     |             |    |         |      |           79 01 A0 00 |
 1725 |  8    data.s    191 | Data        | 11 |         |    8 | 00/14FE : EE 00 7C 00 |                  dw           238,124,241,159      
      |                     |             |    |         |      |           F1 00 9F 00 |
 1726 |  8    data.s    192 | Data        | 11 |         |    8 | 00/1506 : EF 00 7D 00 |                  dw           239,125,279,159      
      |                     |             |    |         |      |           17 01 9F 00 |
 1727 |  8    data.s    193 | Data        | 11 |         |    8 | 00/150E : 11 01 9F 00 |                  dw           273,159,306,124      
      |                     |             |    |         |      |           32 01 7C 00 |
 1728 |  8    data.s    194 | Data        | 11 |         |    8 | 00/1516 : 32 01 7B 00 |                  dw           306,123,309,160      
      |                     |             |    |         |      |           35 01 A0 00 |
 1729 |  8    data.s    195 | Data        | 11 |         |    8 | 00/151E : 32 01 7B 00 |                  dw           306,123,339,160      
      |                     |             |    |         |      |           53 01 A0 00 |
 1730 |  8    data.s    196 | Data        | 11 |         |    8 | 00/1526 : 53 01 A0 00 |                  dw           339,160,372,124      
      |                     |             |    |         |      |           74 01 7C 00 |
 1731 |  8    data.s    197 | Data        | 11 |         |    8 | 00/152E : 76 01 7C 00 |                  dw           374,124,413,160      
      |                     |             |    |         |      |           9D 01 A0 00 |
 1732 |  8    data.s    198 | Data        | 11 |         |    8 | 00/1536 : 91 01 A1 00 |                  dw           401,161,440,125      
      |                     |             |    |         |      |           B8 01 7D 00 |
 1733 |  8    data.s    199 | Data        | 11 |         |    8 | 00/153E : B8 01 7D 00 |                  dw           440,125,437,161      
      |                     |             |    |         |      |           B5 01 A1 00 |
 1734 |  8    data.s    200 | Data        | 11 |         |    8 | 00/1546 : B7 01 7D 00 |                  dw           439,125,474,162      
      |                     |             |    |         |      |           DA 01 A2 00 |
 1735 |  8    data.s    201 | Data        | 11 |         |    8 | 00/154E : D2 01 A2 00 |                  dw           466,162,504,126      
      |                     |             |    |         |      |           F8 01 7E 00 |
 1736 |  8    data.s    202 | Data        | 11 |         |    8 | 00/1556 : F8 01 7E 00 |                  dw           504,126,505,162      
      |                     |             |    |         |      |           F9 01 A2 00 |
 1737 |  8    data.s    203 | Data        | 11 |         |    8 | 00/155E : F8 01 7E 00 |                  dw           504,126,538,160      
      |                     |             |    |         |      |           1A 02 A0 00 |
 1738 |  8    data.s    204 | Data        | 11 |         |    8 | 00/1566 : 10 02 A1 00 |                  dw           528,161,556,132      
      |                     |             |    |         |      |           2C 02 84 00 |
 1739 |  8    data.s    205 | Data        | 11 |         |    8 | 00/156E : 19 00 7C 00 |                  dw           25,124,94,127        
      |                     |             |    |         |      |           5E 00 7F 00 |
 1740 |  8    data.s    206 | Data        | 11 |         |    8 | 00/1576 : 5E 00 7F 00 |                  dw           94,127,169,125       
      |                     |             |    |         |      |           A9 00 7D 00 |
 1741 |  8    data.s    207 | Data        | 11 |         |    8 | 00/157E : AB 00 7D 00 |                  dw           171,125,558,124      
      |                     |             |    |         |      |           2E 02 7C 00 |
 1742 |  8    data.s    208 | Data        | 11 |         |    8 | 00/1586 : 1A 00 99 00 |                  dw           26,153,60,152        
      |                     |             |    |         |      |           3C 00 98 00 |
 1743 |  8    data.s    209 | Data        | 11 |         |    8 | 00/158E : 88 00 9C 00 |                  dw           136,156,119,156      
      |                     |             |    |         |      |           77 00 9C 00 |
 1744 |  8    data.s    210 | Data        | 11 |         |    8 | 00/1596 : 3E 00 98 00 |                  dw           62,152,117,156       
      |                     |             |    |         |      |           75 00 9C 00 |
 1745 |  8    data.s    211 | Data        | 11 |         |    8 | 00/159E : 89 00 9B 00 |                  dw           137,155,194,155      
      |                     |             |    |         |      |           C2 00 9B 00 |
 1746 |  8    data.s    212 | Data        | 11 |         |    8 | 00/15A6 : C2 00 9B 00 |                  dw           194,155,264,162      
      |                     |             |    |         |      |           08 01 A2 00 |
 1747 |  8    data.s    213 | Data        | 11 |         |    8 | 00/15AE : 08 01 A2 00 |                  dw           264,162,353,162      
      |                     |             |    |         |      |           61 01 A2 00 |
 1748 |  8    data.s    214 | Data        | 11 |         |    8 | 00/15B6 : 61 01 A2 00 |                  dw           353,162,421,160      
      |                     |             |    |         |      |           A5 01 A0 00 |
 1749 |  8    data.s    215 | Data        | 11 |         |    8 | 00/15BE : A5 01 A0 00 |                  dw           421,160,474,163      
      |                     |             |    |         |      |           DA 01 A3 00 |
 1750 |  8    data.s    216 | Data        | 11 |         |    8 | 00/15C6 : DA 01 A3 00 |                  dw           474,163,525,162      
      |                     |             |    |         |      |           0D 02 A2 00 |
 1751 |  8    data.s    217 | Data        | 11 |         |    8 | 00/15CE : 0D 02 A2 00 |                  dw           525,162,553,163      
      |                     |             |    |         |      |           29 02 A3 00 |
 1752 |  8    data.s    218 | Data        | 11 |         |    8 | 00/15D6 : 27 02 A3 00 |                  dw           551,163,553,125      
      |                     |             |    |         |      |           29 02 7D 00 |
 1753 |  8    data.s    219 | Data        | 11 |         |    8 | 00/15DE : 1E 00 80 00 |                  dw           30,128,20,132        
      |                     |             |    |         |      |           14 00 84 00 |
 1754 |  8    data.s    220 | Data        | 11 |         |    8 | 00/15E6 : 24 00 85 00 |                  dw           36,133,22,137        
      |                     |             |    |         |      |           16 00 89 00 |
 1755 |  8    data.s    221 | Data        | 11 |         |    8 | 00/15EE : 22 00 89 00 |                  dw           34,137,24,140        
      |                     |             |    |         |      |           18 00 8C 00 |
 1756 |  8    data.s    222 | Data        | 11 |         |    8 | 00/15F6 : 28 00 8B 00 |                  dw           40,139,23,147        
      |                     |             |    |         |      |           17 00 93 00 |
 1757 |  8    data.s    223 | Data        | 11 |         |    8 | 00/15FE : 2C 00 91 00 |                  dw           44,145,26,151        
      |                     |             |    |         |      |           1A 00 97 00 |
 1758 |  8    data.s    224 | Data        | 11 |         |    8 | 00/1606 : 33 00 93 00 |                  dw           51,147,40,152        
      |                     |             |    |         |      |           28 00 98 00 |
 1759 |  8    data.s    225 | Data        | 11 |         |    8 | 00/160E : 38 00 96 00 |                  dw           56,150,52,152        
      |                     |             |    |         |      |           34 00 98 00 |
 1760 |  8    data.s    226 | Data        | 11 |         |    8 | 00/1616 : 64 00 83 00 |                  dw           100,131,93,134       
      |                     |             |    |         |      |           5D 00 86 00 |
 1761 |  8    data.s    227 | Data        | 11 |         |    8 | 00/161E : 65 00 87 00 |                  dw           101,135,91,137       
      |                     |             |    |         |      |           5B 00 89 00 |
 1762 |  8    data.s    228 | Data        | 11 |         |    8 | 00/1626 : 6A 00 87 00 |                  dw           106,135,95,141       
      |                     |             |    |         |      |           5F 00 8D 00 |
 1763 |  8    data.s    229 | Data        | 11 |         |    8 | 00/162E : 6F 00 89 00 |                  dw           111,137,94,143       
      |                     |             |    |         |      |           5E 00 8F 00 |
 1764 |  8    data.s    230 | Data        | 11 |         |    8 | 00/1636 : 70 00 8B 00 |                  dw           112,139,98,148       
      |                     |             |    |         |      |           62 00 94 00 |
 1765 |  8    data.s    231 | Data        | 11 |         |    8 | 00/163E : 76 00 8E 00 |                  dw           118,142,98,150       
      |                     |             |    |         |      |           62 00 96 00 |
 1766 |  8    data.s    232 | Data        | 11 |         |    8 | 00/1646 : 79 00 90 00 |                  dw           121,144,100,153      
      |                     |             |    |         |      |           64 00 99 00 |
 1767 |  8    data.s    233 | Data        | 11 |         |    8 | 00/164E : 7D 00 91 00 |                  dw           125,145,109,153      
      |                     |             |    |         |      |           6D 00 99 00 |
 1768 |  8    data.s    234 | Data        | 11 |         |    8 | 00/1656 : 7F 00 93 00 |                  dw           127,147,116,154      
      |                     |             |    |         |      |           74 00 9A 00 |
 1769 |  8    data.s    235 | Data        | 11 |         |    8 | 00/165E : 82 00 95 00 |                  dw           130,149,120,155      
      |                     |             |    |         |      |           78 00 9B 00 |
 1770 |  8    data.s    236 | Data        | 11 |         |    8 | 00/1666 : AE 00 81 00 |                  dw           174,129,168,132      
      |                     |             |    |         |      |           A8 00 84 00 |
 1771 |  8    data.s    237 | Data        | 11 |         |    8 | 00/166E : B3 00 84 00 |                  dw           179,132,169,136      
      |                     |             |    |         |      |           A9 00 88 00 |
 1772 |  8    data.s    238 | Data        | 11 |         |    8 | 00/1676 : B6 00 87 00 |                  dw           182,135,170,139      
      |                     |             |    |         |      |           AA 00 8B 00 |
 1773 |  8    data.s    239 | Data        | 11 |         |    8 | 00/167E : BB 00 89 00 |                  dw           187,137,171,142      
      |                     |             |    |         |      |           AB 00 8E 00 |
 1774 |  8    data.s    240 | Data        | 11 |         |    8 | 00/1686 : BD 00 8E 00 |                  dw           189,142,170,148      
      |                     |             |    |         |      |           AA 00 94 00 |
 1775 |  8    data.s    241 | Data        | 11 |         |    8 | 00/168E : C2 00 8F 00 |                  dw           194,143,176,150      
      |                     |             |    |         |      |           B0 00 96 00 |
 1776 |  8    data.s    242 | Data        | 11 |         |    8 | 00/1696 : C4 00 91 00 |                  dw           196,145,176,153      
      |                     |             |    |         |      |           B0 00 99 00 |
 1777 |  8    data.s    243 | Data        | 11 |         |    8 | 00/169E : C5 00 95 00 |                  dw           197,149,185,153      
      |                     |             |    |         |      |           B9 00 99 00 |
 1778 |  8    data.s    244 | Data        | 11 |         |    8 | 00/16A6 : CA 00 97 00 |                  dw           202,151,195,154      
      |                     |             |    |         |      |           C3 00 9A 00 |
 1779 |  8    data.s    245 | Data        | 11 |         |    8 | 00/16AE : F5 00 81 00 |                  dw           245,129,239,131      
      |                     |             |    |         |      |           EF 00 83 00 |
 1780 |  8    data.s    246 | Data        | 11 |         |    8 | 00/16B6 : F5 00 85 00 |                  dw           245,133,233,136      
      |                     |             |    |         |      |           E9 00 88 00 |
 1781 |  8    data.s    247 | Data        | 11 |         |    8 | 00/16BE : FA 00 87 00 |                  dw           250,135,239,140      
      |                     |             |    |         |      |           EF 00 8C 00 |
 1782 |  8    data.s    248 | Data        | 11 |         |    8 | 00/16C6 : FC 00 8B 00 |                  dw           252,139,240,142      
      |                     |             |    |         |      |           F0 00 8E 00 |
 1783 |  8    data.s    249 | Data        | 11 |         |    8 | 00/16CE : 00 01 8D 00 |                  dw           256,141,242,147      
      |                     |             |    |         |      |           F2 00 93 00 |
 1784 |  8    data.s    250 | Data        | 11 |         |    8 | 00/16D6 : 05 01 91 00 |                  dw           261,145,241,152      
      |                     |             |    |         |      |           F1 00 98 00 |
 1785 |  8    data.s    251 | Data        | 11 |         |    8 | 00/16DE : 0B 01 93 00 |                  dw           267,147,241,155      
      |                     |             |    |         |      |           F1 00 9B 00 |
 1786 |  8    data.s    252 | Data        | 11 |         |    8 | 00/16E6 : 0D 01 95 00 |                  dw           269,149,243,158      
      |                     |             |    |         |      |           F3 00 9E 00 |
 1787 |  8    data.s    253 | Data        | 11 |         |    8 | 00/16EE : 12 01 99 00 |                  dw           274,153,257,157      
      |                     |             |    |         |      |           01 01 9D 00 |
 1788 |  8    data.s    254 | Data        | 11 |         |    8 | 00/16F6 : 14 01 9B 00 |                  dw           276,155,262,159      
      |                     |             |    |         |      |           06 01 9F 00 |
 1789 |  8    data.s    255 | Data        | 11 |         |    8 | 00/16FE : 38 01 83 00 |                  dw           312,131,306,135      
      |                     |             |    |         |      |           32 01 87 00 |
 1790 |  8    data.s    256 | Data        | 11 |         |    8 | 00/1706 : 3C 01 8A 00 |                  dw           316,138,309,141      
      |                     |             |    |         |      |           35 01 8D 00 |
 1791 |  8    data.s    257 | Data        | 11 |         |    8 | 00/170E : 41 01 8C 00 |                  dw           321,140,310,148      
      |                     |             |    |         |      |           36 01 94 00 |
 1792 |  8    data.s    258 | Data        | 11 |         |    8 | 00/1716 : 47 01 93 00 |                  dw           327,147,311,151      
      |                     |             |    |         |      |           37 01 97 00 |
 1793 |  8    data.s    259 | Data        | 11 |         |    8 | 00/171E : 48 01 95 00 |                  dw           328,149,309,156      
      |                     |             |    |         |      |           35 01 9C 00 |
 1794 |  8    data.s    260 | Data        | 11 |         |    8 | 00/1726 : 4A 01 99 00 |                  dw           330,153,310,158      
      |                     |             |    |         |      |           36 01 9E 00 |
 1795 |  8    data.s    261 | Data        | 11 |         |    8 | 00/172E : 4E 01 9C 00 |                  dw           334,156,316,161      
      |                     |             |    |         |      |           3C 01 A1 00 |
 1796 |  8    data.s    262 | Data        | 11 |         |    8 | 00/1736 : 51 01 9E 00 |                  dw           337,158,331,160      
      |                     |             |    |         |      |           4B 01 A0 00 |
 1797 |  8    data.s    263 | Data        | 11 |         |    8 | 00/173E : 7D 01 82 00 |                  dw           381,130,374,133      
      |                     |             |    |         |      |           76 01 85 00 |
 1798 |  8    data.s    264 | Data        | 11 |         |    8 | 00/1746 : 7C 01 85 00 |                  dw           380,133,372,137      
      |                     |             |    |         |      |           74 01 89 00 |
 1799 |  8    data.s    265 | Data        | 11 |         |    8 | 00/174E : 81 01 89 00 |                  dw           385,137,376,142      
      |                     |             |    |         |      |           78 01 8E 00 |
 1800 |  8    data.s    266 | Data        | 11 |         |    8 | 00/1756 : 84 01 8B 00 |                  dw           388,139,373,145      
      |                     |             |    |         |      |           75 01 91 00 |
 1801 |  8    data.s    267 | Data        | 11 |         |    8 | 00/175E : 88 01 8D 00 |                  dw           392,141,375,147      
      |                     |             |    |         |      |           77 01 93 00 |
 1802 |  8    data.s    268 | Data        | 11 |         |    8 | 00/1766 : 8A 01 91 00 |                  dw           394,145,377,152      
      |                     |             |    |         |      |           79 01 98 00 |
 1803 |  8    data.s    269 | Data        | 11 |         |    8 | 00/176E : 8C 01 93 00 |                  dw           396,147,377,156      
      |                     |             |    |         |      |           79 01 9C 00 |
 1804 |  8    data.s    270 | Data        | 11 |         |    8 | 00/1776 : 91 01 97 00 |                  dw           401,151,377,159      
      |                     |             |    |         |      |           79 01 9F 00 |
 1805 |  8    data.s    271 | Data        | 11 |         |    8 | 00/177E : 94 01 9A 00 |                  dw           404,154,388,160      
      |                     |             |    |         |      |           84 01 A0 00 |
 1806 |  8    data.s    272 | Data        | 11 |         |    8 | 00/1786 : 94 01 9C 00 |                  dw           404,156,395,160      
      |                     |             |    |         |      |           8B 01 A0 00 |
 1807 |  8    data.s    273 | Data        | 11 |         |    8 | 00/178E : BA 01 85 00 |                  dw           442,133,436,134      
      |                     |             |    |         |      |           B4 01 86 00 |
 1808 |  8    data.s    274 | Data        | 11 |         |    8 | 00/1796 : BE 01 87 00 |                  dw           446,135,439,139      
      |                     |             |    |         |      |           B7 01 8B 00 |
 1809 |  8    data.s    275 | Data        | 11 |         |    8 | 00/179E : BF 01 8B 00 |                  dw           447,139,439,144      
      |                     |             |    |         |      |           B7 01 90 00 |
 1810 |  8    data.s    276 | Data        | 11 |         |    8 | 00/17A6 : C2 01 8D 00 |                  dw           450,141,438,146      
      |                     |             |    |         |      |           B6 01 92 00 |
 1811 |  8    data.s    277 | Data        | 11 |         |    8 | 00/17AE : C5 01 90 00 |                  dw           453,144,439,151      
      |                     |             |    |         |      |           B7 01 97 00 |
 1812 |  8    data.s    278 | Data        | 11 |         |    8 | 00/17B6 : C9 01 95 00 |                  dw           457,149,440,153      
      |                     |             |    |         |      |           B8 01 99 00 |
 1813 |  8    data.s    279 | Data        | 11 |         |    8 | 00/17BE : CC 01 97 00 |                  dw           460,151,442,156      
      |                     |             |    |         |      |           BA 01 9C 00 |
 1814 |  8    data.s    280 | Data        | 11 |         |    8 | 00/17C6 : D0 01 99 00 |                  dw           464,153,437,160      
      |                     |             |    |         |      |           B5 01 A0 00 |
 1815 |  8    data.s    281 | Data        | 11 |         |    8 | 00/17CE : D1 01 9A 00 |                  dw           465,154,449,160      
      |                     |             |    |         |      |           C1 01 A0 00 |
 1816 |  8    data.s    282 | Data        | 11 |         |    8 | 00/17D6 : D2 01 9E 00 |                  dw           466,158,457,160      
      |                     |             |    |         |      |           C9 01 A0 00 |
 1817 |  8    data.s    283 | Data        | 11 |         |    8 | 00/17DE : FB 01 85 00 |                  dw           507,133,499,135      
      |                     |             |    |         |      |           F3 01 87 00 |
 1818 |  8    data.s    284 | Data        | 11 |         |    8 | 00/17E6 : FB 01 89 00 |                  dw           507,137,503,139      
      |                     |             |    |         |      |           F7 01 8B 00 |
 1819 |  8    data.s    285 | Data        | 11 |         |    8 | 00/17EE : FC 01 8B 00 |                  dw           508,139,502,141      
      |                     |             |    |         |      |           F6 01 8D 00 |
 1820 |  8    data.s    286 | Data        | 11 |         |    8 | 00/17F6 : 01 02 8E 00 |                  dw           513,142,501,145      
      |                     |             |    |         |      |           F5 01 91 00 |
 1821 |  8    data.s    287 | Data        | 11 |         |    8 | 00/17FE : 00 02 91 00 |                  dw           512,145,503,149      
      |                     |             |    |         |      |           F7 01 95 00 |
 1822 |  8    data.s    288 | Data        | 11 |         |    8 | 00/1806 : 06 02 93 00 |                  dw           518,147,504,151      
      |                     |             |    |         |      |           F8 01 97 00 |
 1823 |  8    data.s    289 | Data        | 11 |         |    8 | 00/180E : 07 02 97 00 |                  dw           519,151,505,154      
      |                     |             |    |         |      |           F9 01 9A 00 |
 1824 |  8    data.s    290 | Data        | 11 |         |    8 | 00/1816 : 0C 02 99 00 |                  dw           524,153,509,158      
      |                     |             |    |         |      |           FD 01 9E 00 |
 1825 |  8    data.s    291 | Data        | 11 |         |    8 | 00/181E : 11 02 9C 00 |                  dw           529,156,509,160      
      |                     |             |    |         |      |           FD 01 A0 00 |
 1826 |  8    data.s    292 | Data        | 11 |         |    8 | 00/1826 : 12 02 9F 00 |                  dw           530,159,520,160      
      |                     |             |    |         |      |           08 02 A0 00 |
 1827 |  8    data.s    293 | Empty       | 11 |         |    0 | 00/182E               |                                                    
 1828 |  8    data.s    294 | Data        | 11 |         |    2 | 00/182E : FF FF       |                  dfb          $FF,$FF              
 1829 |  1 asmdemo.s    586 | Empty       | 11 |         |    0 | 00/1830               |                                                    
 1830 |  1 asmdemo.s    587 | Comment     | 11 |         |    0 | 00/1830               | *
 1831 |  1 asmdemo.s    588 | Comment     | 11 |         |    0 | 00/1830               | * * * * * * * * * * * * DATA * * * * * * * * * * * *
 1832 |  1 asmdemo.s    589 | Data        | 11 |         |    2 | 00/1830 : 00 00       | deltaX           ds           2                    
 1833 |  1 asmdemo.s    590 | Data        | 11 |         |    2 | 00/1832 : 00 00       | deltaY           ds           2                    
 1834 |  1 asmdemo.s    591 | Data        | 11 |         |    2 | 00/1834 : 00 00       | deltaXabs        ds           2                    
 1835 |  1 asmdemo.s    592 | Data        | 11 |         |    2 | 00/1836 : 00 00       | deltaYabs        ds           2                    
 1836 |  1 asmdemo.s    593 | Data        | 11 |         |    2 | 00/1838 : 00 00       | deltaMax         ds           2                    
 1837 |  1 asmdemo.s    594 | Data        | 11 |         |    4 | 00/183A : 00 00 00 00 | curptX           ds           4                    
 1838 |  1 asmdemo.s    595 | Data        | 11 |         |    4 | 00/183E : 00 00 00 00 | curptY           ds           4                    
 1839 |  1 asmdemo.s    596 | Empty       | 11 |         |    0 | 00/1842               |                                                    
 1840 |  1 asmdemo.s    597 | Data        | 11 |         |    1 | 00/1842 : 00          | signX            ds           1                    
 1841 |  1 asmdemo.s    598 | Data        | 11 |         |    1 | 00/1843 : 00          | signY            ds           1                    
 1842 |  1 asmdemo.s    599 | Empty       | 11 |         |    0 | 00/1844               |                                                    
 1843 |  1 asmdemo.s    600 | Data        | 11 |         |    2 | 00/1844 : 00 00       | XincDec          ds           2                    ; decimal part of Xinc
 1844 |  1 asmdemo.s    601 | Data        | 11 |         |    2 | 00/1846 : 00 00       | Xinc             ds           2                    
 1845 |  1 asmdemo.s    602 | Data        | 11 |         |    2 | 00/1848 : 00 00       | YincDec          ds           2                    ; decimal part of Xinc
 1846 |  1 asmdemo.s    603 | Data        | 11 |         |    2 | 00/184A : 00 00       | Yinc             ds           2                    
 1847 |  1 asmdemo.s    604 | Empty       | 11 |         |    0 | 00/184C               |                                                    
 1848 |  1 asmdemo.s    605 | Data        | 11 |         |  511 | 00/184C : 00 00 00 00 | theopt           ds           511                  
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00    |
 1849 |  1 asmdemo.s    606 | Data        | 11 |         |    1 | 00/1A4B : 00          | theoptend        ds           1                    
 1850 |  1 asmdemo.s    607 | Data        | 11 |         |  511 | 00/1A4C : 00 00 00 00 | theoptsav        ds           511                  
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00    |
 1851 |  1 asmdemo.s    608 | Data        | 11 |         |    1 | 00/1C4B : 00          | theoptsavend     ds           1                    
 1852 |  1 asmdemo.s    609 | Empty       | 11 |         |    0 | 00/1C4C               |                                                    
 1853 |  1 asmdemo.s    610 | Data        | 11 |         |    2 | 00/1C4C : 00 00       | nbpt             ds           2                    
 1854 |  1 asmdemo.s    611 | Data        | 11 |         |    2 | 00/1C4E : 00 00       | savnbpt          ds           2                    
 1855 |  1 asmdemo.s    612 | Empty       | 11 |         |    0 | 00/1C50               |                                                    
 1856 |  1 asmdemo.s    613 | Data        | 11 |         |    1 | 00/1C50 : 00          | shortLineflag    ds           1                    
 1857 |  1 asmdemo.s    614 | Data        | 11 |         |    1 | 00/1C51 : 00          | VertFlag         ds           1                    
 1858 |  1 asmdemo.s    615 | Empty       | 11 |         |    0 | 00/1C52               |                                                    
 1859 |  1 asmdemo.s    616 | Comment     | 11 |         |    0 | 00/1C52               | *****
 1860 |  1 asmdemo.s    617 | Data        | 11 |         |    4 | 00/1C52 : 19 00 0A 00 | Point1           dw           25,10                ; upper left corner
 1861 |  1 asmdemo.s    618 | Data        | 11 |         |    4 | 00/1C56 : F5 01 BE 00 | Point2           dw           501,190              ; bottom right corner
 1862 |  1 asmdemo.s    619 | Comment     | 11 |         |    0 | 00/1C5A               | *****
 1863 |  1 asmdemo.s    620 | Data        | 11 |         |    4 | 00/1C5A : 01 00 01 00 | pnt1             dw           1,1                  
 1864 |  1 asmdemo.s    621 | Data        | 11 |         |    4 | 00/1C5E : 01 00 BF 00 | pnt2             dw           1,191                
 1865 |  1 asmdemo.s    622 | Empty       | 11 |         |    0 | 00/1C62               |                                                    
 1866 |  1 asmdemo.s    623 | Empty       | 11 |         |    0 | 00/1C62               |                                                    
 1867 |  1 asmdemo.s    624 | Data        | 11 |         |    1 | 00/1C62 : 00          | fsignX           ds           1                    
 1868 |  1 asmdemo.s    625 | Data        | 11 |         |    1 | 00/1C63 : 00          | fsignY           ds           1                    
 1869 |  1 asmdemo.s    626 | Empty       | 11 |         |    0 | 00/1C64               |                                                    
 1870 |  1 asmdemo.s    627 | Data        | 11 |         |    4 | 00/1C64 : 0A 00 F6 FF | vert_line        dw           10,-10               
 1871 |  1 asmdemo.s    628 | Data        | 11 |         |    1 | 00/1C68 : 00          | xmov             ds           1                    
 1872 |  1 asmdemo.s    629 | Data        | 11 |         |    1 | 00/1C69 : 00          | ymov             ds           1                    
 1873 |  1 asmdemo.s    630 | Data        | 11 |         |    1 | 00/1C6A : 00          | xneg             ds           1                    
 1874 |  1 asmdemo.s    631 | Data        | 11 |         |    1 | 00/1C6B : 00          | yneg             ds           1                    
 1875 |  1 asmdemo.s    632 | Data        | 11 |         |    1 | 00/1C6C : 04          | maxvar           dfb          4                    ; Attention !! if changed, "and #3" instructions should also be modified
 1876 |  1 asmdemo.s    633 | Data        | 11 |         |    2 | 00/1C6D : 08 00       | seglength        dw           8                    
 1877 |  1 asmdemo.s    634 | Empty       | 11 |         |    0 | 00/1C6F               |                                                    
 1878 |  1 asmdemo.s    635 | Data        | 11 |         |    2 | 00/1C6F : 00 00       | dataptr          ds           2                    
 1879 |  1 asmdemo.s    636 | Empty       | 11 |         |    0 | 00/1C71               |                                                    
 1880 |  1 asmdemo.s    637 | Data        | 11 |         |    1 | 00/1C71 : 04          | QuitParams       dfb          4                    ; parameters for ProDOS quit mli call
 1881 |  1 asmdemo.s    638 | Data        | 11 |         |    8 | 00/1C72 : 00 00 00 00 |                  dw           0,0,0,0              
      |                     |             |    |         |      |           00 00 00 00 |
 1882 |  1 asmdemo.s    639 | Empty       | 11 |         |    0 | 00/1C7A               |                                                    
 1883 |  1 asmdemo.s    640 | Comment     | 11 |         |    0 | 00/1C7A               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 1884 |  1 asmdemo.s    641 | Comment     | 11 |         |    0 | 00/1C7A               | * Graphics Primtives vars.
 1885 |  1 asmdemo.s    642 | Comment     | 11 |         |    0 | 00/1C7A               | *
 1886 |  1 asmdemo.s    643 | Data        | 11 |         |   36 | 00/1C7A : 00 00 00 00 | ScreenPort       ds           {{{{{{{{{{{0}+4}+2}+2}+8}+10}+4}+2}+1}+1}+2}; space for ScreenPort (= standard grafport = screen grafport)
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
 1887 |  1 asmdemo.s    644 | Empty       | 11 |         |    0 | 00/1C9E               |                                                    
 1888 |  1 asmdemo.s    645 | Data        | 11 |         |    9 | 00/1C9E : 00 00 00 00 | Black            dfb          0,0,0,0,0,0,0,0,0    ; black pattern
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00          |
 1889 |  1 asmdemo.s    646 | Data        | 11 |         |    8 | 00/1CA7 : FF FF FF FF | White            ds           8,$FF                ; white pattern
      |                     |             |    |         |      |           FF FF FF FF |
 1890 |  1 asmdemo.s    647 | Data        | 11 |         |    1 | 00/1CAF : 00          |                  dfb          0                    
 1891 |  1 asmdemo.s    648 | Empty       | 11 |         |    0 | 00/1CB0               |                                                    
 1892 |  1 asmdemo.s    649 | Data        | 11 |         |    1 | 00/1CB0 : 05          | ModeNotOr        dfb          5                    
 1893 |  1 asmdemo.s    650 | Data        | 11 |         |    1 | 00/1CB1 : 00          | ModeCopy         dfb          0                    
 1894 |  1 asmdemo.s    651 | Empty       | 11 |         |    0 | 00/1CB2               |                                                    
 1895 |  1 asmdemo.s    652 | Data        | 11 |         |    1 | 00/1CB2 : 00          | DoNotSave        dfb          0                    
 1896 |  1 asmdemo.s    653 | Data        | 11 |         |    1 | 00/1CB3 : 80          | SaveZP           dfb          $80                  
 1897 |  1 asmdemo.s    654 | Empty       | 11 |         |    0 | 00/1CB4               |                                                    
 1898 |  1 asmdemo.s    655 | Data        | 11 |         |    2 | 00/1CB4 : 01 01       | pensize1         dfb          1,1                  ; standard pensize
 1899 |  1 asmdemo.s    656 | Data        | 11 |         |    2 | 00/1CB6 : 02 01       | pensize2         dfb          2,1                  ; enlarge your pen
 1900 |  1 asmdemo.s    657 | Empty       | 11 |         |    0 | 00/1CB8               |                                                    
 1901 |  1 asmdemo.s    658 | Empty       | 11 |         |    0 | 00/1CB8               |                                                    
------+---------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
