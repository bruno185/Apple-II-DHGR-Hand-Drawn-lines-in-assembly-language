------+---------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
 Line | # File         Line | Line Type   | MX |  Reloc  | Size | Address   Object Code |  Source Code                                                      
------+---------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
    1 |  1 asmdemo.s      1 | Comment     | 11 |         |    0 | 00/8000               | * * * * * * * * * * * * * * * * * * * * * * * *
    2 |  1 asmdemo.s      2 | Comment     | 11 |         |    0 | 00/8000               | * "Hand drawn lines" with Graphics Primitives *           
    3 |  1 asmdemo.s      3 | Comment     | 11 |         |    0 | 00/8000               | * * * * * * * * * * * * * * * * * * * * * * * *
    4 |  1 asmdemo.s      4 | Comment     | 11 |         |    0 | 00/8000               | *
    5 |  1 asmdemo.s      5 | Comment     | 11 |         |    0 | 00/8000               | *
    6 |  1 asmdemo.s      6 | Directive   | 11 |         |    0 | 00/8000               |                  put          macros               
    7 |  2  macros.s      1 | Comment     | 11 |         |    0 | 00/8000               | * 
    8 |  2  macros.s      2 | Comment     | 11 |         |    0 | 00/8000               | * * * * MACROS * * * * 
    9 |  2  macros.s      3 | Comment     | 11 |         |    0 | 00/8000               | *
   10 |  2  macros.s      4 | Directive   | 11 |         |    0 | 00/8000               |                  DO           0                    
   11 |  2  macros.s    417 | Directive   | 11 |         |    0 | 00/8000               |                  FIN                               
   12 |  1 asmdemo.s      7 | Directive   | 11 |         |    0 | 00/8000               | GP_call          MAC                               ; call to graphic primitives (macro)
   13 |  1 asmdemo.s      8 | Directive   | 11 |         |    0 | 00/8000               |                  jsr          {$4000}              ; graphic primitives only entry point
   14 |  1 asmdemo.s      9 | Directive   | 11 |         |    0 | 00/8000               |                  dfb          ]1                   ; command ID (1 byte)
   15 |  1 asmdemo.s     10 | Directive   | 11 |         |    0 | 00/8000               |                  da           ]2                   ; address of parameter(s) (2 bytes), 0 if no paramter
   16 |  1 asmdemo.s     11 | Directive   | 11 |         |    0 | 00/8000               |                  EOM                               
   17 |  1 asmdemo.s     12 | Empty       | 11 |         |    0 | 00/8000               |                                                    
   18 |  1 asmdemo.s     13 | Directive   | 11 |         |    0 | 00/8000               |                  org          $6000                
   19 |  1 asmdemo.s     14 | Directive   | 11 |         |    0 | 00/6000               |                  put          equates              ; Graphics Primitives equates
   20 |  3 equates.s      1 | Comment     | 11 |         |    0 | 00/6000               | ;
   21 |  3 equates.s      2 | Comment     | 11 |         |    0 | 00/6000               | ; equate file for interfacing to toolkit/graphics
   22 |  3 equates.s      3 | Comment     | 11 |         |    0 | 00/6000               | ;
   23 |  3 equates.s      4 | Equivalence | 11 |         |    0 | 00/6000               | ToolMLI          equ          $4000                
   24 |  3 equates.s      5 | Equivalence | 11 |         |    0 | 00/6000               | GrafMLI          equ          $4000                
   25 |  3 equates.s      6 | Comment     | 11 |         |    0 | 00/6000               | ;
   26 |  3 equates.s      7 | Comment     | 11 |         |    0 | 00/6000               | ; constants
   27 |  3 equates.s      8 | Comment     | 11 |         |    0 | 00/6000               | ;
   28 |  3 equates.s      9 | Equivalence | 11 |         |    0 | 00/6000               | SrcCopy          equ          0                    
   29 |  3 equates.s     10 | Equivalence | 11 |         |    0 | 00/6000               | SrcOr            equ          1                    
   30 |  3 equates.s     11 | Equivalence | 11 |         |    0 | 00/6000               | SrcXor           equ          2                    
   31 |  3 equates.s     12 | Equivalence | 11 |         |    0 | 00/6000               | SrcBic           equ          3                    
   32 |  3 equates.s     13 | Equivalence | 11 |         |    0 | 00/6000               | SrcNotCopy       equ          4                    
   33 |  3 equates.s     14 | Equivalence | 11 |         |    0 | 00/6000               | SrcNotOr         equ          5                    
   34 |  3 equates.s     15 | Equivalence | 11 |         |    0 | 00/6000               | SrcNotXor        equ          6                    
   35 |  3 equates.s     16 | Equivalence | 11 |         |    0 | 00/6000               | SrcNotBic        equ          7                    
   36 |  3 equates.s     17 | Comment     | 11 |         |    0 | 00/6000               | ;
   37 |  3 equates.s     18 | Comment     | 11 |         |    0 | 00/6000               | ; grafport structure
   38 |  3 equates.s     19 | Comment     | 11 |         |    0 | 00/6000               | ;
   39 |  3 equates.s     20 | Equivalence | 11 |         |    0 | 00/6000               | viewloc          equ          0                    
   40 |  3 equates.s     21 | Equivalence | 11 |         |    0 | 00/6000               | portbits         equ          {0}+4                
   41 |  3 equates.s     22 | Equivalence | 11 |         |    0 | 00/6000               | portwidth        equ          {{0}+4}+2            ; 1 byte for width, the other is reserved.
   42 |  3 equates.s     23 | Equivalence | 11 |         |    0 | 00/6000               | portrect         equ          {{{0}+4}+2}+2        
   43 |  3 equates.s     24 | Equivalence | 11 |         |    0 | 00/6000               | penpat           equ          {{{{0}+4}+2}+2}+8    
   44 |  3 equates.s     25 | Equivalence | 11 |         |    0 | 00/6000               | penloc           equ          {{{{{0}+4}+2}+2}+8}+10
   45 |  3 equates.s     26 | Equivalence | 11 |         |    0 | 00/6000               | pensize          equ          {{{{{{0}+4}+2}+2}+8}+10}+4
   46 |  3 equates.s     27 | Equivalence | 11 |         |    0 | 00/6000               | penmode          equ          {{{{{{{0}+4}+2}+2}+8}+10}+4}+2
   47 |  3 equates.s     28 | Equivalence | 11 |         |    0 | 00/6000               | txback           equ          {{{{{{{{0}+4}+2}+2}+8}+10}+4}+2}+1
   48 |  3 equates.s     29 | Equivalence | 11 |         |    0 | 00/6000               | txfont           equ          {{{{{{{{{0}+4}+2}+2}+8}+10}+4}+2}+1}+1
   49 |  3 equates.s     30 | Comment     | 11 |         |    0 | 00/6000               | ;
   50 |  3 equates.s     31 | Equivalence | 11 |         |    0 | 00/6000               | portlength       equ          {{{{{{{{{{0}+4}+2}+2}+8}+10}+4}+2}+1}+1}+2
   51 |  3 equates.s     32 | Comment     | 11 |         |    0 | 00/6000               | ;
   52 |  3 equates.s     33 | Comment     | 11 |         |    0 | 00/6000               | ;
   53 |  3 equates.s     34 | Comment     | 11 |         |    0 | 00/6000               | ; command numbers
   54 |  3 equates.s     35 | Comment     | 11 |         |    0 | 00/6000               | ;
   55 |  3 equates.s     36 | Equivalence | 11 |         |    0 | 00/6000               | InitGraf         equ          1                    
   56 |  3 equates.s     37 | Equivalence | 11 |         |    0 | 00/6000               | SetSwitches      equ          {1}+1                
   57 |  3 equates.s     38 | Comment     | 11 |         |    0 | 00/6000               | ;
   58 |  3 equates.s     39 | Equivalence | 11 |         |    0 | 00/6000               | InitPort         equ          {{1}+1}+1            
   59 |  3 equates.s     40 | Equivalence | 11 |         |    0 | 00/6000               | SetPort          equ          {{{1}+1}+1}+1        
   60 |  3 equates.s     41 | Equivalence | 11 |         |    0 | 00/6000               | GetPort          equ          {{{{1}+1}+1}+1}+1    
   61 |  3 equates.s     42 | Equivalence | 11 |         |    0 | 00/6000               | SetPortBits      equ          {{{{{1}+1}+1}+1}+1}+1
   62 |  3 equates.s     43 | Equivalence | 11 |         |    0 | 00/6000               | SetPenMode       equ          {{{{{{1}+1}+1}+1}+1}+1}+1
   63 |  3 equates.s     44 | Equivalence | 11 |         |    0 | 00/6000               | SetPattern       equ          {{{{{{{1}+1}+1}+1}+1}+1}+1}+1
   64 |  3 equates.s     45 | Equivalence | 11 |         |    0 | 00/6000               | SetColorFlags    equ          {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1
   65 |  3 equates.s     46 | Equivalence | 11 |         |    0 | 00/6000               | SetPenSize       equ          {{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   66 |  3 equates.s     47 | Equivalence | 11 |         |    0 | 00/6000               | SetFont          equ          {{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   67 |  3 equates.s     48 | Equivalence | 11 |         |    0 | 00/6000               | SetTextBG        equ          {{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   68 |  3 equates.s     49 | Comment     | 11 |         |    0 | 00/6000               | ;
   69 |  3 equates.s     50 | Equivalence | 11 |         |    0 | 00/6000               | Move             equ          {{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   70 |  3 equates.s     51 | Equivalence | 11 |         |    0 | 00/6000               | MoveTo           equ          {{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   71 |  3 equates.s     52 | Equivalence | 11 |         |    0 | 00/6000               | Line             equ          {{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   72 |  3 equates.s     53 | Equivalence | 11 |         |    0 | 00/6000               | LineTo           equ          {{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   73 |  3 equates.s     54 | Equivalence | 11 |         |    0 | 00/6000               | PaintRect        equ          {{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   74 |  3 equates.s     55 | Equivalence | 11 |         |    0 | 00/6000               | FrameRect        equ          {{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   75 |  3 equates.s     56 | Equivalence | 11 |         |    0 | 00/6000               | InRect           equ          {{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   76 |  3 equates.s     57 | Equivalence | 11 |         |    0 | 00/6000               | PaintBits        equ          {{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   77 |  3 equates.s     58 | Equivalence | 11 |         |    0 | 00/6000               | PaintPoly        equ          {{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   78 |  3 equates.s     59 | Equivalence | 11 |         |    0 | 00/6000               | FramePoly        equ          {{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   79 |  3 equates.s     60 | Equivalence | 11 |         |    0 | 00/6000               | InPoly           equ          {{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   80 |  3 equates.s     61 | Comment     | 11 |         |    0 | 00/6000               | ;
   81 |  3 equates.s     62 | Equivalence | 11 |         |    0 | 00/6000               | TextWidth        equ          {{{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   82 |  3 equates.s     63 | Equivalence | 11 |         |    0 | 00/6000               | DrawText         equ          {{{{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   83 |  3 equates.s     64 | Comment     | 11 |         |    0 | 00/6000               | ;
   84 |  3 equates.s     65 | Equivalence | 11 |         |    0 | 00/6000               | SetZP1           equ          {{{{{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   85 |  3 equates.s     66 | Equivalence | 11 |         |    0 | 00/6000               | SetZP2           equ          {{{{{{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   86 |  3 equates.s     67 | Equivalence | 11 |         |    0 | 00/6000               | GetVersion       equ          {{{{{{{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   87 |  3 equates.s     68 | Empty       | 11 |         |    0 | 00/6000               |                                                    
   88 |  3 equates.s     69 | Comment     | 11 |         |    0 | 00/6000               | ; DATA STRUCTURES
   89 |  3 equates.s     70 | Comment     | 11 |         |    0 | 00/6000               | ;
   90 |  3 equates.s     71 | Comment     | 11 |         |    0 | 00/6000               | ; The following data structures are defined as types (Pascal format):
   91 |  3 equates.s     72 | Comment     | 11 |         |    0 | 00/6000               |     ; byte = 0..255;
   92 |  3 equates.s     73 | Empty       | 11 |         |    0 | 00/6000               |                                                    
   93 |  3 equates.s     74 | Comment     | 11 |         |    0 | 00/6000               |     ; bits = packed array (0..7) of boolean;
   94 |  3 equates.s     75 | Empty       | 11 |         |    0 | 00/6000               |                                                    
   95 |  3 equates.s     76 | Comment     | 11 |         |    0 | 00/6000               |     ; pmode = (penCopy, penOr, penXor, penBic, notpenCopy, notpenOr, notpenXor, notpenBic);
   96 |  3 equates.s     77 | Empty       | 11 |         |    0 | 00/6000               |                                                    
   97 |  3 equates.s     78 | Comment     | 11 |         |    0 | 00/6000               |     ; point = record
   98 |  3 equates.s     79 | Comment     | 11 |         |    0 | 00/6000               |         ; x: integer;
   99 |  3 equates.s     80 | Comment     | 11 |         |    0 | 00/6000               |         ; y: integer;
  100 |  3 equates.s     81 | Comment     | 11 |         |    0 | 00/6000               |     ; end;
  101 |  3 equates.s     82 | Empty       | 11 |         |    0 | 00/6000               |                                                    
  102 |  3 equates.s     83 | Comment     | 11 |         |    0 | 00/6000               |     ; rect = record
  103 |  3 equates.s     84 | Comment     | 11 |         |    0 | 00/6000               |         ; case integer of
  104 |  3 equates.s     85 | Comment     | 11 |         |    0 | 00/6000               |         ; 0: (left: integer; top: integer; right: integer; bottom: integer);
  105 |  3 equates.s     86 | Comment     | 11 |         |    0 | 00/6000               |         ; 1: (topleft: point; botright: point);
  106 |  3 equates.s     87 | Empty       | 11 |         |    0 | 00/6000               |                                                    
  107 |  3 equates.s     88 | Comment     | 11 |         |    0 | 00/6000               |     ; maplnfo = packed record
  108 |  3 equates.s     89 | Comment     | 11 |         |    0 | 00/6000               |         ; viewloc: point;
  109 |  3 equates.s     90 | Comment     | 11 |         |    0 | 00/6000               |         ; mspbits: pointer;
  110 |  3 equates.s     91 | Comment     | 11 |         |    0 | 00/6000               |         ; mspwidth: byte;
  111 |  3 equates.s     92 | Comment     | 11 |         |    0 | 00/6000               |         ; reserved: byte;
  112 |  3 equates.s     93 | Comment     | 11 |         |    0 | 00/6000               |         ; maprect: rect;
  113 |  3 equates.s     94 | Comment     | 11 |         |    0 | 00/6000               |     ; end;
  114 |  3 equates.s     95 | Empty       | 11 |         |    0 | 00/6000               |                                                    
  115 |  3 equates.s     96 | Comment     | 11 |         |    0 | 00/6000               |     ; pattern = packed array [1..9] of byte;                ; 1..8 ???
  116 |  3 equates.s     97 | Empty       | 11 |         |    0 | 00/6000               |                                                    
  117 |  3 equates.s     98 | Comment     | 11 |         |    0 | 00/6000               |     ; maskinfo = packed record
  118 |  3 equates.s     99 | Comment     | 11 |         |    0 | 00/6000               |         ; ANDmask: byte;
  119 |  3 equates.s    100 | Comment     | 11 |         |    0 | 00/6000               |         ; ORmask: byte;
  120 |  3 equates.s    101 | Comment     | 11 |         |    0 | 00/6000               |     ; end;
  121 |  3 equates.s    102 | Empty       | 11 |         |    0 | 00/6000               |                                                    
  122 |  3 equates.s    103 | Comment     | 11 |         |    0 | 00/6000               |     ; GrafPort = packed record
  123 |  3 equates.s    104 | Comment     | 11 |         |    0 | 00/6000               |         ; portmap: maplnfo;
  124 |  3 equates.s    105 | Comment     | 11 |         |    0 | 00/6000               |         ; penpattern: pattern;
  125 |  3 equates.s    106 | Comment     | 11 |         |    0 | 00/6000               |         ; colormasks: maskinfo;
  126 |  3 equates.s    107 | Comment     | 11 |         |    0 | 00/6000               |         ; penloc: point;
  127 |  3 equates.s    108 | Comment     | 11 |         |    0 | 00/6000               |         ; penwidth: byte;
  128 |  3 equates.s    109 | Comment     | 11 |         |    0 | 00/6000               |         ; penheight: byte;
  129 |  3 equates.s    110 | Comment     | 11 |         |    0 | 00/6000               |         ; penmode: pmode;
  130 |  3 equates.s    111 | Comment     | 11 |         |    0 | 00/6000               |         ; reserved: 0..31;
  131 |  3 equates.s    112 | Comment     | 11 |         |    0 | 00/6000               |         ; textback: byte;
  132 |  3 equates.s    113 | Comment     | 11 |         |    0 | 00/6000               |         ; textfont: integer;
  133 |  3 equates.s    114 | Comment     | 11 |         |    0 | 00/6000               |     ; end;
  134 |  3 equates.s    115 | Empty       | 11 |         |    0 | 00/6000               |                                                    
  135 |  1 asmdemo.s     15 | Directive   | 11 |         |    0 | 00/6000               |                  put          equ                  ; general Apple II equates
  136 |  4     equ.s      1 | Comment     | 11 |         |    0 | 00/6000               | ************
  137 |  4     equ.s      2 | Comment     | 11 |         |    0 | 00/6000               | ************ ROM routines ************ 
  138 |  4     equ.s      3 | Equivalence | 11 |         |    0 | 00/6000               | home             equ          $FC58                ; clear text screen, reset margins
  139 |  4     equ.s      4 | Equivalence | 11 |         |    0 | 00/6000               | text             equ          $FB2F                ; text mode
  140 |  4     equ.s      5 | Equivalence | 11 |         |    0 | 00/6000               | Bell             equ          $FBDD                ; play a sound
  141 |  4     equ.s      6 | Equivalence | 11 |         |    0 | 00/6000               | cout             equ          $FDED                ; print char in A
  142 |  4     equ.s      7 | Equivalence | 11 |         |    0 | 00/6000               | vtab             equ          $FC22                ; vert. tab, value must be in CV ($25)
  143 |  4     equ.s      8 | Equivalence | 11 |         |    0 | 00/6000               | getln            equ          $FD6A                ; read line of input (=> X = length, buffer = $200)
  144 |  4     equ.s      9 | Equivalence | 11 |         |    0 | 00/6000               | getlnz           equ          $FD67                ; = return + getln
  145 |  4     equ.s     10 | Equivalence | 11 |         |    0 | 00/6000               | getln1           equ          $FD6F                ; = getln without prompt
  146 |  4     equ.s     11 | Equivalence | 11 |         |    0 | 00/6000               | bascalc          equ          $FBC1                ; calc. address of line in A, put address in $28/$29
  147 |  4     equ.s     12 | Equivalence | 11 |         |    0 | 00/6000               | crout            equ          $FD8E                ; print carriage return
  148 |  4     equ.s     13 | Equivalence | 11 |         |    0 | 00/6000               | clreop           equ          $FC42                ; clear from cursor to end of page
  149 |  4     equ.s     14 | Equivalence | 11 |         |    0 | 00/6000               | clreol           equ          $FC9C                ; clear from cursor to end of line
  150 |  4     equ.s     15 | Equivalence | 11 |         |    0 | 00/6000               | prntx            equ          $F944                ; prints X in hex (2 digits)
  151 |  4     equ.s     16 | Equivalence | 11 |         |    0 | 00/6000               | prbyte           equ          $FDDA                ; prints A in hex (2 digits)
  152 |  4     equ.s     17 | Equivalence | 11 |         |    0 | 00/6000               | printax          equ          $F941                ; Prints current contents of the A and X in hex
  153 |  4     equ.s     18 | Equivalence | 11 |         |    0 | 00/6000               | prntyx           equ          $F940                ; Prints current contents of the Y and X in hex
  154 |  4     equ.s     19 | Equivalence | 11 |         |    0 | 00/6000               | rdkey            equ          $FD0C                ; wait for keypress
  155 |  4     equ.s     20 | Equivalence | 11 |         |    0 | 00/6000               | wait             equ          $FCA8                ; monitor delay
  156 |  4     equ.s     21 | Equivalence | 11 |         |    0 | 00/6000               | AUXMOV           equ          $C311                
  157 |  4     equ.s     22 | Equivalence | 11 |         |    0 | 00/6000               | OUTPORT          equ          $FE95                
  158 |  4     equ.s     23 | Equivalence | 11 |         |    0 | 00/6000               | prnxy            equ          $F940                
  159 |  4     equ.s     24 | Equivalence | 11 |         |    0 | 00/6000               | move             equ          $FE2C                
  160 |  4     equ.s     25 | Comment     | 11 |         |    0 | 00/6000               | *
  161 |  4     equ.s     26 | Comment     | 11 |         |    0 | 00/6000               | ************ ROM switches ************  
  162 |  4     equ.s     27 | Equivalence | 11 |         |    0 | 00/6000               | RAMRDON          equ          $C003                ; read aux
  163 |  4     equ.s     28 | Equivalence | 11 |         |    0 | 00/6000               | RAMRDOFF         equ          $C002                ; read main
  164 |  4     equ.s     29 | Equivalence | 11 |         |    0 | 00/6000               | RAMWRTOFF        equ          $C004                ; write to main
  165 |  4     equ.s     30 | Equivalence | 11 |         |    0 | 00/6000               | RAMWRTON         equ          $C005                ; write to aux
  166 |  4     equ.s     31 | Equivalence | 11 |         |    0 | 00/6000               | ALTCHARSET0FF    equ          $C00E                
  167 |  4     equ.s     32 | Equivalence | 11 |         |    0 | 00/6000               | ALTCHARSET0N     equ          $C00F                
  168 |  4     equ.s     33 | Equivalence | 11 |         |    0 | 00/6000               | kbd              equ          $C000                ; ascii code of last key pressed (+ 128 if strobe not cleared)
  169 |  4     equ.s     34 | Equivalence | 11 |         |    0 | 00/6000               | kbdstrb          equ          $C010                
  170 |  4     equ.s     35 | Equivalence | 11 |         |    0 | 00/6000               | col80off         equ          $C00C                
  171 |  4     equ.s     36 | Equivalence | 11 |         |    0 | 00/6000               | col80on          equ          $C00D                
  172 |  4     equ.s     37 | Equivalence | 11 |         |    0 | 00/6000               | 80col            equ          $C01F                
  173 |  4     equ.s     38 | Comment     | 11 |         |    0 | 00/6000               | *
  174 |  4     equ.s     39 | Comment     | 11 |         |    0 | 00/6000               | ************ page 0 ************ 
  175 |  4     equ.s     40 | Equivalence | 11 |         |    0 | 00/6000               | cv               equ          $25                  
  176 |  4     equ.s     41 | Equivalence | 11 |         |    0 | 00/6000               | ch               equ          $24                  
  177 |  4     equ.s     42 | Equivalence | 11 |         |    0 | 00/6000               | basl             equ          $28                  
  178 |  4     equ.s     43 | Equivalence | 11 |         |    0 | 00/6000               | wndlft           equ          $20                  
  179 |  4     equ.s     44 | Equivalence | 11 |         |    0 | 00/6000               | wndwdth          equ          $21                  
  180 |  4     equ.s     45 | Equivalence | 11 |         |    0 | 00/6000               | wndtop           equ          $22                  ; Top Margin (0 - 23, 0 is default, 20 in graphics mode)
  181 |  4     equ.s     46 | Equivalence | 11 |         |    0 | 00/6000               | wndbtm           equ          $23                  
  182 |  4     equ.s     47 | Equivalence | 11 |         |    0 | 00/6000               | prompt           equ          $33                  
  183 |  4     equ.s     48 | Empty       | 11 |         |    0 | 00/6000               |                                                    
  184 |  4     equ.s     49 | Equivalence | 11 |         |    0 | 00/6000               | A1L              equ          $3C                  ; move source start
  185 |  4     equ.s     50 | Equivalence | 11 |         |    0 | 00/6000               | A1H              equ          $3D                  
  186 |  4     equ.s     51 | Equivalence | 11 |         |    0 | 00/6000               | A2L              equ          $3E                  ; move source end
  187 |  4     equ.s     52 | Equivalence | 11 |         |    0 | 00/6000               | A2H              equ          $3F                  
  188 |  4     equ.s     53 | Equivalence | 11 |         |    0 | 00/6000               | A4L              equ          $42                  ; move dest start
  189 |  4     equ.s     54 | Equivalence | 11 |         |    0 | 00/6000               | A4H              equ          $43                  
  190 |  4     equ.s     55 | Comment     | 11 |         |    0 | 00/6000               | *
  191 |  4     equ.s     56 | Equivalence | 11 |         |    0 | 00/6000               | ourch            equ          $57B                 ; Cursor's column position minus 1 (HTAB's place) in 80-column mode
  192 |  4     equ.s     57 | Equivalence | 11 |         |    0 | 00/6000               | ourcv            equ          $5FB                 ; 80 col vertical pos
  193 |  4     equ.s     58 | Comment     | 11 |         |    0 | 00/6000               | *
  194 |  4     equ.s     59 | Comment     | 11 |         |    0 | 00/6000               | ************ ProDOS ************ 
  195 |  4     equ.s     60 | Equivalence | 11 |         |    0 | 00/6000               | GETBUFR          equ          $bef5                
  196 |  4     equ.s     61 | Equivalence | 11 |         |    0 | 00/6000               | FREEBUFR         equ          $BEF8                
  197 |  4     equ.s     62 | Equivalence | 11 |         |    0 | 00/6000               | devnum           equ          $BF30                ; last used device here, format : DSSS0000
  198 |  4     equ.s     63 | Equivalence | 11 |         |    0 | 00/6000               | RSHIMEM          equ          $BEFB                
  199 |  4     equ.s     64 | Comment     | 11 |         |    0 | 00/6000               | *
  200 |  4     equ.s     65 | Comment     | 11 |         |    0 | 00/6000               | ************ MLI calls (ProDOS) ************
  201 |  4     equ.s     66 | Equivalence | 11 |         |    0 | 00/6000               | MLI              equ          $BF00                
  202 |  4     equ.s     67 | Equivalence | 11 |         |    0 | 00/6000               | create           equ          $C0                  
  203 |  4     equ.s     68 | Equivalence | 11 |         |    0 | 00/6000               | destroy          equ          $C1                  
  204 |  4     equ.s     69 | Equivalence | 11 |         |    0 | 00/6000               | online           equ          $C5                  
  205 |  4     equ.s     70 | Equivalence | 11 |         |    0 | 00/6000               | getprefix        equ          $c7                  
  206 |  4     equ.s     71 | Equivalence | 11 |         |    0 | 00/6000               | setprefix        equ          $c6                  
  207 |  4     equ.s     72 | Equivalence | 11 |         |    0 | 00/6000               | open             equ          $C8                  
  208 |  4     equ.s     73 | Equivalence | 11 |         |    0 | 00/6000               | close            equ          $CC                  
  209 |  4     equ.s     74 | Equivalence | 11 |         |    0 | 00/6000               | read             equ          $CA                  
  210 |  4     equ.s     75 | Equivalence | 11 |         |    0 | 00/6000               | write            equ          $CB                  
  211 |  4     equ.s     76 | Equivalence | 11 |         |    0 | 00/6000               | setmark          equ          $ce                  
  212 |  4     equ.s     77 | Equivalence | 11 |         |    0 | 00/6000               | geteof           equ          $d1                  
  213 |  4     equ.s     78 | Equivalence | 11 |         |    0 | 00/6000               | quit             equ          $65                  
  214 |  4     equ.s     79 | Comment     | 11 |         |    0 | 00/6000               | *
  215 |  4     equ.s     80 | Comment     | 11 |         |    0 | 00/6000               | ************ FP routines ************
  216 |  4     equ.s     81 | Equivalence | 11 |         |    0 | 00/6000               | fac              equ          $9D                  ; FAC : $9D to $A2 (6 bytes)
  217 |  4     equ.s     82 | Equivalence | 11 |         |    0 | 00/6000               | arg              equ          $A5                  ; ARG : $A5 to $AA
  218 |  4     equ.s     83 | Equivalence | 11 |         |    0 | 00/6000               | facsign          equ          $A2                  
  219 |  4     equ.s     84 | Equivalence | 11 |         |    0 | 00/6000               | argsign          equ          $AA                  
  220 |  4     equ.s     85 | Empty       | 11 |         |    0 | 00/6000               |                                                    
  221 |  4     equ.s     86 | Equivalence | 11 |         |    0 | 00/6000               | float            equ          $E2F2                ; Converts SIGNED integer in A/Y (high/lo) into FAC
  222 |  4     equ.s     87 | Equivalence | 11 |         |    0 | 00/6000               | GIVAYF           equ          $E2F2                ; idem
  223 |  4     equ.s     88 | Equivalence | 11 |         |    0 | 00/6000               | FLOAT2           equ          $EBA0                ; "Float2" entry point (https://6502disassembly.com/a2-rom/Applesoft.html#SymLDAB7)
  224 |  4     equ.s     89 | Comment     | 11 |         |    0 | 00/6000               |                                 ; Float UNSIGNED value in FAC+1,2 (hi,low)
  225 |  4     equ.s     90 | Comment     | 11 |         |    0 | 00/6000               |                                 ; X-reg = exponent ; C=0 to make value negative, C=1 to make value positive
  226 |  4     equ.s     91 | Empty       | 11 |         |    0 | 00/6000               |                                                    
  227 |  4     equ.s     92 | Equivalence | 11 |         |    0 | 00/6000               | PRNTFAC          equ          $ED2E                ; Prints number in FAC (in decimal format). FAC is destroyed
  228 |  4     equ.s     93 | Equivalence | 11 |         |    0 | 00/6000               | FIN              equ          $EC4A                ; FAC = expression pointed TXTPTR
  229 |  4     equ.s     94 | Equivalence | 11 |         |    0 | 00/6000               | FNEG             equ          $EED0                ; FAC = - FAC
  230 |  4     equ.s     95 | Equivalence | 11 |         |    0 | 00/6000               | FABS             equ          $EBAF                ; FAC = ABS(FAC)
  231 |  4     equ.s     96 | Equivalence | 11 |         |    0 | 00/6000               | F2INT16          equ          $E752                ; FAC to 16 bits int in A/Y and $50/51 (high/low)
  232 |  4     equ.s     97 | Equivalence | 11 |         |    0 | 00/6000               | FADD             equ          $E7BE                ; Move the number pointed by Y,A into ARG and fall into
  233 |  4     equ.s     98 | Equivalence | 11 |         |    0 | 00/6000               | FADDT            equ          $E7C1                ; FAC = FAC + ARG if Z is O, else copy ARG into FAC (FAC=0+ARG)
  234 |  4     equ.s     99 | Equivalence | 11 |         |    0 | 00/6000               | FADDFAC          equ          $E7C6                ; FAC = FAC + ARG
  235 |  4     equ.s    100 | Equivalence | 11 |         |    0 | 00/6000               | FSUBT            equ          $E7AA                ; FAC = ARG - FAC
  236 |  4     equ.s    101 | Equivalence | 11 |         |    0 | 00/6000               | FMULT            equ          $E97F                ; Move the number pointed by Y,A into ARG and fall into FMULTT
  237 |  4     equ.s    102 | Equivalence | 11 |         |    0 | 00/6000               | FMULTT           equ          $E982                ; FAC = FAC x ARG (Z must be clear, else rts)
  238 |  4     equ.s    103 | Equivalence | 11 |         |    0 | 00/6000               | FDIVT            equ          $EA69                ; FAC = ARG / FAC
  239 |  4     equ.s    104 | Equivalence | 11 |         |    0 | 00/6000               | RND              equ          $EFAE                ; FAC = random number
  240 |  4     equ.s    105 | Equivalence | 11 |         |    0 | 00/6000               | FOUT             equ          $ED34                ; Create a string at the start of the stack ($100−$110)
  241 |  4     equ.s    106 | Equivalence | 11 |         |    0 | 00/6000               | MOVAF            equ          $EB63                ; Move FAC into ARG. On exit A=FACEXP and Z is set
  242 |  4     equ.s    107 | Equivalence | 11 |         |    0 | 00/6000               | CONINT           equ          $E6FB                ; Convert FAC into a single byte number in X and FACLO
  243 |  4     equ.s    108 | Equivalence | 11 |         |    0 | 00/6000               | YTOFAC           equ          $E301                ; Float y
  244 |  4     equ.s    109 | Equivalence | 11 |         |    0 | 00/6000               | MOVMF            equ          $EB2B                ; Routine to pack FP number. Address of destination must be in Y
  245 |  4     equ.s    110 | Comment     | 11 |         |    0 | 00/6000               |                                 ; (high) and X (low). Result is packed from FAC                             
  246 |  4     equ.s    111 | Equivalence | 11 |         |    0 | 00/6000               | QUINT            equ          $EBF2                ; convert fac to 16bit INT at $A0 and $A1 (fac+3/fac+4)
  247 |  4     equ.s    112 | Equivalence | 11 |         |    0 | 00/6000               | STROUT           equ          $DB3A                ;
  248 |  4     equ.s    113 | Equivalence | 11 |         |    0 | 00/6000               | LINPRT           equ          $ED24                ; Converts the unsigned hexadecimal number in X (low) and A (high) into a decimal number and displays it.
  249 |  4     equ.s    114 | Empty       | 11 |         |    0 | 00/6000               |                                                    
  250 |  4     equ.s    115 | Comment     | 11 |         |    0 | 00/6000               | ; In executing the following subroutines, Applesoft expects the argument to be in the FAC. 
  251 |  4     equ.s    116 | Comment     | 11 |         |    0 | 00/6000               | ; After the result has been calculated, it will be placed in the FAC.
  252 |  4     equ.s    117 | Equivalence | 11 |         |    0 | 00/6000               | LOG              equ          $E941                
  253 |  4     equ.s    118 | Equivalence | 11 |         |    0 | 00/6000               | ABS              equ          $EBAF                
  254 |  4     equ.s    119 | Equivalence | 11 |         |    0 | 00/6000               | SQR              equ          $EE8D                
  255 |  4     equ.s    120 | Comment     | 11 |         |    0 | 00/6000               | ;EXP             equ $EF09 
  256 |  4     equ.s    121 | Comment     | 11 |         |    0 | 00/6000               | * trigo
  257 |  4     equ.s    122 | Equivalence | 11 |         |    0 | 00/6000               | COS              equ          $EFEA                
  258 |  4     equ.s    123 | Equivalence | 11 |         |    0 | 00/6000               | SIN              equ          $EFF1                
  259 |  4     equ.s    124 | Equivalence | 11 |         |    0 | 00/6000               | TAN              equ          $F03A                
  260 |  4     equ.s    125 | Equivalence | 11 |         |    0 | 00/6000               | ATN              equ          $F09E                
  261 |  4     equ.s    126 | Empty       | 11 |         |    0 | 00/6000               |                                                    
  262 |  4     equ.s    127 | Empty       | 11 |         |    0 | 00/6000               |                                                    
  263 |  4     equ.s    128 | Comment     | 11 |         |    0 | 00/6000               | ; eb82   SIGN   ;convert FAC to -1,0,1
  264 |  4     equ.s    129 | Comment     | 11 |         |    0 | 00/6000               | * A intégrer :
  265 |  4     equ.s    130 | Comment     | 11 |         |    0 | 00/6000               | *FSUB = $E7A7    OVERFLOW = $E8D5        ONE = $E913        FLOG = $E941    CONUPK = $E9E3  MUL10 = $EA39 
  266 |  4     equ.s    131 | Comment     | 11 |         |    0 | 00/6000               | * FDIV = $EA66        DIVERR = $EAE1        MOVFM = $EAF9    FLOAT = $EB93        FCOMP = $EBB2      
  267 |  4     equ.s    132 | Comment     | 11 |         |    0 | 00/6000               | * FINT = $EC23       FPWRT = $EE9    FEXP = $EF09      FCOS = $EFEA    FSIN = $EFF1  FTAN = $F03A 
  268 |  4     equ.s    133 | Comment     | 11 |         |    0 | 00/6000               | * PIHALF = $F066   FATN = $F09E        
  269 |  4     equ.s    134 | Comment     | 11 |         |    0 | 00/6000               | *
  270 |  4     equ.s    135 | Comment     | 11 |         |    0 | 00/6000               | ************ Applesoft BASIC ************
  271 |  4     equ.s    136 | Equivalence | 11 |         |    0 | 00/6000               | TXTTAB           equ          $67                  ; $67/$68 address of beginning of BASIC Program ($0801 is default)
  272 |  4     equ.s    137 | Equivalence | 11 |         |    0 | 00/6000               | PRGEND           equ          $AF                  ; $AF/$B0 address of end of Applesoft program plus 1 or 2 of BASIC
  273 |  4     equ.s    138 | Equivalence | 11 |         |    0 | 00/6000               | VARTAB           equ          $69                  ; $69/$6A address of beginning of simple variables, just after Basic prog. (unless modified by LOMEN)
  274 |  4     equ.s    139 | Equivalence | 11 |         |    0 | 00/6000               | ARYTAB           equ          $6B                  ; $6B/$6C addresse of beginning of array variables, just after simple variables
  275 |  4     equ.s    140 | Equivalence | 11 |         |    0 | 00/6000               | STREND           equ          $6D                  ; $6D/$6E addresse of end of array variables
  276 |  4     equ.s    141 | Equivalence | 11 |         |    0 | 00/6000               | MEMSIZ           equ          $73                  ; $73/$74 : top of string data, set by HIMEM: (usually $9600),
  277 |  4     equ.s    142 | Equivalence | 11 |         |    0 | 00/6000               | FRETOP           equ          $6F                  ; $6F/$70 bottom of string data, growing downwards
  278 |  4     equ.s    143 | Equivalence | 11 |         |    0 | 00/6000               | CHRGOT           equ          $B7                  ; get char pointed by TXTPTR in A
  279 |  4     equ.s    144 | Equivalence | 11 |         |    0 | 00/6000               | CHRGET           equ          $B1                  ; advance TXTPRT and read char
  280 |  4     equ.s    145 | Equivalence | 11 |         |    0 | 00/6000               | TXTPTR           equ          $B8                  ; pointer $B8/$B9 used in chrget and chrgot
  281 |  4     equ.s    146 | Equivalence | 11 |         |    0 | 00/6000               | CHKCOM           equ          $DEBE                ; check for comma and move TXTPTR forward
  282 |  4     equ.s    147 | Equivalence | 11 |         |    0 | 00/6000               | FRMNUM           equ          $DD67                ; eval num. value, variable, expression pointed by TXTPTR, advance TXTPTR
  283 |  4     equ.s    148 | Equivalence | 11 |         |    0 | 00/6000               | GETADR           equ          $E752                ; convert FAC to integer (to Y,A)
  284 |  4     equ.s    149 | Equivalence | 11 |         |    0 | 00/6000               | FRMEVL           equ          $DD7B                ; evaluate any expression, result in FAC.
  285 |  4     equ.s    150 | Equivalence | 11 |         |    0 | 00/6000               | FRESTR           equ          $E5FD                ; check if epression is a string. A = length, pointer in $5E/$5F
  286 |  4     equ.s    151 | Equivalence | 11 |         |    0 | 00/6000               | ERRDIR           equ          $E306                ; illegal direct if not running
  287 |  4     equ.s    152 | Empty       | 11 |         |    0 | 00/6000               |                                                    
  288 |  4     equ.s    153 | Equivalence | 11 |         |    0 | 00/6000               | PTRGET           equ          $DFE3                ; On entry, TXTPTR must be pointing to the first character of the variable's name.
  289 |  4     equ.s    154 | Comment     | 11 |         |    0 | 00/6000               | * finds an Applesoft variable's memory address and puts a pointer to it in VARPNT ($83-$84) and in A/Y (low/hi). 
  290 |  4     equ.s    155 | Comment     | 11 |         |    0 | 00/6000               | * The variable's name is left in VARNAM ($81-$82). It will work with any type of variable (integer, array element, string..)
  291 |  4     equ.s    156 | Comment     | 11 |         |    0 | 00/6000               | * If the variable does not already exist, PTRGET will create it for you
  292 |  4     equ.s    157 | Comment     | 11 |         |    0 | 00/6000               | * Advances TXTPTR.
  293 |  4     equ.s    158 | Comment     | 11 |         |    0 | 00/6000               | * Set : vartype equ $11 ; str$=$ff, num=$00 
  294 |  4     equ.s    159 | Comment     | 11 |         |    0 | 00/6000               | * set : numtype equ $12 ; int =$80, real = $00
  295 |  4     equ.s    160 | Empty       | 11 |         |    0 | 00/6000               |                                                    
  296 |  4     equ.s    161 | Equivalence | 11 |         |    0 | 00/6000               | CHKNUM           equ          $DD6A                ; verifies that the most recent var found by PTRGET was numeric.
  297 |  4     equ.s    162 | Comment     | 11 |         |    0 | 00/6000               |  *  https://www.brutaldeluxe.fr/documentation/thesourcerorsapprentice/thesourcerorsapprentice_v1n1.pdf
  298 |  4     equ.s    163 | Comment     | 11 |         |    0 | 00/6000               |  * Type mismatch error if var not numeric
  299 |  4     equ.s    164 | Empty       | 11 |         |    0 | 00/6000               |                                                    
  300 |  1 asmdemo.s     16 | Empty       | 11 |         |    0 | 00/6000               |                                                    
  301 |  1 asmdemo.s     17 | Equivalence | 11 |         |    0 | 00/6000               | MyBuffer         equ          $8000                ; starting address of storage for MyPort grafport
  302 |  1 asmdemo.s     18 | Equivalence | 11 |         |    0 | 00/6000               | TestFont         equ          $800                 ; loading address of "TEST.FONT" file
  303 |  1 asmdemo.s     19 | Equivalence | 11 |         |    0 | 00/6000               | KeyBoard         equ          $C000                ; ascii code of last key pressed (+ 128 if strobe not cleared)
  304 |  1 asmdemo.s     20 | Equivalence | 11 |         |    0 | 00/6000               | Strobe           equ          $C010                ; Keyboard Strobe
  305 |  1 asmdemo.s     21 | Equivalence | 11 |         |    0 | 00/6000               | ptr              equ          $06                  
  306 |  1 asmdemo.s     22 | Equivalence | 11 |         |    0 | 00/6000               | ptr2             equ          $08                  
  307 |  1 asmdemo.s     23 | Empty       | 11 |         |    0 | 00/6000               |                                                    
  308 |  1 asmdemo.s     24 | Code        | 11 |         |    3 | 00/6000 : 20 58 FC    |                  jsr          {$FC58}              ; clear screen
  309 |  1 asmdemo.s     25 | Code        | 11 |         |    3 | 00/6003 : 20 B5 64    |                  jsr          welcome              ; show welcome screen and instructions
  310 |  1 asmdemo.s     26 | Empty       | 11 |         |    0 | 00/6006               |                                                    
  311 |  1 asmdemo.s     27 | Empty       | 11 |         |    0 | 00/6006               | debut                                              
  312 |  1 asmdemo.s     28 | Code        | 11 |         |    3 | 00/6006 : 20 9F 64    |                  jsr          WaitForKeyPress      
  313 |  1 asmdemo.s     29 | Code        | 11 |         |    3 | 00/6009 : 20 1F 63    |                  jsr          AdjustVars           
  314 |  1 asmdemo.s     30 | Code        | 11 |         |    3 | 00/600C : 20 F7 63    |                  jsr          Graf                 
  315 |  1 asmdemo.s     31 | Empty       | 11 |         |    0 | 00/600F               |                                                    
  316 |  1 asmdemo.s     32 | Code        | 11 |         |    3 | 00/600F : 20 52 64    |                  jsr          initrandom           
  317 |  1 asmdemo.s     33 | Empty       | 11 |         |    0 | 00/6012               |                                                    
  318 |  1 asmdemo.s     34 | Code        | 11 |         |    2 | 00/6012 : A9 78       |                  lda          #<linedata           ; init ptr2 to beginning of lines data
  319 |  1 asmdemo.s     35 | Code        | 11 |         |    2 | 00/6014 : 85 08       |                  sta          {$08}                
  320 |  1 asmdemo.s     36 | Code        | 11 |         |    2 | 00/6016 : A9 69       |                  lda          #>linedata           
  321 |  1 asmdemo.s     37 | Code        | 11 |         |    2 | 00/6018 : 85 09       |                  sta          {$08}+1              
  322 |  1 asmdemo.s     38 | Empty       | 11 |         |    0 | 00/601A               |                                                    
  323 |  1 asmdemo.s     39 | Empty       | 11 |         |    0 | 00/601A               | bigloop                                            
  324 |  1 asmdemo.s     40 | Code        | 11 |         |    2 | 00/601A : A0 00       |                  ldy          #0                   
  325 |  1 asmdemo.s     41 | Code        | 11 |         |    2 | 00/601C : A2 00       |                  ldx          #0                   
  326 |  1 asmdemo.s     42 | Empty       | 11 |         |    0 | 00/601E               |                                                    
  327 |  1 asmdemo.s     43 | Code        | 11 |         |    2 | 00/601E : B1 08       | copy8            lda          ({$08}),y            ; copy 2 points to Point 1 ad Point2 vars
  328 |  1 asmdemo.s     44 | Code        | 11 |         |    3 | 00/6020 : 9D 6C 7A    |                  sta          Point1,x             
  329 |  1 asmdemo.s     45 | Code        | 11 |         |    1 | 00/6023 : C8          |                  iny                               
  330 |  1 asmdemo.s     46 | Code        | 11 |         |    1 | 00/6024 : E8          |                  inx                               
  331 |  1 asmdemo.s     47 | Code        | 11 |         |    2 | 00/6025 : E0 08       |                  cpx          #8                   
  332 |  1 asmdemo.s     48 | Code        | 11 |         |    2 | 00/6027 : D0 F5       |                  bne          copy8                
  333 |  1 asmdemo.s     49 | Empty       | 11 |         |    0 | 00/6029               |                                                    
  334 |  1 asmdemo.s     50 | Code        | 11 |         |    3 | 00/6029 : AD 7D 7A    |                  lda          Novariation          ; test no variation flag
  335 |  1 asmdemo.s     51 | Code        | 11 |         |    2 | 00/602C : F0 06       |                  beq          VariationOn          ; flag = 0 : process variations
  336 |  1 asmdemo.s     52 | Code        | 11 |         |    3 | 00/602E : 20 8F 60    |                  jsr          straightline         ; flag = 1 : draw straight line
  337 |  1 asmdemo.s     53 | Code        | 11 |         |    3 | 00/6031 : 4C 6A 60    |                  jmp          nextline             
  338 |  1 asmdemo.s     54 | Empty       | 11 |         |    0 | 00/6034               |                                                    
  339 |  1 asmdemo.s     55 | Empty       | 11 |         |    0 | 00/6034               |                                                    
  340 |  1 asmdemo.s     56 | Empty       | 11 |         |    0 | 00/6034               | VariationOn                                        
  341 |  1 asmdemo.s     57 | Code        | 11 |         |    3 | 00/6034 : 20 81 66    |                  jsr          SetDeltaXY           ; calcutate deltas
  342 |  1 asmdemo.s     58 | Empty       | 11 |         |    0 | 00/6037               |                                                    
  343 |  1 asmdemo.s     59 | Macro       | 11 |         |    0 | 00/6037               |                  DoCompare16  deltaMax;seglength;cmp16
  344 |  1 asmdemo.s     59 | Code        | 11 |         |    3 | 00/6037 : AD 53 72    |                  lda          deltaMax+1           ; number 1 on stack
  345 |  1 asmdemo.s     59 | Code        | 11 |         |    1 | 00/603A : 48          |                  pha                               
  346 |  1 asmdemo.s     59 | Code        | 11 |         |    3 | 00/603B : AD 52 72    |                  lda          deltaMax             
  347 |  1 asmdemo.s     59 | Code        | 11 |         |    1 | 00/603E : 48          |                  pha                               
  348 |  1 asmdemo.s     59 | Code        | 11 |         |    3 | 00/603F : AD 7A 7A    |                  lda          seglength+1          ; number 2 on stack
  349 |  1 asmdemo.s     59 | Code        | 11 |         |    1 | 00/6042 : 48          |                  pha                               
  350 |  1 asmdemo.s     59 | Code        | 11 |         |    3 | 00/6043 : AD 79 7A    |                  lda          seglength            
  351 |  1 asmdemo.s     59 | Code        | 11 |         |    1 | 00/6046 : 48          |                  pha                               
  352 |  1 asmdemo.s     59 | Code        | 11 |         |    3 | 00/6047 : 20 05 68    |                  jsr          cmp16                ; compare routine (works for signed or unsigned numbers)
  353 |  1 asmdemo.s     60 | Code        | 11 |         |    2 | 00/604A : F0 0A       |                  beq          DoshortLine          ; if deltaMaw <= seglength then goto DoshortLine
  354 |  1 asmdemo.s     61 | Code        | 11 |         |    2 | 00/604C : 90 08       |                  bcc          DoshortLine          
  355 |  1 asmdemo.s     62 | Empty       | 11 |         |    0 | 00/604E               |                                                    
  356 |  1 asmdemo.s     63 | Code        | 11 |         |    2 | 00/604E : A9 00       |                  lda          #0                   ; here if deltaMax > seglength
  357 |  1 asmdemo.s     64 | Code        | 11 |         |    3 | 00/6050 : 8D 6A 7A    |                  sta          shortLineflag        
  358 |  1 asmdemo.s     65 | Code        | 11 |         |    3 | 00/6053 : 4C 5E 60    |                  jmp          longline             
  359 |  1 asmdemo.s     66 | Empty       | 11 |         |    0 | 00/6056               |                                                    
  360 |  1 asmdemo.s     67 | Code        | 11 |         |    2 | 00/6056 : A9 01       | DoshortLine      lda          #1                   ; here if line is too short for variations
  361 |  1 asmdemo.s     68 | Code        | 11 |         |    3 | 00/6058 : 8D 6A 7A    |                  sta          shortLineflag        
  362 |  1 asmdemo.s     69 | Code        | 11 |         |    3 | 00/605B : 4C 67 60    |                  jmp          dg                   
  363 |  1 asmdemo.s     70 | Empty       | 11 |         |    0 | 00/605E               |                                                    
  364 |  1 asmdemo.s     71 | Code        | 11 |         |    3 | 00/605E : 20 82 67    | longline         jsr          SetNpPt              ; determine number of points to be displaced
  365 |  1 asmdemo.s     72 | Code        | 11 |         |    3 | 00/6061 : 20 AE 67    |                  jsr          SetInc               ; set increment in X and Y direction between points to dispalce
  366 |  1 asmdemo.s     73 | Code        | 11 |         |    3 | 00/6064 : 20 F6 61    |                  jsr          PopTab               ; fill a table of points
  367 |  1 asmdemo.s     74 | Empty       | 11 |         |    0 | 00/6067               |                                                    
  368 |  1 asmdemo.s     75 | Code        | 11 |         |    3 | 00/6067 : 20 8A 60    | dg               jsr          DoLine               ; draw a line (split in segments and draw each segment)
  369 |  1 asmdemo.s     76 | Empty       | 11 |         |    0 | 00/606A               |                                                    
  370 |  1 asmdemo.s     77 | Code        | 11 |         |    2 | 00/606A : A5 08       | nextline         lda          {$08}                ; set ptr2 pointer to next couple of points
  371 |  1 asmdemo.s     78 | Code        | 11 |         |    1 | 00/606C : 18          |                  clc                               
  372 |  1 asmdemo.s     79 | Code        | 11 |         |    2 | 00/606D : 69 08       |                  adc          #8                   
  373 |  1 asmdemo.s     80 | Code        | 11 |         |    2 | 00/606F : 85 08       |                  sta          {$08}                
  374 |  1 asmdemo.s     81 | Code        | 11 |         |    2 | 00/6071 : A9 00       |                  lda          #0                   
  375 |  1 asmdemo.s     82 | Code        | 11 |         |    2 | 00/6073 : 65 09       |                  adc          {$08}+1              
  376 |  1 asmdemo.s     83 | Code        | 11 |         |    2 | 00/6075 : 85 09       |                  sta          {$08}+1              
  377 |  1 asmdemo.s     84 | Empty       | 11 |         |    0 | 00/6077               |                                                    
  378 |  1 asmdemo.s     85 | Code        | 11 |         |    2 | 00/6077 : A0 00       |                  ldy          #0                   ; test end of data ($FF $FF marker)
  379 |  1 asmdemo.s     86 | Code        | 11 |         |    2 | 00/6079 : B1 08       |                  lda          ({$08}),y            
  380 |  1 asmdemo.s     87 | Code        | 11 |         |    2 | 00/607B : C9 FF       |                  cmp          #$FF                 
  381 |  1 asmdemo.s     88 | Code        | 11 |         |    2 | 00/607D : D0 9B       |                  bne          bigloop              
  382 |  1 asmdemo.s     89 | Code        | 11 |         |    1 | 00/607F : C8          |                  iny                               
  383 |  1 asmdemo.s     90 | Code        | 11 |         |    2 | 00/6080 : B1 08       |                  lda          ({$08}),y            
  384 |  1 asmdemo.s     91 | Code        | 11 |         |    2 | 00/6082 : C9 FF       |                  cmp          #$FF                 
  385 |  1 asmdemo.s     92 | Code        | 11 |         |    2 | 00/6084 : D0 94       |                  bne          bigloop              ; loop if end not reached
  386 |  1 asmdemo.s     93 | Empty       | 11 |         |    0 | 00/6086               |                                                    
  387 |  1 asmdemo.s     94 | Code        | 11 |         |    3 | 00/6086 : 4C 06 60    |                  jmp          debut                
  388 |  1 asmdemo.s     95 | Code        | 11 |         |    1 | 00/6089 : 60          |                  rts                               
  389 |  1 asmdemo.s     96 | Empty       | 11 |         |    0 | 00/608A               |                                                    
  390 |  1 asmdemo.s     97 | Comment     | 11 |         |    0 | 00/608A               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
  391 |  1 asmdemo.s     98 | Comment     | 11 |         |    0 | 00/608A               | * Draw a line
  392 |  1 asmdemo.s     99 | Comment     | 11 |         |    0 | 00/608A               | *
  393 |  1 asmdemo.s    100 | Empty       | 11 |         |    0 | 00/608A               | DoLine                                             
  394 |  1 asmdemo.s    101 | Code        | 11 |         |    3 | 00/608A : AD 6A 7A    |                  lda          shortLineflag        
  395 |  1 asmdemo.s    102 | Code        | 11 |         |    2 | 00/608D : F0 0D       |                  beq          dolong               ; if shortLineflag = 0 : process long line
  396 |  1 asmdemo.s    103 | Comment     | 11 |         |    0 | 00/608F               |                                                 ; (longer than seglength)
  397 |  1 asmdemo.s    104 | Macro       | 11 |         |    0 | 00/608F               | straightline     GP_call      {{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1};Point1; else draw a straight line
  398 |  1 asmdemo.s    104 | Code        | 11 |         |    3 | 00/608F : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  399 |  1 asmdemo.s    104 | Data        | 11 |         |    1 | 00/6092 : 0E          |                  dfb          {{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  400 |  1 asmdemo.s    104 | Data        | 11 |         |    2 | 00/6093 : 6C 7A       |                  da           Point1               ; address of parameter(s) (2 bytes), 0 if no paramter
  401 |  1 asmdemo.s    105 | Macro       | 11 |         |    0 | 00/6095               |                  GP_call      {{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1};Point2; from Point1 to Point2
  402 |  1 asmdemo.s    105 | Code        | 11 |         |    3 | 00/6095 : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  403 |  1 asmdemo.s    105 | Data        | 11 |         |    1 | 00/6098 : 10          |                  dfb          {{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  404 |  1 asmdemo.s    105 | Data        | 11 |         |    2 | 00/6099 : 70 7A       |                  da           Point2               ; address of parameter(s) (2 bytes), 0 if no paramter
  405 |  1 asmdemo.s    106 | Code        | 11 |         |    1 | 00/609B : 60          |                  rts                               
  406 |  1 asmdemo.s    107 | Empty       | 11 |         |    0 | 00/609C               |                                                    
  407 |  1 asmdemo.s    108 | Empty       | 11 |         |    0 | 00/609C               | dolong                                             
  408 |  1 asmdemo.s    109 | Code        | 11 |         |    3 | 00/609C : 20 0A 61    |                  jsr          mvpt01               ; displace points
  409 |  1 asmdemo.s    110 | Empty       | 11 |         |    0 | 00/609F               |                                                    
  410 |  1 asmdemo.s    111 | Empty       | 11 |         |    0 | 00/609F               | doline2                                            
  411 |  1 asmdemo.s    112 | Macro       | 11 |         |    0 | 00/609F               |                  movInt       savnbpt;segcount     
  412 |  1 asmdemo.s    112 | Code        | 11 |         |    3 | 00/609F : AD 68 7A    |                  lda          savnbpt              
  413 |  1 asmdemo.s    112 | Code        | 11 |         |    3 | 00/60A2 : 8D 08 61    |                  sta          segcount             
  414 |  1 asmdemo.s    112 | Code        | 11 |         |    3 | 00/60A5 : AD 69 7A    |                  lda          savnbpt+1            
  415 |  1 asmdemo.s    112 | Code        | 11 |         |    3 | 00/60A8 : 8D 09 61    |                  sta          segcount+1           
  416 |  1 asmdemo.s    113 | Macro       | 11 |         |    0 | 00/60AB               |                  GP_call      {{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1};theopt
  417 |  1 asmdemo.s    113 | Code        | 11 |         |    3 | 00/60AB : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  418 |  1 asmdemo.s    113 | Data        | 11 |         |    1 | 00/60AE : 0E          |                  dfb          {{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  419 |  1 asmdemo.s    113 | Data        | 11 |         |    2 | 00/60AF : 66 72       |                  da           theopt               ; address of parameter(s) (2 bytes), 0 if no paramter
  420 |  1 asmdemo.s    114 | Macro       | 11 |         |    0 | 00/60B1               | domove           GP_call      {{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1};theopt
  421 |  1 asmdemo.s    114 | Code        | 11 |         |    3 | 00/60B1 : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  422 |  1 asmdemo.s    114 | Data        | 11 |         |    1 | 00/60B4 : 10          |                  dfb          {{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  423 |  1 asmdemo.s    114 | Data        | 11 |         |    2 | 00/60B5 : 66 72       |                  da           theopt               ; address of parameter(s) (2 bytes), 0 if no paramter
  424 |  1 asmdemo.s    115 | Empty       | 11 |         |    0 | 00/60B7               |                                                    
  425 |  1 asmdemo.s    116 | Code        | 11 |         |    3 | 00/60B7 : AD B5 60    |                  lda          domove+4             ; modify code above
  426 |  1 asmdemo.s    117 | Code        | 11 |         |    1 | 00/60BA : 18          |                  clc                               
  427 |  1 asmdemo.s    118 | Code        | 11 |         |    2 | 00/60BB : 69 04       |                  adc          #4                   
  428 |  1 asmdemo.s    119 | Code        | 11 |         |    3 | 00/60BD : 8D B5 60    |                  sta          domove+4             
  429 |  1 asmdemo.s    120 | Code        | 11 |         |    3 | 00/60C0 : AD B6 60    |                  lda          domove+5             
  430 |  1 asmdemo.s    121 | Code        | 11 |         |    2 | 00/60C3 : 69 00       |                  adc          #0                   
  431 |  1 asmdemo.s    122 | Code        | 11 |         |    3 | 00/60C5 : 8D B6 60    |                  sta          domove+5             
  432 |  1 asmdemo.s    123 | Empty       | 11 |         |    0 | 00/60C8               |                                                    
  433 |  1 asmdemo.s    124 | Comment     | 11 |         |    0 | 00/60C8               |                 ;dec segcount                            ; update counter
  434 |  1 asmdemo.s    125 | Empty       | 11 |         |    0 | 00/60C8               |                                                    
  435 |  1 asmdemo.s    126 | Code        | 11 |         |    3 | 00/60C8 : AD 08 61    |                  lda          segcount             
  436 |  1 asmdemo.s    127 | Code        | 11 |         |    2 | 00/60CB : D0 08       |                  bne          lab2                 
  437 |  1 asmdemo.s    128 | Code        | 11 |         |    3 | 00/60CD : AD 09 61    |                  lda          segcount+1           
  438 |  1 asmdemo.s    129 | Code        | 11 |         |    2 | 00/60D0 : F0 09       |                  beq          endloop              
  439 |  1 asmdemo.s    130 | Code        | 11 |         |    3 | 00/60D2 : CE 09 61    |                  dec          segcount+1           
  440 |  1 asmdemo.s    131 | Code        | 11 |         |    3 | 00/60D5 : CE 08 61    | lab2             dec          segcount             
  441 |  1 asmdemo.s    132 | Code        | 11 |         |    3 | 00/60D8 : 4C B1 60    |                  jmp          domove               ; if not 0 then loop
  442 |  1 asmdemo.s    133 | Empty       | 11 |         |    0 | 00/60DB               |                                                    
  443 |  1 asmdemo.s    134 | Code        | 11 |         |    2 | 00/60DB : A9 66       | endloop          lda          #<theopt             ; reset modified code
  444 |  1 asmdemo.s    135 | Code        | 11 |         |    3 | 00/60DD : 8D B5 60    |                  sta          domove+4             
  445 |  1 asmdemo.s    136 | Code        | 11 |         |    2 | 00/60E0 : A9 72       |                  lda          #>theopt             
  446 |  1 asmdemo.s    137 | Code        | 11 |         |    3 | 00/60E2 : 8D B6 60    |                  sta          domove+5             
  447 |  1 asmdemo.s    138 | Empty       | 11 |         |    0 | 00/60E5               |                                                    
  448 |  1 asmdemo.s    139 | Code        | 11 |         |    1 | 00/60E5 : 60          | outdraw          rts                               
  449 |  1 asmdemo.s    140 | Comment     | 11 |         |    0 | 00/60E6               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
  450 |  1 asmdemo.s    141 | Empty       | 11 |         |    0 | 00/60E6               |                                                    
  451 |  1 asmdemo.s    142 | Empty       | 11 |         |    0 | 00/60E6               |                                                    
  452 |  1 asmdemo.s    143 | Code        | 11 |         |    3 | 00/60E6 : 20 9F 64    | dowait           jsr          WaitForKeyPress      
  453 |  1 asmdemo.s    144 | Code        | 11 |         |    2 | 00/60E9 : C9 1B       |                  cmp          #$1B                 ; test escape key
  454 |  1 asmdemo.s    145 | Code        | 11 |         |    2 | 00/60EB : D0 03       |                  bne          noquit               
  455 |  1 asmdemo.s    146 | Code        | 11 |         |    3 | 00/60ED : 4C E8 61    |                  jmp          Quitprog             
  456 |  1 asmdemo.s    147 | Empty       | 11 |         |    0 | 00/60F0               | noquit                                             
  457 |  1 asmdemo.s    148 | Code        | 11 |         |    1 | 00/60F0 : 18          |                  clc                               
  458 |  1 asmdemo.s    149 | Code        | 11 |         |    3 | 00/60F1 : 20 C1 63    |                  jsr          ClearIt              ; clear DHGR screen
  459 |  1 asmdemo.s    150 | Macro       | 11 |         |    0 | 00/60F4               |                  GP_call      {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1};White; reset pen to white
  460 |  1 asmdemo.s    150 | Code        | 11 |         |    3 | 00/60F4 : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  461 |  1 asmdemo.s    150 | Data        | 11 |         |    1 | 00/60F7 : 08          |                  dfb          {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  462 |  1 asmdemo.s    150 | Data        | 11 |         |    2 | 00/60F8 : B4 7A       |                  da           White                ; address of parameter(s) (2 bytes), 0 if no paramter
  463 |  1 asmdemo.s    151 | Code        | 11 |         |    2 | 00/60FA : A9 66       |                  lda          #<theopt             ; reset modified code
  464 |  1 asmdemo.s    152 | Code        | 11 |         |    3 | 00/60FC : 8D B5 60    |                  sta          domove+4             
  465 |  1 asmdemo.s    153 | Code        | 11 |         |    2 | 00/60FF : A9 72       |                  lda          #>theopt             
  466 |  1 asmdemo.s    154 | Code        | 11 |         |    3 | 00/6101 : 8D B6 60    |                  sta          domove+5             
  467 |  1 asmdemo.s    155 | Empty       | 11 |         |    0 | 00/6104               |                                                    
  468 |  1 asmdemo.s    156 | Code        | 11 |         |    3 | 00/6104 : 4C 8A 60    |                  jmp          DoLine               ; loop
  469 |  1 asmdemo.s    157 | Code        | 11 |         |    1 | 00/6107 : 60          |                  rts                               
  470 |  1 asmdemo.s    158 | Data        | 11 |         |    2 | 00/6108 : 00 00       | segcount         ds           2                    
  471 |  1 asmdemo.s    159 | Empty       | 11 |         |    0 | 00/610A               |                                                    
  472 |  1 asmdemo.s    160 | Empty       | 11 |         |    0 | 00/610A               |                                                    
  473 |  1 asmdemo.s    161 | Comment     | 11 |         |    0 | 00/610A               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
  474 |  1 asmdemo.s    162 | Comment     | 11 |         |    0 | 00/610A               | * move points randomly 
  475 |  1 asmdemo.s    163 | Empty       | 11 |         |    0 | 00/610A               | mvpt01                                             
  476 |  1 asmdemo.s    164 | Macro       | 11 |         |    0 | 00/610A               |                  movInt       savnbpt;nbpt         
  477 |  1 asmdemo.s    164 | Code        | 11 |         |    3 | 00/610A : AD 68 7A    |                  lda          savnbpt              
  478 |  1 asmdemo.s    164 | Code        | 11 |         |    3 | 00/610D : 8D 66 7A    |                  sta          nbpt                 
  479 |  1 asmdemo.s    164 | Code        | 11 |         |    3 | 00/6110 : AD 69 7A    |                  lda          savnbpt+1            
  480 |  1 asmdemo.s    164 | Code        | 11 |         |    3 | 00/6113 : 8D 67 7A    |                  sta          nbpt+1               
  481 |  1 asmdemo.s    165 | Empty       | 11 |         |    0 | 00/6116               |                                                    
  482 |  1 asmdemo.s    166 | Code        | 11 |         |    2 | 00/6116 : A9 66       |                  lda          #<theopt             ; set ptr to fisrt point
  483 |  1 asmdemo.s    167 | Code        | 11 |         |    2 | 00/6118 : 85 06       |                  sta          {$06}                
  484 |  1 asmdemo.s    168 | Code        | 11 |         |    2 | 00/611A : A9 72       |                  lda          #>theopt             
  485 |  1 asmdemo.s    169 | Code        | 11 |         |    2 | 00/611C : 85 07       |                  sta          {$06}+1              
  486 |  1 asmdemo.s    170 | Empty       | 11 |         |    0 | 00/611E               |                                                    
  487 |  1 asmdemo.s    171 | Code        | 11 |         |    3 | 00/611E : 20 25 64    | mvpt             jsr          random               ; init x deviation amount
  488 |  1 asmdemo.s    172 | Code        | 11 |         |    3 | 00/6121 : AD 21 64    |                  lda          R1                   
  489 |  1 asmdemo.s    173 | Comment     | 11 |         |    0 | 00/6124               |                 ;and #3                          ; ? to reduce number of calls to random function
  490 |  1 asmdemo.s    174 | Code        | 11 |         |    3 | 00/6124 : CD 78 7A    |                  cmp          maxvar               
  491 |  1 asmdemo.s    175 | Code        | 11 |         |    2 | 00/6127 : B0 F5       |                  bcs          mvpt                 ; loop if > #maxvar
  492 |  1 asmdemo.s    176 | Code        | 11 |         |    3 | 00/6129 : 8D 74 7A    |                  sta          xmov                 ; set x displacement
  493 |  1 asmdemo.s    177 | Empty       | 11 |         |    0 | 00/612C               |                                                    
  494 |  1 asmdemo.s    178 | Code        | 11 |         |    2 | 00/612C : A9 00       |                  lda          #0                   ; init neg. flag to 0
  495 |  1 asmdemo.s    179 | Code        | 11 |         |    3 | 00/612E : 8D 76 7A    |                  sta          xneg                 
  496 |  1 asmdemo.s    180 | Code        | 11 |         |    3 | 00/6131 : AD 22 64    |                  lda          R2                   
  497 |  1 asmdemo.s    181 | Code        | 11 |         |    1 | 00/6134 : 0A          |                  asl                               ; get random # in carry
  498 |  1 asmdemo.s    182 | Code        | 11 |         |    2 | 00/6135 : 90 05       |                  bcc          initymov             ; if carry = 0 : no action
  499 |  1 asmdemo.s    183 | Code        | 11 |         |    2 | 00/6137 : A9 01       |                  lda          #1                   ; else set neg. flag to 1
  500 |  1 asmdemo.s    184 | Code        | 11 |         |    3 | 00/6139 : 8D 76 7A    |                  sta          xneg                 
  501 |  1 asmdemo.s    185 | Empty       | 11 |         |    0 | 00/613C               |                                                    
  502 |  1 asmdemo.s    186 | Empty       | 11 |         |    0 | 00/613C               | initymov                                           
  503 |  1 asmdemo.s    187 | Code        | 11 |         |    3 | 00/613C : 20 25 64    |                  jsr          random               
  504 |  1 asmdemo.s    188 | Code        | 11 |         |    3 | 00/613F : AD 23 64    |                  lda          R3                   ; init y deviation amount
  505 |  1 asmdemo.s    189 | Code        | 11 |         |    2 | 00/6142 : 29 03       |                  and          #3                   ; ? to reduce number of calls to random function
  506 |  1 asmdemo.s    190 | Code        | 11 |         |    3 | 00/6144 : AE 6B 7A    |                  ldx          VertFlag             ; test verticality of the line
  507 |  1 asmdemo.s    191 | Code        | 11 |         |    2 | 00/6147 : F0 07       |                  beq          vertoff              ;
  508 |  1 asmdemo.s    192 | Code        | 11 |         |    3 | 00/6149 : CD 78 7A    |                  cmp          maxvar               ; vertical : normal variation
  509 |  1 asmdemo.s    193 | Code        | 11 |         |    2 | 00/614C : B0 EE       |                  bcs          initymov             
  510 |  1 asmdemo.s    194 | Code        | 11 |         |    2 | 00/614E : B0 10       |                  bcs          verton               ; always branch
  511 |  1 asmdemo.s    195 | Empty       | 11 |         |    0 | 00/6150               |                                                    
  512 |  1 asmdemo.s    196 | Empty       | 11 |         |    0 | 00/6150               | vertoff                                            
  513 |  1 asmdemo.s    197 | Code        | 11 |         |    1 | 00/6150 : 48          |                  pha                               
  514 |  1 asmdemo.s    198 | Code        | 11 |         |    3 | 00/6151 : AD 78 7A    |                  lda          maxvar               
  515 |  1 asmdemo.s    199 | Code        | 11 |         |    3 | 00/6154 : 8D 76 69    |                  sta          tempo                
  516 |  1 asmdemo.s    200 | Code        | 11 |         |    3 | 00/6157 : CE 76 69    |                  dec          tempo                
  517 |  1 asmdemo.s    201 | Code        | 11 |         |    1 | 00/615A : 68          |                  pla                               
  518 |  1 asmdemo.s    202 | Code        | 11 |         |    3 | 00/615B : CD 76 69    |                  cmp          tempo                ; horizontal : reduce vertical variation
  519 |  1 asmdemo.s    203 | Code        | 11 |         |    2 | 00/615E : B0 DC       |                  bcs          initymov             ; to take account of pixels size
  520 |  1 asmdemo.s    204 | Code        | 11 |         |    3 | 00/6160 : 8D 75 7A    | verton           sta          ymov                 
  521 |  1 asmdemo.s    205 | Empty       | 11 |         |    0 | 00/6163               |                                                    
  522 |  1 asmdemo.s    206 | Code        | 11 |         |    2 | 00/6163 : A9 00       |                  lda          #0                   ; init neg. flag to 0
  523 |  1 asmdemo.s    207 | Code        | 11 |         |    3 | 00/6165 : 8D 77 7A    |                  sta          yneg                 
  524 |  1 asmdemo.s    208 | Empty       | 11 |         |    0 | 00/6168               |                                                    
  525 |  1 asmdemo.s    209 | Code        | 11 |         |    3 | 00/6168 : AD 24 64    |                  lda          R4                   
  526 |  1 asmdemo.s    210 | Code        | 11 |         |    1 | 00/616B : 0A          |                  asl                               ; get random # in carry
  527 |  1 asmdemo.s    211 | Code        | 11 |         |    2 | 00/616C : 90 05       |                  bcc          _22                  ; if carry = 0 : no action
  528 |  1 asmdemo.s    212 | Code        | 11 |         |    2 | 00/616E : A9 01       |                  lda          #1                   
  529 |  1 asmdemo.s    213 | Code        | 11 |         |    3 | 00/6170 : 8D 77 7A    |                  sta          yneg                 
  530 |  1 asmdemo.s    214 | Empty       | 11 |         |    0 | 00/6173               |                                                    
  531 |  1 asmdemo.s    215 | Empty       | 11 |         |    0 | 00/6173               | _22                                                ; set x variation (positive)
  532 |  1 asmdemo.s    216 | Code        | 11 |         |    2 | 00/6173 : A0 00       |                  ldy          #0                   
  533 |  1 asmdemo.s    217 | Code        | 11 |         |    3 | 00/6175 : AD 76 7A    |                  lda          xneg                 
  534 |  1 asmdemo.s    218 | Code        | 11 |         |    2 | 00/6178 : D0 12       |                  bne          donegx               
  535 |  1 asmdemo.s    219 | Code        | 11 |         |    2 | 00/617A : B1 06       |                  lda          ({$06}),y            
  536 |  1 asmdemo.s    220 | Code        | 11 |         |    1 | 00/617C : 18          |                  clc                               
  537 |  1 asmdemo.s    221 | Code        | 11 |         |    3 | 00/617D : 6D 74 7A    |                  adc          xmov                 
  538 |  1 asmdemo.s    222 | Code        | 11 |         |    2 | 00/6180 : 91 06       |                  sta          ({$06}),y            
  539 |  1 asmdemo.s    223 | Code        | 11 |         |    1 | 00/6182 : C8          |                  iny                               
  540 |  1 asmdemo.s    224 | Code        | 11 |         |    2 | 00/6183 : B1 06       |                  lda          ({$06}),y            
  541 |  1 asmdemo.s    225 | Code        | 11 |         |    2 | 00/6185 : 69 00       |                  adc          #0                   
  542 |  1 asmdemo.s    226 | Code        | 11 |         |    2 | 00/6187 : 91 06       |                  sta          ({$06}),y            
  543 |  1 asmdemo.s    227 | Code        | 11 |         |    3 | 00/6189 : 4C 9D 61    |                  jmp          _33                  
  544 |  1 asmdemo.s    228 | Empty       | 11 |         |    0 | 00/618C               |                                                    
  545 |  1 asmdemo.s    229 | Code        | 11 |         |    2 | 00/618C : A0 00       | donegx           ldy          #0                   ; set x variation (negative)
  546 |  1 asmdemo.s    230 | Code        | 11 |         |    2 | 00/618E : B1 06       |                  lda          ({$06}),y            
  547 |  1 asmdemo.s    231 | Code        | 11 |         |    1 | 00/6190 : 38          |                  sec                               
  548 |  1 asmdemo.s    232 | Code        | 11 |         |    3 | 00/6191 : ED 74 7A    |                  sbc          xmov                 
  549 |  1 asmdemo.s    233 | Code        | 11 |         |    2 | 00/6194 : 91 06       |                  sta          ({$06}),y            
  550 |  1 asmdemo.s    234 | Code        | 11 |         |    1 | 00/6196 : C8          |                  iny                               
  551 |  1 asmdemo.s    235 | Code        | 11 |         |    2 | 00/6197 : B1 06       |                  lda          ({$06}),y            
  552 |  1 asmdemo.s    236 | Code        | 11 |         |    2 | 00/6199 : E9 00       |                  sbc          #0                   
  553 |  1 asmdemo.s    237 | Code        | 11 |         |    2 | 00/619B : 91 06       |                  sta          ({$06}),y            
  554 |  1 asmdemo.s    238 | Empty       | 11 |         |    0 | 00/619D               |                                                    
  555 |  1 asmdemo.s    239 | Empty       | 11 |         |    0 | 00/619D               | _33                                                
  556 |  1 asmdemo.s    240 | Code        | 11 |         |    2 | 00/619D : A0 02       |                  ldy          #2                   ; set y variation (positive)
  557 |  1 asmdemo.s    241 | Code        | 11 |         |    3 | 00/619F : AD 77 7A    |                  lda          yneg                 
  558 |  1 asmdemo.s    242 | Code        | 11 |         |    2 | 00/61A2 : D0 12       |                  bne          donegy               
  559 |  1 asmdemo.s    243 | Code        | 11 |         |    2 | 00/61A4 : B1 06       |                  lda          ({$06}),y            
  560 |  1 asmdemo.s    244 | Code        | 11 |         |    1 | 00/61A6 : 18          |                  clc                               
  561 |  1 asmdemo.s    245 | Code        | 11 |         |    3 | 00/61A7 : 6D 75 7A    |                  adc          ymov                 
  562 |  1 asmdemo.s    246 | Code        | 11 |         |    2 | 00/61AA : 91 06       |                  sta          ({$06}),y            
  563 |  1 asmdemo.s    247 | Code        | 11 |         |    1 | 00/61AC : C8          |                  iny                               
  564 |  1 asmdemo.s    248 | Code        | 11 |         |    2 | 00/61AD : B1 06       |                  lda          ({$06}),y            
  565 |  1 asmdemo.s    249 | Code        | 11 |         |    2 | 00/61AF : 69 00       |                  adc          #0                   
  566 |  1 asmdemo.s    250 | Code        | 11 |         |    2 | 00/61B1 : 91 06       |                  sta          ({$06}),y            
  567 |  1 asmdemo.s    251 | Code        | 11 |         |    3 | 00/61B3 : 4C C7 61    |                  jmp          _44                  
  568 |  1 asmdemo.s    252 | Empty       | 11 |         |    0 | 00/61B6               |                                                    
  569 |  1 asmdemo.s    253 | Code        | 11 |         |    2 | 00/61B6 : A0 02       | donegy           ldy          #2                   
  570 |  1 asmdemo.s    254 | Code        | 11 |         |    2 | 00/61B8 : B1 06       |                  lda          ({$06}),y            
  571 |  1 asmdemo.s    255 | Code        | 11 |         |    1 | 00/61BA : 38          |                  sec                               
  572 |  1 asmdemo.s    256 | Code        | 11 |         |    3 | 00/61BB : ED 75 7A    |                  sbc          ymov                 
  573 |  1 asmdemo.s    257 | Code        | 11 |         |    2 | 00/61BE : 91 06       |                  sta          ({$06}),y            
  574 |  1 asmdemo.s    258 | Code        | 11 |         |    1 | 00/61C0 : C8          |                  iny                               
  575 |  1 asmdemo.s    259 | Code        | 11 |         |    2 | 00/61C1 : B1 06       |                  lda          ({$06}),y            
  576 |  1 asmdemo.s    260 | Code        | 11 |         |    2 | 00/61C3 : E9 00       |                  sbc          #0                   
  577 |  1 asmdemo.s    261 | Code        | 11 |         |    2 | 00/61C5 : 91 06       |                  sta          ({$06}),y            
  578 |  1 asmdemo.s    262 | Empty       | 11 |         |    0 | 00/61C7               |                                                    
  579 |  1 asmdemo.s    263 | Empty       | 11 |         |    0 | 00/61C7               | _44                                                
  580 |  1 asmdemo.s    264 | Code        | 11 |         |    2 | 00/61C7 : A5 06       |                  lda          {$06}                
  581 |  1 asmdemo.s    265 | Code        | 11 |         |    1 | 00/61C9 : 18          |                  clc                               
  582 |  1 asmdemo.s    266 | Code        | 11 |         |    2 | 00/61CA : 69 04       |                  adc          #4                   
  583 |  1 asmdemo.s    267 | Code        | 11 |         |    2 | 00/61CC : 85 06       |                  sta          {$06}                
  584 |  1 asmdemo.s    268 | Code        | 11 |         |    2 | 00/61CE : A5 07       |                  lda          {$06}+1              
  585 |  1 asmdemo.s    269 | Code        | 11 |         |    2 | 00/61D0 : 69 00       |                  adc          #0                   
  586 |  1 asmdemo.s    270 | Code        | 11 |         |    2 | 00/61D2 : 85 07       |                  sta          {$06}+1              
  587 |  1 asmdemo.s    271 | Empty       | 11 |         |    0 | 00/61D4               |                                                    
  588 |  1 asmdemo.s    272 | Comment     | 11 |         |    0 | 00/61D4               |                 ;dec nbpt
  589 |  1 asmdemo.s    273 | Code        | 11 |         |    3 | 00/61D4 : AD 66 7A    |                  lda          nbpt                 
  590 |  1 asmdemo.s    274 | Code        | 11 |         |    2 | 00/61D7 : D0 08       |                  bne          lab                  
  591 |  1 asmdemo.s    275 | Code        | 11 |         |    3 | 00/61D9 : AD 67 7A    |                  lda          nbpt+1               
  592 |  1 asmdemo.s    276 | Code        | 11 |         |    2 | 00/61DC : F0 09       |                  beq          exit                 
  593 |  1 asmdemo.s    277 | Code        | 11 |         |    3 | 00/61DE : CE 67 7A    |                  dec          nbpt+1               
  594 |  1 asmdemo.s    278 | Code        | 11 |         |    3 | 00/61E1 : CE 66 7A    | lab              dec          nbpt                 
  595 |  1 asmdemo.s    279 | Empty       | 11 |         |    0 | 00/61E4               |                                                    
  596 |  1 asmdemo.s    280 | Code        | 11 |         |    3 | 00/61E4 : 4C 1E 61    |                  jmp          mvpt                 
  597 |  1 asmdemo.s    281 | Code        | 11 |         |    1 | 00/61E7 : 60          | exit             rts                               
  598 |  1 asmdemo.s    282 | Empty       | 11 |         |    0 | 00/61E8               |                                                    
  599 |  1 asmdemo.s    283 | Empty       | 11 |         |    0 | 00/61E8               | Quitprog                                           
  600 |  1 asmdemo.s    284 | Comment     | 11 |         |    0 | 00/61E8               |                 ;jsr rstZP
  601 |  1 asmdemo.s    285 | Code        | 11 |         |    3 | 00/61E8 : 20 39 FB    |                  jsr          $fb39                ; SETTXT
  602 |  1 asmdemo.s    286 | Code        | 11 |         |    2 | 00/61EB : A9 03       |                  lda          #3                   
  603 |  1 asmdemo.s    287 | Code        | 11 |         |    3 | 00/61ED : 20 95 FE    |                  jsr          $FE95                ; OUTPRT
  604 |  1 asmdemo.s    288 | Comment     | 11 |         |    0 | 00/61F0               |                 * https://retrocomputing.stackexchange.com/questions/19681/apple-ii-toggles-between-40-and-80-columns-in-assembly-language-apple-iic
  605 |  1 asmdemo.s    289 | Code        | 11 |         |    2 | 00/61F0 : A9 15       |                  lda          #21                  ; to turn off 80 col. firmware
  606 |  1 asmdemo.s    290 | Comment     | 11 |         |    0 | 00/61F2               |                 ;lda #17                       ; to swith to 40 col.
  607 |  1 asmdemo.s    291 | Comment     | 11 |         |    0 | 00/61F2               |                 ;lda #18                       ; to swith to 80 col.
  608 |  1 asmdemo.s    292 | Code        | 11 |         |    3 | 00/61F2 : 20 ED FD    |                  jsr          {$FDED}              ; to turn off 80 col.firmware
  609 |  1 asmdemo.s    293 | Comment     | 11 |         |    0 | 00/61F5               |                 ;lda #0                          ; for next call. See https://6502disassembly.com/a2-rom/Applesoft.html
  610 |  1 asmdemo.s    294 | Comment     | 11 |         |    0 | 00/61F5               |                 ;jsr $d649                       ; "NEW" Applesoft command (otherwise LIST command will crash)
  611 |  1 asmdemo.s    295 | Empty       | 11 |         |    0 | 00/61F5               |                                                    
  612 |  1 asmdemo.s    296 | Code        | 11 |         |    1 | 00/61F5 : 60          |                  rts                               
  613 |  1 asmdemo.s    297 | Empty       | 11 |         |    0 | 00/61F6               |                                                    
  614 |  1 asmdemo.s    298 | Comment     | 11 |         |    0 | 00/61F6               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
  615 |  1 asmdemo.s    299 | Empty       | 11 |         |    0 | 00/61F6               | PopTab                                             ; populate table of points
  616 |  1 asmdemo.s    300 | Macro       | 11 |         |    0 | 00/61F6               |                  movInt       Point1;curptX+2      ; init curptX, integer part
  617 |  1 asmdemo.s    300 | Code        | 11 |         |    3 | 00/61F6 : AD 6C 7A    |                  lda          Point1               
  618 |  1 asmdemo.s    300 | Code        | 11 |         |    3 | 00/61F9 : 8D 56 72    |                  sta          curptX+2             
  619 |  1 asmdemo.s    300 | Code        | 11 |         |    3 | 00/61FC : AD 6D 7A    |                  lda          Point1+1             
  620 |  1 asmdemo.s    300 | Code        | 11 |         |    3 | 00/61FF : 8D 57 72    |                  sta          curptX+2+1           
  621 |  1 asmdemo.s    301 | Macro       | 11 |         |    0 | 00/6202               |                  movInt       Point1+2;curptY+2    ; init curptY, integer part
  622 |  1 asmdemo.s    301 | Code        | 11 |         |    3 | 00/6202 : AD 6E 7A    |                  lda          Point1+2             
  623 |  1 asmdemo.s    301 | Code        | 11 |         |    3 | 00/6205 : 8D 5A 72    |                  sta          curptY+2             
  624 |  1 asmdemo.s    301 | Code        | 11 |         |    3 | 00/6208 : AD 6F 7A    |                  lda          Point1+2+1           
  625 |  1 asmdemo.s    301 | Code        | 11 |         |    3 | 00/620B : 8D 5B 72    |                  sta          curptY+2+1           
  626 |  1 asmdemo.s    302 | Empty       | 11 |         |    0 | 00/620E               |                                                    
  627 |  1 asmdemo.s    303 | Macro       | 11 |         |    0 | 00/620E               |                  movInt       Point1;theopt        ; init 1st element of table (X coordinate)
  628 |  1 asmdemo.s    303 | Code        | 11 |         |    3 | 00/620E : AD 6C 7A    |                  lda          Point1               
  629 |  1 asmdemo.s    303 | Code        | 11 |         |    3 | 00/6211 : 8D 66 72    |                  sta          theopt               
  630 |  1 asmdemo.s    303 | Code        | 11 |         |    3 | 00/6214 : AD 6D 7A    |                  lda          Point1+1             
  631 |  1 asmdemo.s    303 | Code        | 11 |         |    3 | 00/6217 : 8D 67 72    |                  sta          theopt+1             
  632 |  1 asmdemo.s    304 | Macro       | 11 |         |    0 | 00/621A               |                  movInt       Point1+2;theopt+2    ; init 1st element of table (X coordinate)
  633 |  1 asmdemo.s    304 | Code        | 11 |         |    3 | 00/621A : AD 6E 7A    |                  lda          Point1+2             
  634 |  1 asmdemo.s    304 | Code        | 11 |         |    3 | 00/621D : 8D 68 72    |                  sta          theopt+2             
  635 |  1 asmdemo.s    304 | Code        | 11 |         |    3 | 00/6220 : AD 6F 7A    |                  lda          Point1+2+1           
  636 |  1 asmdemo.s    304 | Code        | 11 |         |    3 | 00/6223 : 8D 69 72    |                  sta          theopt+2+1           
  637 |  1 asmdemo.s    305 | Empty       | 11 |         |    0 | 00/6226               |                                                    
  638 |  1 asmdemo.s    306 | Code        | 11 |         |    2 | 00/6226 : A9 66       |                  lda          #<theopt             ; int ptr to point to theopt+4
  639 |  1 asmdemo.s    307 | Code        | 11 |         |    1 | 00/6228 : 18          |                  clc                               
  640 |  1 asmdemo.s    308 | Code        | 11 |         |    2 | 00/6229 : 69 04       |                  adc          #4                   
  641 |  1 asmdemo.s    309 | Code        | 11 |         |    2 | 00/622B : 85 06       |                  sta          {$06}                
  642 |  1 asmdemo.s    310 | Code        | 11 |         |    2 | 00/622D : A9 72       |                  lda          #>theopt             
  643 |  1 asmdemo.s    311 | Code        | 11 |         |    2 | 00/622F : 69 00       |                  adc          #0                   
  644 |  1 asmdemo.s    312 | Code        | 11 |         |    2 | 00/6231 : 85 07       |                  sta          {$06}+1              
  645 |  1 asmdemo.s    313 | Empty       | 11 |         |    0 | 00/6233               |                                                    
  646 |  1 asmdemo.s    314 | Empty       | 11 |         |    0 | 00/6233               | loopPokeTab                                        
  647 |  1 asmdemo.s    315 | Code        | 11 |         |    3 | 00/6233 : AD 5C 72    |                  lda          signX                
  648 |  1 asmdemo.s    316 | Code        | 11 |         |    2 | 00/6236 : D0 28       |                  bne          dosubx               
  649 |  1 asmdemo.s    317 | Macro       | 11 |         |    0 | 00/6238               |                  addInt32     curptX;XincDec       ; add X increment to curptX (integer and decimal parts)
  650 |  1 asmdemo.s    317 | Code        | 11 |         |    1 | 00/6238 : 18          |                  clc                               
  651 |  1 asmdemo.s    317 | Code        | 11 |         |    3 | 00/6239 : AD 54 72    |                  lda          curptX               
  652 |  1 asmdemo.s    317 | Code        | 11 |         |    3 | 00/623C : 6D 5E 72    |                  adc          XincDec              
  653 |  1 asmdemo.s    317 | Code        | 11 |         |    3 | 00/623F : 8D 54 72    |                  sta          curptX               
  654 |  1 asmdemo.s    317 | Code        | 11 |         |    3 | 00/6242 : AD 55 72    |                  lda          curptX+1             
  655 |  1 asmdemo.s    317 | Code        | 11 |         |    3 | 00/6245 : 6D 5F 72    |                  adc          XincDec+1            
  656 |  1 asmdemo.s    317 | Code        | 11 |         |    3 | 00/6248 : 8D 55 72    |                  sta          curptX+1             
  657 |  1 asmdemo.s    317 | Code        | 11 |         |    3 | 00/624B : AD 56 72    |                  lda          curptX+2             
  658 |  1 asmdemo.s    317 | Code        | 11 |         |    3 | 00/624E : 6D 60 72    |                  adc          XincDec+2            
  659 |  1 asmdemo.s    317 | Code        | 11 |         |    3 | 00/6251 : 8D 56 72    |                  sta          curptX+2             
  660 |  1 asmdemo.s    317 | Code        | 11 |         |    3 | 00/6254 : AD 57 72    |                  lda          curptX+3             
  661 |  1 asmdemo.s    317 | Code        | 11 |         |    3 | 00/6257 : 6D 61 72    |                  adc          XincDec+3            
  662 |  1 asmdemo.s    317 | Code        | 11 |         |    3 | 00/625A : 8D 57 72    |                  sta          curptX+3             
  663 |  1 asmdemo.s    318 | Code        | 11 |         |    3 | 00/625D : 4C 85 62    |                  jmp          ynow                 
  664 |  1 asmdemo.s    319 | Macro       | 11 |         |    0 | 00/6260               | dosubx           subInt32     curptX;XincDec       
  665 |  1 asmdemo.s    319 | Code        | 11 |         |    1 | 00/6260 : 38          |                  sec                               
  666 |  1 asmdemo.s    319 | Code        | 11 |         |    3 | 00/6261 : AD 54 72    |                  lda          curptX               
  667 |  1 asmdemo.s    319 | Code        | 11 |         |    3 | 00/6264 : ED 5E 72    |                  sbc          XincDec              
  668 |  1 asmdemo.s    319 | Code        | 11 |         |    3 | 00/6267 : 8D 54 72    |                  sta          curptX               
  669 |  1 asmdemo.s    319 | Code        | 11 |         |    3 | 00/626A : AD 55 72    |                  lda          curptX+1             
  670 |  1 asmdemo.s    319 | Code        | 11 |         |    3 | 00/626D : ED 5F 72    |                  sbc          XincDec+1            
  671 |  1 asmdemo.s    319 | Code        | 11 |         |    3 | 00/6270 : 8D 55 72    |                  sta          curptX+1             
  672 |  1 asmdemo.s    319 | Code        | 11 |         |    3 | 00/6273 : AD 56 72    |                  lda          curptX+2             
  673 |  1 asmdemo.s    319 | Code        | 11 |         |    3 | 00/6276 : ED 60 72    |                  sbc          XincDec+2            
  674 |  1 asmdemo.s    319 | Code        | 11 |         |    3 | 00/6279 : 8D 56 72    |                  sta          curptX+2             
  675 |  1 asmdemo.s    319 | Code        | 11 |         |    3 | 00/627C : AD 57 72    |                  lda          curptX+3             
  676 |  1 asmdemo.s    319 | Code        | 11 |         |    3 | 00/627F : ED 61 72    |                  sbc          XincDec+3            
  677 |  1 asmdemo.s    319 | Code        | 11 |         |    3 | 00/6282 : 8D 57 72    |                  sta          curptX+3             
  678 |  1 asmdemo.s    320 | Empty       | 11 |         |    0 | 00/6285               |                                                    
  679 |  1 asmdemo.s    321 | Empty       | 11 |         |    0 | 00/6285               | ynow                                               
  680 |  1 asmdemo.s    322 | Code        | 11 |         |    3 | 00/6285 : AD 5D 72    |                  lda          signY                
  681 |  1 asmdemo.s    323 | Code        | 11 |         |    2 | 00/6288 : D0 28       |                  bne          dosuby               
  682 |  1 asmdemo.s    324 | Macro       | 11 |         |    0 | 00/628A               |                  addInt32     curptY;YincDec       ; add Y increment to curptY (integer and decimal parts)
  683 |  1 asmdemo.s    324 | Code        | 11 |         |    1 | 00/628A : 18          |                  clc                               
  684 |  1 asmdemo.s    324 | Code        | 11 |         |    3 | 00/628B : AD 58 72    |                  lda          curptY               
  685 |  1 asmdemo.s    324 | Code        | 11 |         |    3 | 00/628E : 6D 62 72    |                  adc          YincDec              
  686 |  1 asmdemo.s    324 | Code        | 11 |         |    3 | 00/6291 : 8D 58 72    |                  sta          curptY               
  687 |  1 asmdemo.s    324 | Code        | 11 |         |    3 | 00/6294 : AD 59 72    |                  lda          curptY+1             
  688 |  1 asmdemo.s    324 | Code        | 11 |         |    3 | 00/6297 : 6D 63 72    |                  adc          YincDec+1            
  689 |  1 asmdemo.s    324 | Code        | 11 |         |    3 | 00/629A : 8D 59 72    |                  sta          curptY+1             
  690 |  1 asmdemo.s    324 | Code        | 11 |         |    3 | 00/629D : AD 5A 72    |                  lda          curptY+2             
  691 |  1 asmdemo.s    324 | Code        | 11 |         |    3 | 00/62A0 : 6D 64 72    |                  adc          YincDec+2            
  692 |  1 asmdemo.s    324 | Code        | 11 |         |    3 | 00/62A3 : 8D 5A 72    |                  sta          curptY+2             
  693 |  1 asmdemo.s    324 | Code        | 11 |         |    3 | 00/62A6 : AD 5B 72    |                  lda          curptY+3             
  694 |  1 asmdemo.s    324 | Code        | 11 |         |    3 | 00/62A9 : 6D 65 72    |                  adc          YincDec+3            
  695 |  1 asmdemo.s    324 | Code        | 11 |         |    3 | 00/62AC : 8D 5B 72    |                  sta          curptY+3             
  696 |  1 asmdemo.s    325 | Code        | 11 |         |    3 | 00/62AF : 4C D7 62    |                  jmp          oknow                
  697 |  1 asmdemo.s    326 | Empty       | 11 |         |    0 | 00/62B2               | dosuby                                             
  698 |  1 asmdemo.s    327 | Macro       | 11 |         |    0 | 00/62B2               |                  subInt32     curptY;YincDec       
  699 |  1 asmdemo.s    327 | Code        | 11 |         |    1 | 00/62B2 : 38          |                  sec                               
  700 |  1 asmdemo.s    327 | Code        | 11 |         |    3 | 00/62B3 : AD 58 72    |                  lda          curptY               
  701 |  1 asmdemo.s    327 | Code        | 11 |         |    3 | 00/62B6 : ED 62 72    |                  sbc          YincDec              
  702 |  1 asmdemo.s    327 | Code        | 11 |         |    3 | 00/62B9 : 8D 58 72    |                  sta          curptY               
  703 |  1 asmdemo.s    327 | Code        | 11 |         |    3 | 00/62BC : AD 59 72    |                  lda          curptY+1             
  704 |  1 asmdemo.s    327 | Code        | 11 |         |    3 | 00/62BF : ED 63 72    |                  sbc          YincDec+1            
  705 |  1 asmdemo.s    327 | Code        | 11 |         |    3 | 00/62C2 : 8D 59 72    |                  sta          curptY+1             
  706 |  1 asmdemo.s    327 | Code        | 11 |         |    3 | 00/62C5 : AD 5A 72    |                  lda          curptY+2             
  707 |  1 asmdemo.s    327 | Code        | 11 |         |    3 | 00/62C8 : ED 64 72    |                  sbc          YincDec+2            
  708 |  1 asmdemo.s    327 | Code        | 11 |         |    3 | 00/62CB : 8D 5A 72    |                  sta          curptY+2             
  709 |  1 asmdemo.s    327 | Code        | 11 |         |    3 | 00/62CE : AD 5B 72    |                  lda          curptY+3             
  710 |  1 asmdemo.s    327 | Code        | 11 |         |    3 | 00/62D1 : ED 65 72    |                  sbc          YincDec+3            
  711 |  1 asmdemo.s    327 | Code        | 11 |         |    3 | 00/62D4 : 8D 5B 72    |                  sta          curptY+3             
  712 |  1 asmdemo.s    328 | Empty       | 11 |         |    0 | 00/62D7               | oknow                                              
  713 |  1 asmdemo.s    329 | Code        | 11 |         |    2 | 00/62D7 : A0 00       |                  ldy          #0                   ; copy integer part of curptX to table
  714 |  1 asmdemo.s    330 | Code        | 11 |         |    3 | 00/62D9 : AD 56 72    |                  lda          curptX+2             
  715 |  1 asmdemo.s    331 | Code        | 11 |         |    2 | 00/62DC : 91 06       |                  sta          ({$06}),y            
  716 |  1 asmdemo.s    332 | Code        | 11 |         |    1 | 00/62DE : C8          |                  iny                               
  717 |  1 asmdemo.s    333 | Code        | 11 |         |    3 | 00/62DF : AD 57 72    |                  lda          curptX+3             
  718 |  1 asmdemo.s    334 | Code        | 11 |         |    2 | 00/62E2 : 91 06       |                  sta          ({$06}),y            
  719 |  1 asmdemo.s    335 | Empty       | 11 |         |    0 | 00/62E4               |                                                    
  720 |  1 asmdemo.s    336 | Code        | 11 |         |    2 | 00/62E4 : A5 06       |                  lda          {$06}                ; inc ptr
  721 |  1 asmdemo.s    337 | Code        | 11 |         |    1 | 00/62E6 : 18          |                  clc                               
  722 |  1 asmdemo.s    338 | Code        | 11 |         |    2 | 00/62E7 : 69 02       |                  adc          #2                   
  723 |  1 asmdemo.s    339 | Code        | 11 |         |    2 | 00/62E9 : 85 06       |                  sta          {$06}                
  724 |  1 asmdemo.s    340 | Code        | 11 |         |    2 | 00/62EB : A5 07       |                  lda          {$06}+1              
  725 |  1 asmdemo.s    341 | Code        | 11 |         |    2 | 00/62ED : 69 00       |                  adc          #0                   
  726 |  1 asmdemo.s    342 | Code        | 11 |         |    2 | 00/62EF : 85 07       |                  sta          {$06}+1              
  727 |  1 asmdemo.s    343 | Empty       | 11 |         |    0 | 00/62F1               |                                                    
  728 |  1 asmdemo.s    344 | Code        | 11 |         |    2 | 00/62F1 : A0 00       |                  ldy          #0                   ; copy integer part of curptY to table
  729 |  1 asmdemo.s    345 | Code        | 11 |         |    3 | 00/62F3 : AD 5A 72    |                  lda          curptY+2             
  730 |  1 asmdemo.s    346 | Code        | 11 |         |    2 | 00/62F6 : 91 06       |                  sta          ({$06}),y            
  731 |  1 asmdemo.s    347 | Code        | 11 |         |    1 | 00/62F8 : C8          |                  iny                               
  732 |  1 asmdemo.s    348 | Code        | 11 |         |    3 | 00/62F9 : AD 5B 72    |                  lda          curptY+3             
  733 |  1 asmdemo.s    349 | Code        | 11 |         |    2 | 00/62FC : 91 06       |                  sta          ({$06}),y            
  734 |  1 asmdemo.s    350 | Empty       | 11 |         |    0 | 00/62FE               |                                                    
  735 |  1 asmdemo.s    351 | Code        | 11 |         |    2 | 00/62FE : A5 06       |                  lda          {$06}                ; inc ptr
  736 |  1 asmdemo.s    352 | Code        | 11 |         |    1 | 00/6300 : 18          |                  clc                               
  737 |  1 asmdemo.s    353 | Code        | 11 |         |    2 | 00/6301 : 69 02       |                  adc          #2                   
  738 |  1 asmdemo.s    354 | Code        | 11 |         |    2 | 00/6303 : 85 06       |                  sta          {$06}                
  739 |  1 asmdemo.s    355 | Code        | 11 |         |    2 | 00/6305 : A5 07       |                  lda          {$06}+1              
  740 |  1 asmdemo.s    356 | Code        | 11 |         |    2 | 00/6307 : 69 00       |                  adc          #0                   
  741 |  1 asmdemo.s    357 | Code        | 11 |         |    2 | 00/6309 : 85 07       |                  sta          {$06}+1              
  742 |  1 asmdemo.s    358 | Empty       | 11 |         |    0 | 00/630B               |                                                    
  743 |  1 asmdemo.s    359 | Comment     | 11 |         |    0 | 00/630B               |                 ;dec nbpt
  744 |  1 asmdemo.s    360 | Empty       | 11 |         |    0 | 00/630B               |                                                    
  745 |  1 asmdemo.s    361 | Code        | 11 |         |    3 | 00/630B : AD 66 7A    |                  lda          nbpt                 
  746 |  1 asmdemo.s    362 | Code        | 11 |         |    2 | 00/630E : D0 08       |                  bne          label                
  747 |  1 asmdemo.s    363 | Code        | 11 |         |    3 | 00/6310 : AD 67 7A    |                  lda          nbpt+1               
  748 |  1 asmdemo.s    364 | Code        | 11 |         |    2 | 00/6313 : F0 09       |                  beq          endpoptable          
  749 |  1 asmdemo.s    365 | Code        | 11 |         |    3 | 00/6315 : CE 67 7A    |                  dec          nbpt+1               
  750 |  1 asmdemo.s    366 | Code        | 11 |         |    3 | 00/6318 : CE 66 7A    | label            dec          nbpt                 
  751 |  1 asmdemo.s    367 | Empty       | 11 |         |    0 | 00/631B               |                                                    
  752 |  1 asmdemo.s    368 | Code        | 11 |         |    3 | 00/631B : 4C 33 62    |                  jmp          loopPokeTab          
  753 |  1 asmdemo.s    369 | Empty       | 11 |         |    0 | 00/631E               | endpoptable                                        
  754 |  1 asmdemo.s    370 | Code        | 11 |         |    1 | 00/631E : 60          |                  rts                               
  755 |  1 asmdemo.s    371 | Empty       | 11 |         |    0 | 00/631F               |                                                    
  756 |  1 asmdemo.s    372 | Comment     | 11 |         |    0 | 00/631F               | *
  757 |  1 asmdemo.s    373 | Comment     | 11 |         |    0 | 00/631F               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  758 |  1 asmdemo.s    374 | Comment     | 11 |         |    0 | 00/631F               | *
  759 |  1 asmdemo.s    375 | Comment     | 11 |         |    0 | 00/631F               | * On keypressed, modify vars
  760 |  1 asmdemo.s    376 | Comment     | 11 |         |    0 | 00/631F               | *
  761 |  1 asmdemo.s    377 | Equivalence | 11 |         |    0 | 00/631F               | maxvardef        equ          3                    
  762 |  1 asmdemo.s    378 | Equivalence | 11 |         |    0 | 00/631F               | seglengthdef     equ          8                    
  763 |  1 asmdemo.s    379 | Equivalence | 11 |         |    0 | 00/631F               | pensizeXdef      equ          2                    
  764 |  1 asmdemo.s    380 | Equivalence | 11 |         |    0 | 00/631F               | pensizeYdef      equ          1                    
  765 |  1 asmdemo.s    381 | Empty       | 11 |         |    0 | 00/631F               |                                                    
  766 |  1 asmdemo.s    382 | Equivalence | 11 |         |    0 | 00/631F               | seglengthmax     equ          100                  
  767 |  1 asmdemo.s    383 | Equivalence | 11 |         |    0 | 00/631F               | seglengthmin     equ          3                    
  768 |  1 asmdemo.s    384 | Equivalence | 11 |         |    0 | 00/631F               | maxvarmax        equ          50                   
  769 |  1 asmdemo.s    385 | Equivalence | 11 |         |    0 | 00/631F               | maxvarmin        equ          3                    
  770 |  1 asmdemo.s    386 | Empty       | 11 |         |    0 | 00/631F               |                                                    
  771 |  1 asmdemo.s    387 | Equivalence | 11 |         |    0 | 00/631F               | pensizeXmax      equ          12                   
  772 |  1 asmdemo.s    388 | Equivalence | 11 |         |    0 | 00/631F               | pensizeXmin      equ          1                    
  773 |  1 asmdemo.s    389 | Equivalence | 11 |         |    0 | 00/631F               | pensizeYmax      equ          12                   
  774 |  1 asmdemo.s    390 | Equivalence | 11 |         |    0 | 00/631F               | pensizeYmin      equ          1                    
  775 |  1 asmdemo.s    391 | Empty       | 11 |         |    0 | 00/631F               |                                                    
  776 |  1 asmdemo.s    392 | Empty       | 11 |         |    0 | 00/631F               | AdjustVars                                         
  777 |  1 asmdemo.s    393 | Empty       | 11 |         |    0 | 00/631F               |                                                    
  778 |  1 asmdemo.s    394 | Code        | 11 |         |    2 | 00/631F : C9 4E       |                  cmp          #'N'                 ; N : no variation toggle (straight lines)
  779 |  1 asmdemo.s    395 | Code        | 11 |         |    2 | 00/6321 : D0 09       |                  bne          notN                 
  780 |  1 asmdemo.s    396 | Code        | 11 |         |    3 | 00/6323 : AD 7D 7A    |                  lda          Novariation          
  781 |  1 asmdemo.s    397 | Code        | 11 |         |    2 | 00/6326 : 49 01       |                  eor          #1                   
  782 |  1 asmdemo.s    398 | Code        | 11 |         |    3 | 00/6328 : 8D 7D 7A    |                  sta          Novariation          
  783 |  1 asmdemo.s    399 | Code        | 11 |         |    1 | 00/632B : 60          |                  rts                               
  784 |  1 asmdemo.s    400 | Empty       | 11 |         |    0 | 00/632C               | notN                                               
  785 |  1 asmdemo.s    401 | Code        | 11 |         |    2 | 00/632C : C9 4F       |                  cmp          #'O'                 ; O : reset original values
  786 |  1 asmdemo.s    402 | Code        | 11 |         |    2 | 00/632E : D0 1A       |                  bne          notO                 
  787 |  1 asmdemo.s    403 | Code        | 11 |         |    2 | 00/6330 : A9 03       |                  lda          #{3}                 
  788 |  1 asmdemo.s    404 | Code        | 11 |         |    3 | 00/6332 : 8D 78 7A    |                  sta          maxvar               
  789 |  1 asmdemo.s    405 | Code        | 11 |         |    2 | 00/6335 : A9 08       |                  lda          #{8}                 
  790 |  1 asmdemo.s    406 | Code        | 11 |         |    3 | 00/6337 : 8D 79 7A    |                  sta          seglength            
  791 |  1 asmdemo.s    407 | Code        | 11 |         |    2 | 00/633A : A9 02       |                  lda          #{2}                 
  792 |  1 asmdemo.s    408 | Code        | 11 |         |    3 | 00/633C : 8D 7B 7A    |                  sta          pensize2             
  793 |  1 asmdemo.s    409 | Code        | 11 |         |    2 | 00/633F : A9 01       |                  lda          #{1}                 
  794 |  1 asmdemo.s    410 | Code        | 11 |         |    3 | 00/6341 : 8D 7C 7A    |                  sta          pensize2+1           
  795 |  1 asmdemo.s    411 | Code        | 11 |         |    2 | 00/6344 : A9 00       |                  lda          #0                   
  796 |  1 asmdemo.s    412 | Code        | 11 |         |    3 | 00/6346 : 8D 7D 7A    |                  sta          Novariation          
  797 |  1 asmdemo.s    413 | Code        | 11 |         |    1 | 00/6349 : 60          |                  rts                               
  798 |  1 asmdemo.s    414 | Empty       | 11 |         |    0 | 00/634A               |                                                    
  799 |  1 asmdemo.s    415 | Code        | 11 |         |    2 | 00/634A : C9 58       | notO             cmp          #'X'                 ; X : pensize.x bigger
  800 |  1 asmdemo.s    416 | Code        | 11 |         |    2 | 00/634C : D0 0B       |                  bne          notX                 
  801 |  1 asmdemo.s    417 | Code        | 11 |         |    3 | 00/634E : AD 7B 7A    |                  lda          pensize2             
  802 |  1 asmdemo.s    418 | Code        | 11 |         |    2 | 00/6351 : C9 0C       |                  cmp          #{12}                
  803 |  1 asmdemo.s    419 | Code        | 11 |         |    2 | 00/6353 : B0 03       |                  bcs          psxmax               
  804 |  1 asmdemo.s    420 | Code        | 11 |         |    3 | 00/6355 : EE 7B 7A    |                  inc          pensize2             
  805 |  1 asmdemo.s    421 | Code        | 11 |         |    1 | 00/6358 : 60          | psxmax           rts                               
  806 |  1 asmdemo.s    422 | Empty       | 11 |         |    0 | 00/6359               |                                                    
  807 |  1 asmdemo.s    423 | Code        | 11 |         |    2 | 00/6359 : C9 57       | notX             cmp          #'W'                 ; W : pensize.x smaller
  808 |  1 asmdemo.s    424 | Code        | 11 |         |    2 | 00/635B : D0 0B       |                  bne          notW                 
  809 |  1 asmdemo.s    425 | Code        | 11 |         |    3 | 00/635D : AD 7B 7A    |                  lda          pensize2             
  810 |  1 asmdemo.s    426 | Code        | 11 |         |    2 | 00/6360 : C9 01       |                  cmp          #{1}                 
  811 |  1 asmdemo.s    427 | Code        | 11 |         |    2 | 00/6362 : F0 03       |                  beq          psxmin               
  812 |  1 asmdemo.s    428 | Code        | 11 |         |    3 | 00/6364 : CE 7B 7A    |                  dec          pensize2             
  813 |  1 asmdemo.s    429 | Code        | 11 |         |    1 | 00/6367 : 60          | psxmin           rts                               
  814 |  1 asmdemo.s    430 | Empty       | 11 |         |    0 | 00/6368               |                                                    
  815 |  1 asmdemo.s    431 | Code        | 11 |         |    2 | 00/6368 : C9 59       | notW             cmp          #'Y'                 ; Y : pensize.y bigger
  816 |  1 asmdemo.s    432 | Code        | 11 |         |    2 | 00/636A : D0 0B       |                  bne          notY                 
  817 |  1 asmdemo.s    433 | Code        | 11 |         |    3 | 00/636C : AD 7C 7A    |                  lda          pensize2+1           
  818 |  1 asmdemo.s    434 | Code        | 11 |         |    2 | 00/636F : C9 0C       |                  cmp          #{12}                
  819 |  1 asmdemo.s    435 | Code        | 11 |         |    2 | 00/6371 : B0 03       |                  bcs          psymax               
  820 |  1 asmdemo.s    436 | Code        | 11 |         |    3 | 00/6373 : EE 7C 7A    |                  inc          pensize2+1           
  821 |  1 asmdemo.s    437 | Code        | 11 |         |    1 | 00/6376 : 60          | psymax           rts                               
  822 |  1 asmdemo.s    438 | Empty       | 11 |         |    0 | 00/6377               |                                                    
  823 |  1 asmdemo.s    439 | Code        | 11 |         |    2 | 00/6377 : C9 55       | notY             cmp          #'U'                 ; U : pensize.y smaller
  824 |  1 asmdemo.s    440 | Code        | 11 |         |    2 | 00/6379 : D0 0B       |                  bne          notU                 
  825 |  1 asmdemo.s    441 | Code        | 11 |         |    3 | 00/637B : AD 7C 7A    |                  lda          pensize2+1           
  826 |  1 asmdemo.s    442 | Code        | 11 |         |    2 | 00/637E : C9 01       |                  cmp          #{1}                 
  827 |  1 asmdemo.s    443 | Code        | 11 |         |    2 | 00/6380 : F0 03       |                  beq          psymin               
  828 |  1 asmdemo.s    444 | Code        | 11 |         |    3 | 00/6382 : CE 7C 7A    |                  dec          pensize2+1           
  829 |  1 asmdemo.s    445 | Code        | 11 |         |    1 | 00/6385 : 60          | psymin           rts                               
  830 |  1 asmdemo.s    446 | Empty       | 11 |         |    0 | 00/6386               |                                                    
  831 |  1 asmdemo.s    447 | Code        | 11 |         |    2 | 00/6386 : C9 53       | notU             cmp          #'S'                 ; S : segments smaller
  832 |  1 asmdemo.s    448 | Code        | 11 |         |    2 | 00/6388 : D0 0B       |                  bne          notS                 
  833 |  1 asmdemo.s    449 | Code        | 11 |         |    3 | 00/638A : AD 79 7A    |                  lda          seglength            
  834 |  1 asmdemo.s    450 | Code        | 11 |         |    2 | 00/638D : C9 64       |                  cmp          #{100}               
  835 |  1 asmdemo.s    451 | Code        | 11 |         |    2 | 00/638F : B0 2F       |                  bcs          notL                 
  836 |  1 asmdemo.s    452 | Code        | 11 |         |    3 | 00/6391 : EE 79 7A    |                  inc          seglength            
  837 |  1 asmdemo.s    453 | Code        | 11 |         |    1 | 00/6394 : 60          |                  rts                               
  838 |  1 asmdemo.s    454 | Empty       | 11 |         |    0 | 00/6395               |                                                    
  839 |  1 asmdemo.s    455 | Code        | 11 |         |    2 | 00/6395 : C9 44       | notS             cmp          #'D'                 ; D : segments longer
  840 |  1 asmdemo.s    456 | Code        | 11 |         |    2 | 00/6397 : D0 0A       |                  bne          notD                 
  841 |  1 asmdemo.s    457 | Code        | 11 |         |    3 | 00/6399 : AD 79 7A    |                  lda          seglength            
  842 |  1 asmdemo.s    458 | Code        | 11 |         |    2 | 00/639C : C9 03       |                  cmp          #{3}                 
  843 |  1 asmdemo.s    459 | Code        | 11 |         |    2 | 00/639E : 90 20       |                  bcc          notL                 
  844 |  1 asmdemo.s    460 | Code        | 11 |         |    3 | 00/63A0 : CE 79 7A    |                  dec          seglength            
  845 |  1 asmdemo.s    461 | Empty       | 11 |         |    0 | 00/63A3               |                                                    
  846 |  1 asmdemo.s    462 | Code        | 11 |         |    2 | 00/63A3 : C9 4D       | notD             cmp          #'M'                 ; M : bigger variations
  847 |  1 asmdemo.s    463 | Code        | 11 |         |    2 | 00/63A5 : D0 0B       |                  bne          notM                 
  848 |  1 asmdemo.s    464 | Code        | 11 |         |    3 | 00/63A7 : AD 78 7A    |                  lda          maxvar               
  849 |  1 asmdemo.s    465 | Code        | 11 |         |    2 | 00/63AA : C9 32       |                  cmp          #{50}                
  850 |  1 asmdemo.s    466 | Code        | 11 |         |    2 | 00/63AC : B0 12       |                  bcs          notL                 
  851 |  1 asmdemo.s    467 | Code        | 11 |         |    3 | 00/63AE : EE 78 7A    |                  inc          maxvar               
  852 |  1 asmdemo.s    468 | Code        | 11 |         |    1 | 00/63B1 : 60          |                  rts                               
  853 |  1 asmdemo.s    469 | Empty       | 11 |         |    0 | 00/63B2               |                                                    
  854 |  1 asmdemo.s    470 | Code        | 11 |         |    2 | 00/63B2 : C9 4C       | notM             cmp          #'L'                 ; L : smaller variations
  855 |  1 asmdemo.s    471 | Code        | 11 |         |    2 | 00/63B4 : D0 0A       |                  bne          notL                 
  856 |  1 asmdemo.s    472 | Code        | 11 |         |    3 | 00/63B6 : AD 78 7A    |                  lda          maxvar               
  857 |  1 asmdemo.s    473 | Code        | 11 |         |    2 | 00/63B9 : C9 03       |                  cmp          #{3}                 
  858 |  1 asmdemo.s    474 | Code        | 11 |         |    2 | 00/63BB : 90 03       |                  bcc          notL                 
  859 |  1 asmdemo.s    475 | Code        | 11 |         |    3 | 00/63BD : CE 78 7A    |                  dec          maxvar               
  860 |  1 asmdemo.s    476 | Code        | 11 |         |    1 | 00/63C0 : 60          | notL             rts                               
  861 |  1 asmdemo.s    477 | Comment     | 11 |         |    0 | 00/63C1               | *
  862 |  1 asmdemo.s    478 | Comment     | 11 |         |    0 | 00/63C1               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  863 |  1 asmdemo.s    479 | Comment     | 11 |         |    0 | 00/63C1               | *
  864 |  1 asmdemo.s    480 | Empty       | 11 |         |    0 | 00/63C1               | ClearIt                                            ; fill port with black
  865 |  1 asmdemo.s    481 | Code        | 11 |         |    2 | 00/63C1 : B0 19       |                  bcs          ozunid_1             
  866 |  1 asmdemo.s    482 | Macro       | 11 |         |    0 | 00/63C3               |                  GP_call      {{{{{{{1}+1}+1}+1}+1}+1}+1};ModeCopy; pen + destination = pen
  867 |  1 asmdemo.s    482 | Code        | 11 |         |    3 | 00/63C3 : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  868 |  1 asmdemo.s    482 | Data        | 11 |         |    1 | 00/63C6 : 07          |                  dfb          {{{{{{{1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  869 |  1 asmdemo.s    482 | Data        | 11 |         |    2 | 00/63C7 : BE 7A       |                  da           ModeCopy             ; address of parameter(s) (2 bytes), 0 if no paramter
  870 |  1 asmdemo.s    483 | Empty       | 11 |         |    0 | 00/63C9               |                                                    
  871 |  1 asmdemo.s    484 | Macro       | 11 |         |    0 | 00/63C9               |                  GP_call      {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1};Black; black (0,0,...)
  872 |  1 asmdemo.s    484 | Code        | 11 |         |    3 | 00/63C9 : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  873 |  1 asmdemo.s    484 | Data        | 11 |         |    1 | 00/63CC : 08          |                  dfb          {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  874 |  1 asmdemo.s    484 | Data        | 11 |         |    2 | 00/63CD : AB 7A       |                  da           Black                ; address of parameter(s) (2 bytes), 0 if no paramter
  875 |  1 asmdemo.s    485 | Macro       | 11 |         |    0 | 00/63CF               |                  GP_call      {{{{{{{1}+1}+1}+1}+1}+1}+1};ModeCopy
  876 |  1 asmdemo.s    485 | Code        | 11 |         |    3 | 00/63CF : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  877 |  1 asmdemo.s    485 | Data        | 11 |         |    1 | 00/63D2 : 07          |                  dfb          {{{{{{{1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  878 |  1 asmdemo.s    485 | Data        | 11 |         |    2 | 00/63D3 : BE 7A       |                  da           ModeCopy             ; address of parameter(s) (2 bytes), 0 if no paramter
  879 |  1 asmdemo.s    486 | Macro       | 11 |         |    0 | 00/63D5               |                  GP_call      {{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1};WowRect; paint very large rectangle in black
  880 |  1 asmdemo.s    486 | Code        | 11 |         |    3 | 00/63D5 : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  881 |  1 asmdemo.s    486 | Data        | 11 |         |    1 | 00/63D8 : 11          |                  dfb          {{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  882 |  1 asmdemo.s    486 | Data        | 11 |         |    2 | 00/63D9 : EF 63       |                  da           WowRect              ; address of parameter(s) (2 bytes), 0 if no paramter
  883 |  1 asmdemo.s    487 | Code        | 11 |         |    1 | 00/63DB : 60          |                  rts                               
  884 |  1 asmdemo.s    488 | Empty       | 11 |         |    0 | 00/63DC               |                                                    
  885 |  1 asmdemo.s    489 | Macro       | 11 |         |    0 | 00/63DC               | ozunid_1         GP_call      {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1};White
  886 |  1 asmdemo.s    489 | Code        | 11 |         |    3 | 00/63DC : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  887 |  1 asmdemo.s    489 | Data        | 11 |         |    1 | 00/63DF : 08          |                  dfb          {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  888 |  1 asmdemo.s    489 | Data        | 11 |         |    2 | 00/63E0 : B4 7A       |                  da           White                ; address of parameter(s) (2 bytes), 0 if no paramter
  889 |  1 asmdemo.s    490 | Macro       | 11 |         |    0 | 00/63E2               |                  GP_call      {{{{{{{1}+1}+1}+1}+1}+1}+1};ModeCopy
  890 |  1 asmdemo.s    490 | Code        | 11 |         |    3 | 00/63E2 : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  891 |  1 asmdemo.s    490 | Data        | 11 |         |    1 | 00/63E5 : 07          |                  dfb          {{{{{{{1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  892 |  1 asmdemo.s    490 | Data        | 11 |         |    2 | 00/63E6 : BE 7A       |                  da           ModeCopy             ; address of parameter(s) (2 bytes), 0 if no paramter
  893 |  1 asmdemo.s    491 | Macro       | 11 |         |    0 | 00/63E8               |                  GP_call      {{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1};WowRect; paint very large rectangle in black
  894 |  1 asmdemo.s    491 | Code        | 11 |         |    3 | 00/63E8 : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  895 |  1 asmdemo.s    491 | Data        | 11 |         |    1 | 00/63EB : 11          |                  dfb          {{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  896 |  1 asmdemo.s    491 | Data        | 11 |         |    2 | 00/63EC : EF 63       |                  da           WowRect              ; address of parameter(s) (2 bytes), 0 if no paramter
  897 |  1 asmdemo.s    492 | Comment     | 11 |         |    0 | 00/63EE               |                 ;GP_call SetPattern;White                ; restore pattern to white (1,1,...)
  898 |  1 asmdemo.s    493 | Code        | 11 |         |    1 | 00/63EE : 60          |                  rts                               
  899 |  1 asmdemo.s    494 | Data        | 11 |         |    8 | 00/63EF : 00 00 00 00 | WowRect          dw           0,0,10000,10000      ; very large rectangle
      |                     |             |    |         |      |           10 27 10 27 |
  900 |  1 asmdemo.s    495 | Comment     | 11 |         |    0 | 00/63F7               | *
  901 |  1 asmdemo.s    496 | Comment     | 11 |         |    0 | 00/63F7               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  902 |  1 asmdemo.s    497 | Comment     | 11 |         |    0 | 00/63F7               | *
  903 |  1 asmdemo.s    498 | Empty       | 11 |         |    0 | 00/63F7               | Graf                                               
  904 |  1 asmdemo.s    499 | Macro       | 11 |         |    0 | 00/63F7               |                  GP_call      {1};0                
  905 |  1 asmdemo.s    499 | Code        | 11 |         |    3 | 00/63F7 : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  906 |  1 asmdemo.s    499 | Data        | 11 |         |    1 | 00/63FA : 01          |                  dfb          {1}                  ; command ID (1 byte)
  907 |  1 asmdemo.s    499 | Data        | 11 |         |    2 | 00/63FB : 00 00       |                  da           0                    ; address of parameter(s) (2 bytes), 0 if no paramter
  908 |  1 asmdemo.s    500 | Macro       | 11 |         |    0 | 00/63FD               |                  GP_call      {{{1}+1}+1};ScreenPort; Set up ScreenPort for drawing onto screen
  909 |  1 asmdemo.s    500 | Code        | 11 |         |    3 | 00/63FD : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  910 |  1 asmdemo.s    500 | Data        | 11 |         |    1 | 00/6400 : 03          |                  dfb          {{{1}+1}+1}          ; command ID (1 byte)
  911 |  1 asmdemo.s    500 | Data        | 11 |         |    2 | 00/6401 : 87 7A       |                  da           ScreenPort           ; address of parameter(s) (2 bytes), 0 if no paramter
  912 |  1 asmdemo.s    501 | Macro       | 11 |         |    0 | 00/6403               |                  GP_call      {{{{1}+1}+1}+1};ScreenPort;  set grafport to screen
  913 |  1 asmdemo.s    501 | Code        | 11 |         |    3 | 00/6403 : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  914 |  1 asmdemo.s    501 | Data        | 11 |         |    1 | 00/6406 : 04          |                  dfb          {{{{1}+1}+1}+1}      ; command ID (1 byte)
  915 |  1 asmdemo.s    501 | Data        | 11 |         |    2 | 00/6407 : 87 7A       |                  da           ScreenPort           ; address of parameter(s) (2 bytes), 0 if no paramter
  916 |  1 asmdemo.s    502 | Code        | 11 |         |    1 | 00/6409 : 18          |                  clc                               ; flag : carry on : paint white else paint black
  917 |  1 asmdemo.s    503 | Code        | 11 |         |    3 | 00/640A : 20 C1 63    |                  jsr          ClearIt              
  918 |  1 asmdemo.s    504 | Macro       | 11 |         |    0 | 00/640D               |                  GP_call      {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1};White
  919 |  1 asmdemo.s    504 | Code        | 11 |         |    3 | 00/640D : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  920 |  1 asmdemo.s    504 | Data        | 11 |         |    1 | 00/6410 : 08          |                  dfb          {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  921 |  1 asmdemo.s    504 | Data        | 11 |         |    2 | 00/6411 : B4 7A       |                  da           White                ; address of parameter(s) (2 bytes), 0 if no paramter
  922 |  1 asmdemo.s    505 | Macro       | 11 |         |    0 | 00/6413               |                  GP_call      {{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1};pensize2; large width, to "make" square pixels
  923 |  1 asmdemo.s    505 | Code        | 11 |         |    3 | 00/6413 : 20 00 40    |                  jsr          {$4000}              ; graphic primitives only entry point
  924 |  1 asmdemo.s    505 | Data        | 11 |         |    1 | 00/6416 : 0A          |                  dfb          {{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  925 |  1 asmdemo.s    505 | Data        | 11 |         |    2 | 00/6417 : 7B 7A       |                  da           pensize2             ; address of parameter(s) (2 bytes), 0 if no paramter
  926 |  1 asmdemo.s    506 | Code        | 11 |         |    1 | 00/6419 : 60          |                  rts                               
  927 |  1 asmdemo.s    507 | Comment     | 11 |         |    0 | 00/641A               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  928 |  1 asmdemo.s    508 | Comment     | 11 |         |    0 | 00/641A               | * Quit proc.
  929 |  1 asmdemo.s    509 | Empty       | 11 |         |    0 | 00/641A               | ProDOSquit                                         
  930 |  1 asmdemo.s    510 | Comment     | 11 |         |    0 | 00/641A               |                 ;GP_call SetSwitches;Switch
  931 |  1 asmdemo.s    511 | Code        | 11 |         |    3 | 00/641A : 20 00 BF    |                  jsr          $BF00                ; ProDOS Quit
  932 |  1 asmdemo.s    512 | Data        | 11 |         |    1 | 00/641D : 65          |                  dfb          $65                  
  933 |  1 asmdemo.s    513 | Data        | 11 |         |    2 | 00/641E : 7E 7A       |                  dw           QuitParams           
  934 |  1 asmdemo.s    514 | Code        | 11 |         |    1 | 00/6420 : 60          |                  rts                               
  935 |  1 asmdemo.s    515 | Comment     | 11 |         |    0 | 00/6421               | ;Switch          dfb 8
  936 |  1 asmdemo.s    516 | Empty       | 11 |         |    0 | 00/6421               |                                                    
  937 |  1 asmdemo.s    517 | Comment     | 11 |         |    0 | 00/6421               | * 
  938 |  1 asmdemo.s    518 | Comment     | 11 |         |    0 | 00/6421               | * * * * * * * * * * * * UTILITIES * * * * * * * * * * * *
  939 |  1 asmdemo.s    519 | Comment     | 11 |         |    0 | 00/6421               | *
  940 |  1 asmdemo.s    520 | Comment     | 11 |         |    0 | 00/6421               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
  941 |  1 asmdemo.s    521 | Comment     | 11 |         |    0 | 00/6421               | * Random number generator
  942 |  1 asmdemo.s    522 | Comment     | 11 |         |    0 | 00/6421               | *     
  943 |  1 asmdemo.s    523 | Data        | 11 |         |    1 | 00/6421 : 00          | R1               hex          00                   
  944 |  1 asmdemo.s    524 | Data        | 11 |         |    1 | 00/6422 : 00          | R2               hex          00                   
  945 |  1 asmdemo.s    525 | Data        | 11 |         |    1 | 00/6423 : 00          | R3               hex          00                   
  946 |  1 asmdemo.s    526 | Data        | 11 |         |    1 | 00/6424 : 00          | R4               hex          00                   
  947 |  1 asmdemo.s    527 | Comment     | 11 |         |    0 | 00/6425               | *
  948 |  1 asmdemo.s    528 | Code        | 11 |         |    3 | 00/6425 : 6E 24 64    | random           ror          R4                   ; Bit 25 to carry
  949 |  1 asmdemo.s    529 | Code        | 11 |         |    3 | 00/6428 : AD 23 64    |                  lda          R3                   ; Shift left 8 bits
  950 |  1 asmdemo.s    530 | Code        | 11 |         |    3 | 00/642B : 8D 24 64    |                  sta          R4                   
  951 |  1 asmdemo.s    531 | Code        | 11 |         |    3 | 00/642E : AD 22 64    |                  lda          R2                   
  952 |  1 asmdemo.s    532 | Code        | 11 |         |    3 | 00/6431 : 8D 23 64    |                  sta          R3                   
  953 |  1 asmdemo.s    533 | Code        | 11 |         |    3 | 00/6434 : AD 21 64    |                  lda          R1                   
  954 |  1 asmdemo.s    534 | Code        | 11 |         |    3 | 00/6437 : 8D 22 64    |                  sta          R2                   
  955 |  1 asmdemo.s    535 | Code        | 11 |         |    3 | 00/643A : AD 24 64    |                  lda          R4                   ; Get original bits 17-24
  956 |  1 asmdemo.s    536 | Code        | 11 |         |    1 | 00/643D : 6A          |                  ror                               ; Now bits 18-25 in ACC
  957 |  1 asmdemo.s    537 | Code        | 11 |         |    3 | 00/643E : 2E 21 64    |                  rol          R1                   ; R1 holds bits 1-7
  958 |  1 asmdemo.s    538 | Code        | 11 |         |    3 | 00/6441 : 4D 21 64    |                  eor          R1                   ; Seven bits at once
  959 |  1 asmdemo.s    539 | Code        | 11 |         |    3 | 00/6444 : 6E 24 64    |                  ror          R4                   ; Shift right by one bit
  960 |  1 asmdemo.s    540 | Code        | 11 |         |    3 | 00/6447 : 6E 23 64    |                  ror          R3                   
  961 |  1 asmdemo.s    541 | Code        | 11 |         |    3 | 00/644A : 6E 22 64    |                  ror          R2                   
  962 |  1 asmdemo.s    542 | Code        | 11 |         |    1 | 00/644D : 6A          |                  ror                               
  963 |  1 asmdemo.s    543 | Code        | 11 |         |    3 | 00/644E : 8D 21 64    |                  sta          R1                   
  964 |  1 asmdemo.s    544 | Code        | 11 |         |    1 | 00/6451 : 60          |                  rts                               
  965 |  1 asmdemo.s    545 | Comment     | 11 |         |    0 | 00/6452               | *
  966 |  1 asmdemo.s    546 | Comment     | 11 |         |    0 | 00/6452               | * Routine to seed the random number generator with a
  967 |  1 asmdemo.s    547 | Comment     | 11 |         |    0 | 00/6452               | * reasonable initial value:
  968 |  1 asmdemo.s    548 | Comment     | 11 |         |    0 | 00/6452               | *
  969 |  1 asmdemo.s    549 | Empty       | 11 |         |    0 | 00/6452               | initrandom                                         
  970 |  1 asmdemo.s    550 | Comment     | 11 |         |    0 | 00/6452               |         ; lda $4E      ; Seed the random number generator
  971 |  1 asmdemo.s    551 | Code        | 11 |         |    3 | 00/6452 : AD B3 64    |                  lda          rseed                
  972 |  1 asmdemo.s    552 | Code        | 11 |         |    3 | 00/6455 : 8D 21 64    |                  sta          R1                   ; based on delay between keypresses
  973 |  1 asmdemo.s    553 | Code        | 11 |         |    3 | 00/6458 : 8D 23 64    |                  sta          R3                   
  974 |  1 asmdemo.s    554 | Comment     | 11 |         |    0 | 00/645B               |         ; lda $4F
  975 |  1 asmdemo.s    555 | Code        | 11 |         |    3 | 00/645B : AD B4 64    |                  lda          rseed+1              
  976 |  1 asmdemo.s    556 | Code        | 11 |         |    3 | 00/645E : 8D 22 64    |                  sta          R2                   
  977 |  1 asmdemo.s    557 | Code        | 11 |         |    3 | 00/6461 : 8D 24 64    |                  sta          R4                   
  978 |  1 asmdemo.s    558 | Code        | 11 |         |    1 | 00/6464 : 60          |                  rts                               
  979 |  1 asmdemo.s    559 | Comment     | 11 |         |    0 | 00/6465               | *
  980 |  1 asmdemo.s    560 | Comment     | 11 |         |    0 | 00/6465               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
  981 |  1 asmdemo.s    561 | Comment     | 11 |         |    0 | 00/6465               | * print a string from stack
  982 |  1 asmdemo.s    562 | Comment     | 11 |         |    0 | 00/6465               | *
  983 |  1 asmdemo.s    563 | Empty       | 11 |         |    0 | 00/6465               | print                                              
  984 |  1 asmdemo.s    564 | Equivalence | 11 |         |    0 | 00/6465               | stack            equ          $100                 
  985 |  1 asmdemo.s    565 | Comment     | 11 |         |    0 | 00/6465               |                 ; init 
  986 |  1 asmdemo.s    566 | Code        | 11 |         |    1 | 00/6465 : BA          |                  tsx                               
  987 |  1 asmdemo.s    567 | Code        | 11 |         |    3 | 00/6466 : 8E 9E 64    |                  stx          savstack             ; save stack regiter
  988 |  1 asmdemo.s    568 | Code        | 11 |         |    1 | 00/6469 : E8          |                  inx                               
  989 |  1 asmdemo.s    569 | Code        | 11 |         |    3 | 00/646A : BD 00 01    |                  lda          {$100},x             
  990 |  1 asmdemo.s    570 | Code        | 11 |         |    2 | 00/646D : 85 06       |                  sta          {$06}                
  991 |  1 asmdemo.s    571 | Code        | 11 |         |    3 | 00/646F : BD 01 01    |                  lda          {$100}+1,x           
  992 |  1 asmdemo.s    572 | Code        | 11 |         |    2 | 00/6472 : 85 07       |                  sta          {$06}+1              
  993 |  1 asmdemo.s    573 | Empty       | 11 |         |    0 | 00/6474               |                                                    
  994 |  1 asmdemo.s    574 | Comment     | 11 |         |    0 | 00/6474               |                 ; get data and process
  995 |  1 asmdemo.s    575 | Code        | 11 |         |    2 | 00/6474 : A0 01       |                  ldy          #$01                 
  996 |  1 asmdemo.s    576 | Code        | 11 |         |    2 | 00/6476 : B1 06       |                  lda          ({$06}),y            ; get length of data
  997 |  1 asmdemo.s    577 | Code        | 11 |         |    3 | 00/6478 : 8D 9D 64    |                  sta          savlength            ; save it
  998 |  1 asmdemo.s    578 | Code        | 11 |         |    1 | 00/647B : AA          |                  tax                               ; init counter (x)
  999 |  1 asmdemo.s    579 | Code        | 11 |         |    1 | 00/647C : C8          | ozunid_2         iny                               ; next char
 1000 |  1 asmdemo.s    580 | Code        | 11 |         |    2 | 00/647D : B1 06       |                  lda          ({$06}),y            ; load char
 1001 |  1 asmdemo.s    581 | Code        | 11 |         |    3 | 00/647F : 20 ED FD    |                  jsr          {$FDED}              ; print char
 1002 |  1 asmdemo.s    582 | Code        | 11 |         |    1 | 00/6482 : CA          |                  dex                               ; dec counter
 1003 |  1 asmdemo.s    583 | Code        | 11 |         |    2 | 00/6483 : D0 F7       |                  bne          ozunid_2             
 1004 |  1 asmdemo.s    584 | Empty       | 11 |         |    0 | 00/6485               |                                                    
 1005 |  1 asmdemo.s    585 | Comment     | 11 |         |    0 | 00/6485               |                 ; restore and return
 1006 |  1 asmdemo.s    586 | Code        | 11 |         |    3 | 00/6485 : AE 9E 64    |                  ldx          savstack             ; restore stack register value
 1007 |  1 asmdemo.s    587 | Code        | 11 |         |    1 | 00/6488 : E8          |                  inx                               
 1008 |  1 asmdemo.s    588 | Code        | 11 |         |    3 | 00/6489 : BD 00 01    |                  lda          {$100},x             
 1009 |  1 asmdemo.s    589 | Code        | 11 |         |    1 | 00/648C : 38          |                  sec                               ; to take account of length byte !! (dfb :1-*-1)
 1010 |  1 asmdemo.s    590 | Code        | 11 |         |    3 | 00/648D : 6D 9D 64    |                  adc          savlength            
 1011 |  1 asmdemo.s    591 | Code        | 11 |         |    3 | 00/6490 : 9D 00 01    |                  sta          {$100},x             
 1012 |  1 asmdemo.s    592 | Code        | 11 |         |    1 | 00/6493 : E8          |                  inx                               
 1013 |  1 asmdemo.s    593 | Code        | 11 |         |    3 | 00/6494 : BD 00 01    |                  lda          {$100},x             
 1014 |  1 asmdemo.s    594 | Code        | 11 |         |    2 | 00/6497 : 69 00       |                  adc          #0                   
 1015 |  1 asmdemo.s    595 | Code        | 11 |         |    3 | 00/6499 : 9D 00 01    |                  sta          {$100},x             
 1016 |  1 asmdemo.s    596 | Code        | 11 |         |    1 | 00/649C : 60          |                  rts                               
 1017 |  1 asmdemo.s    597 | Data        | 11 |         |    1 | 00/649D : 00          | savlength        ds           1                    
 1018 |  1 asmdemo.s    598 | Data        | 11 |         |    1 | 00/649E : 00          | savstack         ds           1                    
 1019 |  1 asmdemo.s    599 | Empty       | 11 |         |    0 | 00/649F               |                                                    
 1020 |  1 asmdemo.s    600 | Comment     | 11 |         |    0 | 00/649F               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 1021 |  1 asmdemo.s    601 | Comment     | 11 |         |    0 | 00/649F               | *
 1022 |  1 asmdemo.s    602 | Empty       | 11 |         |    0 | 00/649F               | WaitForKeyPress                                    ; wait a key from user
 1023 |  1 asmdemo.s    603 | Code        | 11 |         |    3 | 00/649F : 20 DD FB    |                  jsr          {$FBDD}              ; play a sound
 1024 |  1 asmdemo.s    604 | Empty       | 11 |         |    0 | 00/64A2               |                                                    
 1025 |  1 asmdemo.s    605 | Empty       | 11 |         |    0 | 00/64A2               | Wait                                               
 1026 |  1 asmdemo.s    606 | Code        | 11 |         |    3 | 00/64A2 : EE B3 64    |                  inc          rseed                
 1027 |  1 asmdemo.s    607 | Code        | 11 |         |    2 | 00/64A5 : D0 03       |                  bne          ozunid_3             
 1028 |  1 asmdemo.s    608 | Code        | 11 |         |    3 | 00/64A7 : EE B4 64    |                  inc          rseed+1              
 1029 |  1 asmdemo.s    609 | Empty       | 11 |         |    0 | 00/64AA               | ozunid_3                                           
 1030 |  1 asmdemo.s    610 | Code        | 11 |         |    3 | 00/64AA : 2C 10 C0    |                  bit          {$C010}              ; test keybord input
 1031 |  1 asmdemo.s    611 | Code        | 11 |         |    2 | 00/64AD : 10 F3       |                  bpl          Wait                 ; loop while no key pressed
 1032 |  1 asmdemo.s    612 | Code        | 11 |         |    3 | 00/64AF : AD 00 C0    |                  lda          {$C000}              ; get key value
 1033 |  1 asmdemo.s    613 | Code        | 11 |         |    1 | 00/64B2 : 60          |                  rts                               
 1034 |  1 asmdemo.s    614 | Data        | 11 |         |    2 | 00/64B3 : 8E B7       | rseed            dw           46990                
 1035 |  1 asmdemo.s    615 | Empty       | 11 |         |    0 | 00/64B5               |                                                    
 1036 |  1 asmdemo.s    616 | Comment     | 11 |         |    0 | 00/64B5               | *
 1037 |  1 asmdemo.s    617 | Comment     | 11 |         |    0 | 00/64B5               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 1038 |  1 asmdemo.s    618 | Comment     | 11 |         |    0 | 00/64B5               | * welcome screen
 1039 |  1 asmdemo.s    619 | Empty       | 11 |         |    0 | 00/64B5               |                                                    
 1040 |  1 asmdemo.s    620 | Empty       | 11 |         |    0 | 00/64B5               | welcome                                            
 1041 |  1 asmdemo.s    621 | Macro       | 11 |         |    0 | 00/64B5               |                  cr                                
 1042 |  1 asmdemo.s    621 | Code        | 11 |         |    2 | 00/64B5 : A9 8D       |                  lda          #$8D                 
 1043 |  1 asmdemo.s    621 | Code        | 11 |         |    3 | 00/64B7 : 20 ED FD    |                  jsr          {$FDED}              
 1044 |  1 asmdemo.s    622 | Macro       | 11 |         |    0 | 00/64BA               |                  print        welc                 
 1045 |  1 asmdemo.s    622 | Code        | 11 |         |    2 | 00/64BA : A2 00       |                  ldx          #$00                 
 1046 |  1 asmdemo.s    622 | Code        | 11 |         |    3 | 00/64BC : BD 68 65    | ozunid_8         lda          welc,x               
 1047 |  1 asmdemo.s    622 | Code        | 11 |         |    2 | 00/64BF : F0 09       |                  beq          ozunid_9             
 1048 |  1 asmdemo.s    622 | Code        | 11 |         |    2 | 00/64C1 : 09 80       |                  ora          #$80                 
 1049 |  1 asmdemo.s    622 | Code        | 11 |         |    3 | 00/64C3 : 20 ED FD    |                  jsr          {$FDED}              
 1050 |  1 asmdemo.s    622 | Code        | 11 |         |    1 | 00/64C6 : E8          |                  inx                               
 1051 |  1 asmdemo.s    622 | Code        | 11 |         |    3 | 00/64C7 : 4C BC 64    |                  jmp          ozunid_8             
 1052 |  1 asmdemo.s    622 | Empty       | 11 |         |    0 | 00/64CA               | ozunid_9                                           
 1053 |  1 asmdemo.s    623 | Macro       | 11 |         |    0 | 00/64CA               |                  cr                                
 1054 |  1 asmdemo.s    623 | Code        | 11 |         |    2 | 00/64CA : A9 8D       |                  lda          #$8D                 
 1055 |  1 asmdemo.s    623 | Code        | 11 |         |    3 | 00/64CC : 20 ED FD    |                  jsr          {$FDED}              
 1056 |  1 asmdemo.s    624 | Macro       | 11 |         |    0 | 00/64CF               |                  cr                                
 1057 |  1 asmdemo.s    624 | Code        | 11 |         |    2 | 00/64CF : A9 8D       |                  lda          #$8D                 
 1058 |  1 asmdemo.s    624 | Code        | 11 |         |    3 | 00/64D1 : 20 ED FD    |                  jsr          {$FDED}              
 1059 |  1 asmdemo.s    625 | Macro       | 11 |         |    0 | 00/64D4               |                  print        instuction1          
 1060 |  1 asmdemo.s    625 | Code        | 11 |         |    2 | 00/64D4 : A2 00       |                  ldx          #$00                 
 1061 |  1 asmdemo.s    625 | Code        | 11 |         |    3 | 00/64D6 : BD 8F 65    | ozunid_10        lda          instuction1,x        
 1062 |  1 asmdemo.s    625 | Code        | 11 |         |    2 | 00/64D9 : F0 09       |                  beq          ozunid_11            
 1063 |  1 asmdemo.s    625 | Code        | 11 |         |    2 | 00/64DB : 09 80       |                  ora          #$80                 
 1064 |  1 asmdemo.s    625 | Code        | 11 |         |    3 | 00/64DD : 20 ED FD    |                  jsr          {$FDED}              
 1065 |  1 asmdemo.s    625 | Code        | 11 |         |    1 | 00/64E0 : E8          |                  inx                               
 1066 |  1 asmdemo.s    625 | Code        | 11 |         |    3 | 00/64E1 : 4C D6 64    |                  jmp          ozunid_10            
 1067 |  1 asmdemo.s    625 | Empty       | 11 |         |    0 | 00/64E4               | ozunid_11                                          
 1068 |  1 asmdemo.s    626 | Macro       | 11 |         |    0 | 00/64E4               |                  cr                                
 1069 |  1 asmdemo.s    626 | Code        | 11 |         |    2 | 00/64E4 : A9 8D       |                  lda          #$8D                 
 1070 |  1 asmdemo.s    626 | Code        | 11 |         |    3 | 00/64E6 : 20 ED FD    |                  jsr          {$FDED}              
 1071 |  1 asmdemo.s    627 | Macro       | 11 |         |    0 | 00/64E9               |                  print        instuction2          
 1072 |  1 asmdemo.s    627 | Code        | 11 |         |    2 | 00/64E9 : A2 00       |                  ldx          #$00                 
 1073 |  1 asmdemo.s    627 | Code        | 11 |         |    3 | 00/64EB : BD B4 65    | ozunid_12        lda          instuction2,x        
 1074 |  1 asmdemo.s    627 | Code        | 11 |         |    2 | 00/64EE : F0 09       |                  beq          ozunid_13            
 1075 |  1 asmdemo.s    627 | Code        | 11 |         |    2 | 00/64F0 : 09 80       |                  ora          #$80                 
 1076 |  1 asmdemo.s    627 | Code        | 11 |         |    3 | 00/64F2 : 20 ED FD    |                  jsr          {$FDED}              
 1077 |  1 asmdemo.s    627 | Code        | 11 |         |    1 | 00/64F5 : E8          |                  inx                               
 1078 |  1 asmdemo.s    627 | Code        | 11 |         |    3 | 00/64F6 : 4C EB 64    |                  jmp          ozunid_12            
 1079 |  1 asmdemo.s    627 | Empty       | 11 |         |    0 | 00/64F9               | ozunid_13                                          
 1080 |  1 asmdemo.s    628 | Macro       | 11 |         |    0 | 00/64F9               |                  cr                                
 1081 |  1 asmdemo.s    628 | Code        | 11 |         |    2 | 00/64F9 : A9 8D       |                  lda          #$8D                 
 1082 |  1 asmdemo.s    628 | Code        | 11 |         |    3 | 00/64FB : 20 ED FD    |                  jsr          {$FDED}              
 1083 |  1 asmdemo.s    629 | Macro       | 11 |         |    0 | 00/64FE               |                  print        instuction3          
 1084 |  1 asmdemo.s    629 | Code        | 11 |         |    2 | 00/64FE : A2 00       |                  ldx          #$00                 
 1085 |  1 asmdemo.s    629 | Code        | 11 |         |    3 | 00/6500 : BD DC 65    | ozunid_14        lda          instuction3,x        
 1086 |  1 asmdemo.s    629 | Code        | 11 |         |    2 | 00/6503 : F0 09       |                  beq          ozunid_15            
 1087 |  1 asmdemo.s    629 | Code        | 11 |         |    2 | 00/6505 : 09 80       |                  ora          #$80                 
 1088 |  1 asmdemo.s    629 | Code        | 11 |         |    3 | 00/6507 : 20 ED FD    |                  jsr          {$FDED}              
 1089 |  1 asmdemo.s    629 | Code        | 11 |         |    1 | 00/650A : E8          |                  inx                               
 1090 |  1 asmdemo.s    629 | Code        | 11 |         |    3 | 00/650B : 4C 00 65    |                  jmp          ozunid_14            
 1091 |  1 asmdemo.s    629 | Empty       | 11 |         |    0 | 00/650E               | ozunid_15                                          
 1092 |  1 asmdemo.s    630 | Macro       | 11 |         |    0 | 00/650E               |                  cr                                
 1093 |  1 asmdemo.s    630 | Code        | 11 |         |    2 | 00/650E : A9 8D       |                  lda          #$8D                 
 1094 |  1 asmdemo.s    630 | Code        | 11 |         |    3 | 00/6510 : 20 ED FD    |                  jsr          {$FDED}              
 1095 |  1 asmdemo.s    631 | Macro       | 11 |         |    0 | 00/6513               |                  print        instuction4          
 1096 |  1 asmdemo.s    631 | Code        | 11 |         |    2 | 00/6513 : A2 00       |                  ldx          #$00                 
 1097 |  1 asmdemo.s    631 | Code        | 11 |         |    3 | 00/6515 : BD F8 65    | ozunid_16        lda          instuction4,x        
 1098 |  1 asmdemo.s    631 | Code        | 11 |         |    2 | 00/6518 : F0 09       |                  beq          ozunid_17            
 1099 |  1 asmdemo.s    631 | Code        | 11 |         |    2 | 00/651A : 09 80       |                  ora          #$80                 
 1100 |  1 asmdemo.s    631 | Code        | 11 |         |    3 | 00/651C : 20 ED FD    |                  jsr          {$FDED}              
 1101 |  1 asmdemo.s    631 | Code        | 11 |         |    1 | 00/651F : E8          |                  inx                               
 1102 |  1 asmdemo.s    631 | Code        | 11 |         |    3 | 00/6520 : 4C 15 65    |                  jmp          ozunid_16            
 1103 |  1 asmdemo.s    631 | Empty       | 11 |         |    0 | 00/6523               | ozunid_17                                          
 1104 |  1 asmdemo.s    632 | Macro       | 11 |         |    0 | 00/6523               |                  cr                                
 1105 |  1 asmdemo.s    632 | Code        | 11 |         |    2 | 00/6523 : A9 8D       |                  lda          #$8D                 
 1106 |  1 asmdemo.s    632 | Code        | 11 |         |    3 | 00/6525 : 20 ED FD    |                  jsr          {$FDED}              
 1107 |  1 asmdemo.s    633 | Macro       | 11 |         |    0 | 00/6528               |                  print        instuction6          
 1108 |  1 asmdemo.s    633 | Code        | 11 |         |    2 | 00/6528 : A2 00       |                  ldx          #$00                 
 1109 |  1 asmdemo.s    633 | Code        | 11 |         |    3 | 00/652A : BD 44 66    | ozunid_18        lda          instuction6,x        
 1110 |  1 asmdemo.s    633 | Code        | 11 |         |    2 | 00/652D : F0 09       |                  beq          ozunid_19            
 1111 |  1 asmdemo.s    633 | Code        | 11 |         |    2 | 00/652F : 09 80       |                  ora          #$80                 
 1112 |  1 asmdemo.s    633 | Code        | 11 |         |    3 | 00/6531 : 20 ED FD    |                  jsr          {$FDED}              
 1113 |  1 asmdemo.s    633 | Code        | 11 |         |    1 | 00/6534 : E8          |                  inx                               
 1114 |  1 asmdemo.s    633 | Code        | 11 |         |    3 | 00/6535 : 4C 2A 65    |                  jmp          ozunid_18            
 1115 |  1 asmdemo.s    633 | Empty       | 11 |         |    0 | 00/6538               | ozunid_19                                          
 1116 |  1 asmdemo.s    634 | Macro       | 11 |         |    0 | 00/6538               |                  cr                                
 1117 |  1 asmdemo.s    634 | Code        | 11 |         |    2 | 00/6538 : A9 8D       |                  lda          #$8D                 
 1118 |  1 asmdemo.s    634 | Code        | 11 |         |    3 | 00/653A : 20 ED FD    |                  jsr          {$FDED}              
 1119 |  1 asmdemo.s    635 | Macro       | 11 |         |    0 | 00/653D               |                  print        instuction5          
 1120 |  1 asmdemo.s    635 | Code        | 11 |         |    2 | 00/653D : A2 00       |                  ldx          #$00                 
 1121 |  1 asmdemo.s    635 | Code        | 11 |         |    3 | 00/653F : BD 15 66    | ozunid_20        lda          instuction5,x        
 1122 |  1 asmdemo.s    635 | Code        | 11 |         |    2 | 00/6542 : F0 09       |                  beq          ozunid_21            
 1123 |  1 asmdemo.s    635 | Code        | 11 |         |    2 | 00/6544 : 09 80       |                  ora          #$80                 
 1124 |  1 asmdemo.s    635 | Code        | 11 |         |    3 | 00/6546 : 20 ED FD    |                  jsr          {$FDED}              
 1125 |  1 asmdemo.s    635 | Code        | 11 |         |    1 | 00/6549 : E8          |                  inx                               
 1126 |  1 asmdemo.s    635 | Code        | 11 |         |    3 | 00/654A : 4C 3F 65    |                  jmp          ozunid_20            
 1127 |  1 asmdemo.s    635 | Empty       | 11 |         |    0 | 00/654D               | ozunid_21                                          
 1128 |  1 asmdemo.s    636 | Macro       | 11 |         |    0 | 00/654D               |                  cr                                
 1129 |  1 asmdemo.s    636 | Code        | 11 |         |    2 | 00/654D : A9 8D       |                  lda          #$8D                 
 1130 |  1 asmdemo.s    636 | Code        | 11 |         |    3 | 00/654F : 20 ED FD    |                  jsr          {$FDED}              
 1131 |  1 asmdemo.s    637 | Macro       | 11 |         |    0 | 00/6552               |                  cr                                
 1132 |  1 asmdemo.s    637 | Code        | 11 |         |    2 | 00/6552 : A9 8D       |                  lda          #$8D                 
 1133 |  1 asmdemo.s    637 | Code        | 11 |         |    3 | 00/6554 : 20 ED FD    |                  jsr          {$FDED}              
 1134 |  1 asmdemo.s    638 | Macro       | 11 |         |    0 | 00/6557               |                  print        instuction10         
 1135 |  1 asmdemo.s    638 | Code        | 11 |         |    2 | 00/6557 : A2 00       |                  ldx          #$00                 
 1136 |  1 asmdemo.s    638 | Code        | 11 |         |    3 | 00/6559 : BD 63 66    | ozunid_22        lda          instuction10,x       
 1137 |  1 asmdemo.s    638 | Code        | 11 |         |    2 | 00/655C : F0 09       |                  beq          ozunid_23            
 1138 |  1 asmdemo.s    638 | Code        | 11 |         |    2 | 00/655E : 09 80       |                  ora          #$80                 
 1139 |  1 asmdemo.s    638 | Code        | 11 |         |    3 | 00/6560 : 20 ED FD    |                  jsr          {$FDED}              
 1140 |  1 asmdemo.s    638 | Code        | 11 |         |    1 | 00/6563 : E8          |                  inx                               
 1141 |  1 asmdemo.s    638 | Code        | 11 |         |    3 | 00/6564 : 4C 59 65    |                  jmp          ozunid_22            
 1142 |  1 asmdemo.s    638 | Empty       | 11 |         |    0 | 00/6567               | ozunid_23                                          
 1143 |  1 asmdemo.s    639 | Empty       | 11 |         |    0 | 00/6567               |                                                    
 1144 |  1 asmdemo.s    640 | Code        | 11 |         |    1 | 00/6567 : 60          |                  rts                               
 1145 |  1 asmdemo.s    641 | Empty       | 11 |         |    0 | 00/6568               |                                                    
 1146 |  1 asmdemo.s    642 | Empty       | 11 |         |    0 | 00/6568               |                                                    
 1147 |  1 asmdemo.s    643 | Data        | 11 |         |   38 | 00/6568 : A0 A0 A0 A0 | welc             asc          "     Welcome to hand drawing program !"
      |                     |             |    |         |      |           A0 D7 E5 EC |
      |                     |             |    |         |      |           E3 EF ED E5 |
      |                     |             |    |         |      |           A0 F4 EF A0 |
      |                     |             |    |         |      |           E8 E1 EE E4 |
      |                     |             |    |         |      |           A0 E4 F2 E1 |
      |                     |             |    |         |      |           F7 E9 EE E7 |
      |                     |             |    |         |      |           A0 F0 F2 EF |
      |                     |             |    |         |      |           E7 F2 E1 ED |
      |                     |             |    |         |      |           A0 A1       |
 1148 |  1 asmdemo.s    644 | Data        | 11 |         |    1 | 00/658E : 00          |                  hex          00                   
 1149 |  1 asmdemo.s    645 | Data        | 11 |         |   36 | 00/658F : AD A0 D3 AF | instuction1      asc          "- S/D to inc/dec segment # per line."
      |                     |             |    |         |      |           C4 A0 F4 EF |
      |                     |             |    |         |      |           A0 E9 EE E3 |
      |                     |             |    |         |      |           AF E4 E5 E3 |
      |                     |             |    |         |      |           A0 F3 E5 E7 |
      |                     |             |    |         |      |           ED E5 EE F4 |
      |                     |             |    |         |      |           A0 A3 A0 F0 |
      |                     |             |    |         |      |           E5 F2 A0 EC |
      |                     |             |    |         |      |           E9 EE E5 AE |
 1150 |  1 asmdemo.s    646 | Data        | 11 |         |    1 | 00/65B3 : 00          |                  hex          00                   
 1151 |  1 asmdemo.s    647 | Data        | 11 |         |   39 | 00/65B4 : AD A0 CD AF | instuction2      asc          "- M/L to inc/dec diplacement of points."
      |                     |             |    |         |      |           CC A0 F4 EF |
      |                     |             |    |         |      |           A0 E9 EE E3 |
      |                     |             |    |         |      |           AF E4 E5 E3 |
      |                     |             |    |         |      |           A0 E4 E9 F0 |
      |                     |             |    |         |      |           EC E1 E3 E5 |
      |                     |             |    |         |      |           ED E5 EE F4 |
      |                     |             |    |         |      |           A0 EF E6 A0 |
      |                     |             |    |         |      |           F0 EF E9 EE |
      |                     |             |    |         |      |           F4 F3 AE    |
 1152 |  1 asmdemo.s    648 | Data        | 11 |         |    1 | 00/65DB : 00          |                  hex          00                   
 1153 |  1 asmdemo.s    649 | Data        | 11 |         |   27 | 00/65DC : AD A0 D8 AF | instuction3      asc          "- X/W to inc/dec pen width."
      |                     |             |    |         |      |           D7 A0 F4 EF |
      |                     |             |    |         |      |           A0 E9 EE E3 |
      |                     |             |    |         |      |           AF E4 E5 E3 |
      |                     |             |    |         |      |           A0 F0 E5 EE |
      |                     |             |    |         |      |           A0 F7 E9 E4 |
      |                     |             |    |         |      |           F4 E8 AE    |
 1154 |  1 asmdemo.s    650 | Data        | 11 |         |    1 | 00/65F7 : 00          |                  hex          00                   
 1155 |  1 asmdemo.s    651 | Data        | 11 |         |   28 | 00/65F8 : AD A0 D9 AF | instuction4      asc          "- Y/U to inc/dec pen height."
      |                     |             |    |         |      |           D5 A0 F4 EF |
      |                     |             |    |         |      |           A0 E9 EE E3 |
      |                     |             |    |         |      |           AF E4 E5 E3 |
      |                     |             |    |         |      |           A0 F0 E5 EE |
      |                     |             |    |         |      |           A0 E8 E5 E9 |
      |                     |             |    |         |      |           E7 E8 F4 AE |
 1156 |  1 asmdemo.s    652 | Data        | 11 |         |    1 | 00/6614 : 00          |                  hex          00                   
 1157 |  1 asmdemo.s    653 | Data        | 11 |         |   46 | 00/6615 : AD A0 C1 EE | instuction5      asc          "- Any other key to redraw with same parameters"
      |                     |             |    |         |      |           F9 A0 EF F4 |
      |                     |             |    |         |      |           E8 E5 F2 A0 |
      |                     |             |    |         |      |           EB E5 F9 A0 |
      |                     |             |    |         |      |           F4 EF A0 F2 |
      |                     |             |    |         |      |           E5 E4 F2 E1 |
      |                     |             |    |         |      |           F7 A0 F7 E9 |
      |                     |             |    |         |      |           F4 E8 A0 F3 |
      |                     |             |    |         |      |           E1 ED E5 A0 |
      |                     |             |    |         |      |           F0 E1 F2 E1 |
      |                     |             |    |         |      |           ED E5 F4 E5 |
      |                     |             |    |         |      |           F2 F3       |
 1158 |  1 asmdemo.s    654 | Data        | 11 |         |    1 | 00/6643 : 00          |                  hex          00                   
 1159 |  1 asmdemo.s    655 | Data        | 11 |         |   30 | 00/6644 : AD A0 CF A0 | instuction6      asc          "- O to reset default parameter"
      |                     |             |    |         |      |           F4 EF A0 F2 |
      |                     |             |    |         |      |           E5 F3 E5 F4 |
      |                     |             |    |         |      |           A0 E4 E5 E6 |
      |                     |             |    |         |      |           E1 F5 EC F4 |
      |                     |             |    |         |      |           A0 F0 E1 F2 |
      |                     |             |    |         |      |           E1 ED E5 F4 |
      |                     |             |    |         |      |           E5 F2       |
 1160 |  1 asmdemo.s    656 | Data        | 11 |         |    1 | 00/6662 : 00          |                  hex          00                   
 1161 |  1 asmdemo.s    657 | Data        | 11 |         |   29 | 00/6663 : C8 E9 F4 A0 | instuction10     asc          "Hit a key to start drawing..."
      |                     |             |    |         |      |           E1 A0 EB E5 |
      |                     |             |    |         |      |           F9 A0 F4 EF |
      |                     |             |    |         |      |           A0 F3 F4 E1 |
      |                     |             |    |         |      |           F2 F4 A0 E4 |
      |                     |             |    |         |      |           F2 E1 F7 E9 |
      |                     |             |    |         |      |           EE E7 AE AE |
      |                     |             |    |         |      |           AE          |
 1162 |  1 asmdemo.s    658 | Data        | 11 |         |    1 | 00/6680 : 00          |                  hex          00                   
 1163 |  1 asmdemo.s    659 | Empty       | 11 |         |    0 | 00/6681               |                                                    
 1164 |  1 asmdemo.s    660 | Comment     | 11 |         |    0 | 00/6681               | *
 1165 |  1 asmdemo.s    661 | Comment     | 11 |         |    0 | 00/6681               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 1166 |  1 asmdemo.s    662 | Comment     | 11 |         |    0 | 00/6681               | * Librairies
 1167 |  1 asmdemo.s    663 | Directive   | 11 |         |    0 | 00/6681               |                  put          math1                ; calculting for this program
 1168 |  5   math1.s      1 | Comment     | 11 |         |    0 | 00/6681               | * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
 1169 |  5   math1.s      2 | Comment     | 11 |         |    0 | 00/6681               | * Functions :
 1170 |  5   math1.s      3 | Comment     | 11 |         |    0 | 00/6681               | * - SetDeltaXY :
 1171 |  5   math1.s      4 | Comment     | 11 |         |    0 | 00/6681               | * Set deltaX, daltaY : point2.x - point1.x, point2.y - point1.y,
 1172 |  5   math1.s      5 | Comment     | 11 |         |    0 | 00/6681               | * signX, signY  = 0 if deltaX/daltaY positve ; = 1 if deltaX/daltaY negative
 1173 |  5   math1.s      6 | Comment     | 11 |         |    0 | 00/6681               | * deltaXabs, deltaYabs : absolute value of deltaX and daltaY 
 1174 |  5   math1.s      7 | Comment     | 11 |         |    0 | 00/6681               | * deltaMax = Max(deltaXabs, deltaYabs)
 1175 |  5   math1.s      8 | Comment     | 11 |         |    0 | 00/6681               | *
 1176 |  5   math1.s      9 | Comment     | 11 |         |    0 | 00/6681               | * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
 1177 |  5   math1.s     10 | Comment     | 11 |         |    0 | 00/6681               | *
 1178 |  5   math1.s     11 | Empty       | 11 |         |    0 | 00/6681               |                                                    
 1179 |  5   math1.s     12 | Empty       | 11 |         |    0 | 00/6681               | SetDeltaXY                                         
 1180 |  5   math1.s     13 | Empty       | 11 |         |    0 | 00/6681               |                                                    
 1181 |  5   math1.s     14 | Comment     | 11 |         |    0 | 00/6681               | * 
 1182 |  5   math1.s     15 | Comment     | 11 |         |    0 | 00/6681               | * set deltaX
 1183 |  5   math1.s     16 | Code        | 11 |         |    3 | 00/6681 : AD 70 7A    |                  lda          Point2               ; deltaX = point2.x - point1.x
 1184 |  5   math1.s     17 | Code        | 11 |         |    1 | 00/6684 : 38          |                  sec                               
 1185 |  5   math1.s     18 | Code        | 11 |         |    3 | 00/6685 : ED 6C 7A    |                  sbc          Point1               
 1186 |  5   math1.s     19 | Code        | 11 |         |    3 | 00/6688 : 8D 4A 72    |                  sta          deltaX               
 1187 |  5   math1.s     20 | Code        | 11 |         |    3 | 00/668B : AD 71 7A    |                  lda          Point2+1             
 1188 |  5   math1.s     21 | Code        | 11 |         |    3 | 00/668E : ED 6D 7A    |                  sbc          Point1+1             ; high byte of Point2.x - Point1.x in A
 1189 |  5   math1.s     22 | Code        | 11 |         |    3 | 00/6691 : 8D 4B 72    |                  sta          deltaX+1             
 1190 |  5   math1.s     23 | Comment     | 11 |         |    0 | 00/6694               |                 ;printm deltaX                   ; debug
 1191 |  5   math1.s     24 | Comment     | 11 |         |    0 | 00/6694               | * set signX 
 1192 |  5   math1.s     25 | Code        | 11 |         |    2 | 00/6694 : A9 00       |                  lda          #0                   
 1193 |  5   math1.s     26 | Code        | 11 |         |    3 | 00/6696 : 8D 5C 72    |                  sta          signX                
 1194 |  5   math1.s     27 | Code        | 11 |         |    3 | 00/6699 : AD 4B 72    |                  lda          deltaX+1             
 1195 |  5   math1.s     28 | Code        | 11 |         |    2 | 00/669C : 29 80       |                  and          #$80                 
 1196 |  5   math1.s     29 | Code        | 11 |         |    2 | 00/669E : F0 03       |                  beq          ozunid_4             
 1197 |  5   math1.s     30 | Code        | 11 |         |    3 | 00/66A0 : EE 5C 72    |                  inc          signX                
 1198 |  5   math1.s     31 | Empty       | 11 |         |    0 | 00/66A3               | ozunid_4                                           
 1199 |  5   math1.s     32 | Comment     | 11 |         |    0 | 00/66A3               | * set deltaY
 1200 |  5   math1.s     33 | Code        | 11 |         |    3 | 00/66A3 : AD 72 7A    |                  lda          Point2+2             ; point2.y - point1.y = deltaY
 1201 |  5   math1.s     34 | Code        | 11 |         |    1 | 00/66A6 : 38          |                  sec                               
 1202 |  5   math1.s     35 | Code        | 11 |         |    3 | 00/66A7 : ED 6E 7A    |                  sbc          Point1+2             
 1203 |  5   math1.s     36 | Code        | 11 |         |    3 | 00/66AA : 8D 4C 72    |                  sta          deltaY               
 1204 |  5   math1.s     37 | Code        | 11 |         |    3 | 00/66AD : AD 73 7A    |                  lda          Point2+3             
 1205 |  5   math1.s     38 | Code        | 11 |         |    3 | 00/66B0 : ED 6F 7A    |                  sbc          Point1+3             ; high byte of Point2.x - Point1.x in Y
 1206 |  5   math1.s     39 | Code        | 11 |         |    3 | 00/66B3 : 8D 4D 72    |                  sta          deltaY+1             
 1207 |  5   math1.s     40 | Comment     | 11 |         |    0 | 00/66B6               |                 ;printm deltaY                   ; debug
 1208 |  5   math1.s     41 | Comment     | 11 |         |    0 | 00/66B6               | * set signY
 1209 |  5   math1.s     42 | Code        | 11 |         |    2 | 00/66B6 : A9 00       |                  lda          #0                   
 1210 |  5   math1.s     43 | Code        | 11 |         |    3 | 00/66B8 : 8D 5D 72    |                  sta          signY                
 1211 |  5   math1.s     44 | Code        | 11 |         |    3 | 00/66BB : AD 4D 72    |                  lda          deltaY+1             
 1212 |  5   math1.s     45 | Code        | 11 |         |    2 | 00/66BE : 29 80       |                  and          #$80                 
 1213 |  5   math1.s     46 | Code        | 11 |         |    2 | 00/66C0 : F0 03       |                  beq          ozunid_5             
 1214 |  5   math1.s     47 | Code        | 11 |         |    3 | 00/66C2 : EE 5D 72    |                  inc          signY                
 1215 |  5   math1.s     48 | Empty       | 11 |         |    0 | 00/66C5               | ozunid_5                                           
 1216 |  5   math1.s     49 | Comment     | 11 |         |    0 | 00/66C5               |                 ;printm signX                    ; debug (print signX and signY)
 1217 |  5   math1.s     50 | Empty       | 11 |         |    0 | 00/66C5               |                                                    
 1218 |  5   math1.s     51 | Comment     | 11 |         |    0 | 00/66C5               | * set |deltaX| in deltaXabs var
 1219 |  5   math1.s     52 | Code        | 11 |         |    3 | 00/66C5 : AD 4A 72    |                  lda          deltaX               ; init deltaXabs
 1220 |  5   math1.s     53 | Code        | 11 |         |    3 | 00/66C8 : 8D 4E 72    |                  sta          deltaXabs            
 1221 |  5   math1.s     54 | Code        | 11 |         |    3 | 00/66CB : AD 4B 72    |                  lda          deltaX+1             
 1222 |  5   math1.s     55 | Code        | 11 |         |    3 | 00/66CE : 8D 4F 72    |                  sta          deltaXabs+1          
 1223 |  5   math1.s     56 | Empty       | 11 |         |    0 | 00/66D1               |                                                    
 1224 |  5   math1.s     57 | Code        | 11 |         |    2 | 00/66D1 : 29 80       |                  and          #$80                 ; deltaX positive ?
 1225 |  5   math1.s     58 | Code        | 11 |         |    2 | 00/66D3 : F0 21       |                  beq          dxpos                ; yes : jump over
 1226 |  5   math1.s     59 | Comment     | 11 |         |    0 | 00/66D5               |                 ; two's complement 
 1227 |  5   math1.s     60 | Code        | 11 |         |    3 | 00/66D5 : AD 4A 72    |                  lda          deltaX               ; no : get |deltaX|
 1228 |  5   math1.s     61 | Code        | 11 |         |    2 | 00/66D8 : 49 FF       |                  eor          #$FF                 
 1229 |  5   math1.s     62 | Code        | 11 |         |    3 | 00/66DA : 8D 4E 72    |                  sta          deltaXabs            
 1230 |  5   math1.s     63 | Code        | 11 |         |    3 | 00/66DD : AD 4B 72    |                  lda          deltaX+1             
 1231 |  5   math1.s     64 | Code        | 11 |         |    2 | 00/66E0 : 49 FF       |                  eor          #$FF                 
 1232 |  5   math1.s     65 | Code        | 11 |         |    3 | 00/66E2 : 8D 4F 72    |                  sta          deltaXabs+1          
 1233 |  5   math1.s     66 | Code        | 11 |         |    3 | 00/66E5 : AD 4E 72    |                  lda          deltaXabs            
 1234 |  5   math1.s     67 | Code        | 11 |         |    1 | 00/66E8 : 18          |                  clc                               
 1235 |  5   math1.s     68 | Code        | 11 |         |    2 | 00/66E9 : 69 01       |                  adc          #1                   
 1236 |  5   math1.s     69 | Code        | 11 |         |    3 | 00/66EB : 8D 4E 72    |                  sta          deltaXabs            
 1237 |  5   math1.s     70 | Code        | 11 |         |    3 | 00/66EE : AD 4F 72    |                  lda          deltaXabs+1          
 1238 |  5   math1.s     71 | Code        | 11 |         |    2 | 00/66F1 : 69 00       |                  adc          #0                   
 1239 |  5   math1.s     72 | Code        | 11 |         |    3 | 00/66F3 : 8D 4F 72    |                  sta          deltaXabs+1          
 1240 |  5   math1.s     73 | Empty       | 11 |         |    0 | 00/66F6               | dxpos                                              
 1241 |  5   math1.s     74 | Macro       | 11 |         |    0 | 00/66F6               |                  cr                                
 1242 |  5   math1.s     74 | Code        | 11 |         |    2 | 00/66F6 : A9 8D       |                  lda          #$8D                 
 1243 |  5   math1.s     74 | Code        | 11 |         |    3 | 00/66F8 : 20 ED FD    |                  jsr          {$FDED}              
 1244 |  5   math1.s     75 | Comment     | 11 |         |    0 | 00/66FB               |                 ;printm deltaXabs                 ; debug 
 1245 |  5   math1.s     76 | Empty       | 11 |         |    0 | 00/66FB               |                                                    
 1246 |  5   math1.s     77 | Comment     | 11 |         |    0 | 00/66FB               | * set |deltaX| in deltaYabs var
 1247 |  5   math1.s     78 | Code        | 11 |         |    3 | 00/66FB : AD 4C 72    |                  lda          deltaY               ; init deltaYabs
 1248 |  5   math1.s     79 | Code        | 11 |         |    3 | 00/66FE : 8D 50 72    |                  sta          deltaYabs            
 1249 |  5   math1.s     80 | Code        | 11 |         |    3 | 00/6701 : AD 4D 72    |                  lda          deltaY+1             
 1250 |  5   math1.s     81 | Code        | 11 |         |    3 | 00/6704 : 8D 51 72    |                  sta          deltaYabs+1          
 1251 |  5   math1.s     82 | Empty       | 11 |         |    0 | 00/6707               |                                                    
 1252 |  5   math1.s     83 | Code        | 11 |         |    2 | 00/6707 : 29 80       |                  and          #$80                 ; deltaY positive ?
 1253 |  5   math1.s     84 | Code        | 11 |         |    2 | 00/6709 : F0 21       |                  beq          dypos                ; yes : jump over
 1254 |  5   math1.s     85 | Comment     | 11 |         |    0 | 00/670B               |                 ; two's complement 
 1255 |  5   math1.s     86 | Code        | 11 |         |    3 | 00/670B : AD 4C 72    |                  lda          deltaY               ; no : get |deltaY|
 1256 |  5   math1.s     87 | Code        | 11 |         |    2 | 00/670E : 49 FF       |                  eor          #$FF                 
 1257 |  5   math1.s     88 | Code        | 11 |         |    3 | 00/6710 : 8D 50 72    |                  sta          deltaYabs            
 1258 |  5   math1.s     89 | Code        | 11 |         |    3 | 00/6713 : AD 4D 72    |                  lda          deltaY+1             
 1259 |  5   math1.s     90 | Code        | 11 |         |    2 | 00/6716 : 49 FF       |                  eor          #$FF                 
 1260 |  5   math1.s     91 | Code        | 11 |         |    3 | 00/6718 : 8D 51 72    |                  sta          deltaYabs+1          
 1261 |  5   math1.s     92 | Code        | 11 |         |    3 | 00/671B : AD 50 72    |                  lda          deltaYabs            
 1262 |  5   math1.s     93 | Code        | 11 |         |    1 | 00/671E : 18          |                  clc                               
 1263 |  5   math1.s     94 | Code        | 11 |         |    2 | 00/671F : 69 01       |                  adc          #1                   
 1264 |  5   math1.s     95 | Code        | 11 |         |    3 | 00/6721 : 8D 50 72    |                  sta          deltaYabs            
 1265 |  5   math1.s     96 | Code        | 11 |         |    3 | 00/6724 : AD 51 72    |                  lda          deltaYabs+1          
 1266 |  5   math1.s     97 | Code        | 11 |         |    2 | 00/6727 : 69 00       |                  adc          #0                   
 1267 |  5   math1.s     98 | Code        | 11 |         |    3 | 00/6729 : 8D 51 72    |                  sta          deltaYabs+1          
 1268 |  5   math1.s     99 | Empty       | 11 |         |    0 | 00/672C               | dypos                                              
 1269 |  5   math1.s    100 | Comment     | 11 |         |    0 | 00/672C               |                 ;printm deltaYabs                 ; debug 
 1270 |  5   math1.s    101 | Empty       | 11 |         |    0 | 00/672C               |                                                    
 1271 |  5   math1.s    102 | Comment     | 11 |         |    0 | 00/672C               | * Set max(daltaXabs,deltaYabs)
 1272 |  5   math1.s    103 | Empty       | 11 |         |    0 | 00/672C               |                                                    
 1273 |  5   math1.s    104 | Macro       | 11 |         |    0 | 00/672C               |                  DoCompare16  deltaXabs;deltaYabs;cmp16
 1274 |  5   math1.s    104 | Code        | 11 |         |    3 | 00/672C : AD 4F 72    |                  lda          deltaXabs+1          ; number 1 on stack
 1275 |  5   math1.s    104 | Code        | 11 |         |    1 | 00/672F : 48          |                  pha                               
 1276 |  5   math1.s    104 | Code        | 11 |         |    3 | 00/6730 : AD 4E 72    |                  lda          deltaXabs            
 1277 |  5   math1.s    104 | Code        | 11 |         |    1 | 00/6733 : 48          |                  pha                               
 1278 |  5   math1.s    104 | Code        | 11 |         |    3 | 00/6734 : AD 51 72    |                  lda          deltaYabs+1          ; number 2 on stack
 1279 |  5   math1.s    104 | Code        | 11 |         |    1 | 00/6737 : 48          |                  pha                               
 1280 |  5   math1.s    104 | Code        | 11 |         |    3 | 00/6738 : AD 50 72    |                  lda          deltaYabs            
 1281 |  5   math1.s    104 | Code        | 11 |         |    1 | 00/673B : 48          |                  pha                               
 1282 |  5   math1.s    104 | Code        | 11 |         |    3 | 00/673C : 20 05 68    |                  jsr          cmp16                ; compare routine (works for signed or unsigned numbers)
 1283 |  5   math1.s    105 | Code        | 11 |         |    2 | 00/673F : F0 16       |                  beq          isegal               
 1284 |  5   math1.s    106 | Code        | 11 |         |    2 | 00/6741 : B0 28       |                  bcs          isbigger             
 1285 |  5   math1.s    107 | Empty       | 11 |         |    0 | 00/6743               |                                                    
 1286 |  5   math1.s    108 | Empty       | 11 |         |    0 | 00/6743               | issmaller                                          
 1287 |  5   math1.s    109 | Comment     | 11 |         |    0 | 00/6743               |                 ;jsr print                       ; debug
 1288 |  5   math1.s    110 | Comment     | 11 |         |    0 | 00/6743               |                 ;dfb :1-*-1
 1289 |  5   math1.s    111 | Comment     | 11 |         |    0 | 00/6743               |                 ;asc "SMALLER"
 1290 |  5   math1.s    112 | Code        | 11 |         |    3 | 00/6743 : AD 50 72    | ozunid_6         lda          deltaYabs            
 1291 |  5   math1.s    113 | Code        | 11 |         |    3 | 00/6746 : 8D 52 72    |                  sta          deltaMax             
 1292 |  5   math1.s    114 | Code        | 11 |         |    3 | 00/6749 : AD 51 72    |                  lda          deltaYabs+1          
 1293 |  5   math1.s    115 | Code        | 11 |         |    3 | 00/674C : 8D 53 72    |                  sta          deltaMax+1           
 1294 |  5   math1.s    116 | Empty       | 11 |         |    0 | 00/674F               |                                                    
 1295 |  5   math1.s    117 | Code        | 11 |         |    2 | 00/674F : A9 01       |                  lda          #1                   ; flag to indicate line is rather vertical
 1296 |  5   math1.s    118 | Code        | 11 |         |    3 | 00/6751 : 8D 6B 7A    |                  sta          VertFlag             
 1297 |  5   math1.s    119 | Empty       | 11 |         |    0 | 00/6754               |                                                    
 1298 |  5   math1.s    120 | Code        | 11 |         |    3 | 00/6754 : 4C 7C 67    |                  jmp          prnMax               
 1299 |  5   math1.s    121 | Empty       | 11 |         |    0 | 00/6757               |                                                    
 1300 |  5   math1.s    122 | Empty       | 11 |         |    0 | 00/6757               | isegal                                             
 1301 |  5   math1.s    123 | Comment     | 11 |         |    0 | 00/6757               |                 ;jsr print                       ; debug
 1302 |  5   math1.s    124 | Comment     | 11 |         |    0 | 00/6757               |                 ;dfb :2-*-1
 1303 |  5   math1.s    125 | Comment     | 11 |         |    0 | 00/6757               |                 ;asc "EGAL"
 1304 |  5   math1.s    126 | Code        | 11 |         |    3 | 00/6757 : AD 50 72    | ozunid_7         lda          deltaYabs            ; or deltaXabs (=)
 1305 |  5   math1.s    127 | Code        | 11 |         |    3 | 00/675A : 8D 52 72    |                  sta          deltaMax             
 1306 |  5   math1.s    128 | Code        | 11 |         |    3 | 00/675D : AD 51 72    |                  lda          deltaYabs+1          
 1307 |  5   math1.s    129 | Code        | 11 |         |    3 | 00/6760 : 8D 53 72    |                  sta          deltaMax+1           
 1308 |  5   math1.s    130 | Empty       | 11 |         |    0 | 00/6763               |                                                    
 1309 |  5   math1.s    131 | Code        | 11 |         |    2 | 00/6763 : A9 01       |                  lda          #1                   ; flag to indicate line is rather vertical
 1310 |  5   math1.s    132 | Code        | 11 |         |    3 | 00/6765 : 8D 6B 7A    |                  sta          VertFlag             ; although deltaX=deltaY, but Apple II pixels are "vertical"
 1311 |  5   math1.s    133 | Empty       | 11 |         |    0 | 00/6768               |                                                    
 1312 |  5   math1.s    134 | Code        | 11 |         |    3 | 00/6768 : 4C 7C 67    |                  jmp          prnMax               
 1313 |  5   math1.s    135 | Empty       | 11 |         |    0 | 00/676B               |                                                    
 1314 |  5   math1.s    136 | Empty       | 11 |         |    0 | 00/676B               | isbigger                                           
 1315 |  5   math1.s    137 | Comment     | 11 |         |    0 | 00/676B               |                 ;jsr print                       ; debug 
 1316 |  5   math1.s    138 | Comment     | 11 |         |    0 | 00/676B               |                 ;dfb :3-*-1
 1317 |  5   math1.s    139 | Comment     | 11 |         |    0 | 00/676B               |                 ;asc "BIGGER"
 1318 |  5   math1.s    140 | Code        | 11 |         |    3 | 00/676B : AD 4E 72    | _3               lda          deltaXabs            
 1319 |  5   math1.s    141 | Code        | 11 |         |    3 | 00/676E : 8D 52 72    |                  sta          deltaMax             
 1320 |  5   math1.s    142 | Code        | 11 |         |    3 | 00/6771 : AD 4F 72    |                  lda          deltaXabs+1          
 1321 |  5   math1.s    143 | Code        | 11 |         |    3 | 00/6774 : 8D 53 72    |                  sta          deltaMax+1           
 1322 |  5   math1.s    144 | Empty       | 11 |         |    0 | 00/6777               |                                                    
 1323 |  5   math1.s    145 | Code        | 11 |         |    2 | 00/6777 : A9 00       |                  lda          #0                   ; flag to indicate line is not vertical (rather horizontal)
 1324 |  5   math1.s    146 | Code        | 11 |         |    3 | 00/6779 : 8D 6B 7A    |                  sta          VertFlag             
 1325 |  5   math1.s    147 | Empty       | 11 |         |    0 | 00/677C               |                                                    
 1326 |  5   math1.s    148 | Empty       | 11 |         |    0 | 00/677C               | prnMax                                             
 1327 |  5   math1.s    149 | Macro       | 11 |         |    0 | 00/677C               |                  cr                                
 1328 |  5   math1.s    149 | Code        | 11 |         |    2 | 00/677C : A9 8D       |                  lda          #$8D                 
 1329 |  5   math1.s    149 | Code        | 11 |         |    3 | 00/677E : 20 ED FD    |                  jsr          {$FDED}              
 1330 |  5   math1.s    150 | Comment     | 11 |         |    0 | 00/6781               |                 ;printm deltaMax                 ; debug
 1331 |  5   math1.s    151 | Code        | 11 |         |    1 | 00/6781 : 60          |                  rts                               
 1332 |  5   math1.s    152 | Empty       | 11 |         |    0 | 00/6782               |                                                    
 1333 |  5   math1.s    153 | Empty       | 11 |         |    0 | 00/6782               |                                                    
 1334 |  5   math1.s    154 | Empty       | 11 |         |    0 | 00/6782               |                                                    
 1335 |  5   math1.s    155 | Empty       | 11 |         |    0 | 00/6782               |                                                    
 1336 |  1 asmdemo.s    664 | Directive   | 11 |         |    0 | 00/6782               |                  put          math2                ; division using fixed point functions
 1337 |  6   math2.s      1 | Comment     | 11 |         |    0 | 00/6782               | * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
 1338 |  6   math2.s      2 | Comment     | 11 |         |    0 | 00/6782               | * Functions :
 1339 |  6   math2.s      3 | Comment     | 11 |         |    0 | 00/6782               | * - Set SetNpPt :
 1340 |  6   math2.s      4 | Comment     | 11 |         |    0 | 00/6782               | *       ==> Calculate number of points : divide DeltaMax by seglength (constant)
 1341 |  6   math2.s      5 | Comment     | 11 |         |    0 | 00/6782               | * - SetInc :
 1342 |  6   math2.s      6 | Comment     | 11 |         |    0 | 00/6782               | *       ==> Calculate increment in X and Y directions.
 1343 |  6   math2.s      7 | Comment     | 11 |         |    0 | 00/6782               | *       uses a new version of div16, with fixed point (16 bit integer part + 16 bit decimal part )
 1344 |  6   math2.s      8 | Comment     | 11 |         |    0 | 00/6782               | * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
 1345 |  6   math2.s      9 | Empty       | 11 |         |    0 | 00/6782               |                                                    
 1346 |  6   math2.s     10 | Empty       | 11 |         |    0 | 00/6782               | SetNpPt                                            
 1347 |  6   math2.s     11 | Comment     | 11 |         |    0 | 00/6782               | * Calculate number of points : divide DeltaMax by seglength (constant)
 1348 |  6   math2.s     12 | Empty       | 11 |         |    0 | 00/6782               |                                                    
 1349 |  6   math2.s     13 | Empty       | 11 |         |    0 | 00/6782               |                                                    
 1350 |  6   math2.s     14 | Macro       | 11 |         |    0 | 00/6782               |                  DoDivid16    deltaMax;seglength;div16
 1351 |  6   math2.s     14 | Code        | 11 |         |    3 | 00/6782 : AD 53 72    |                  lda          deltaMax+1           ; dividend on stack
 1352 |  6   math2.s     14 | Code        | 11 |         |    1 | 00/6785 : 48          |                  pha                               
 1353 |  6   math2.s     14 | Code        | 11 |         |    3 | 00/6786 : AD 52 72    |                  lda          deltaMax             
 1354 |  6   math2.s     14 | Code        | 11 |         |    1 | 00/6789 : 48          |                  pha                               
 1355 |  6   math2.s     14 | Code        | 11 |         |    3 | 00/678A : AD 7A 7A    |                  lda          seglength+1          ; divisor on stack
 1356 |  6   math2.s     14 | Code        | 11 |         |    1 | 00/678D : 48          |                  pha                               
 1357 |  6   math2.s     14 | Code        | 11 |         |    3 | 00/678E : AD 79 7A    |                  lda          seglength            
 1358 |  6   math2.s     14 | Code        | 11 |         |    1 | 00/6791 : 48          |                  pha                               
 1359 |  6   math2.s     14 | Code        | 11 |         |    3 | 00/6792 : 20 4A 68    |                  jsr          div16                ; call division routine
 1360 |  6   math2.s     15 | Macro       | 11 |         |    0 | 00/6795               |                  movInt       dividend;nbpt        ; sav number of points
 1361 |  6   math2.s     15 | Code        | 11 |         |    3 | 00/6795 : AD 6F 69    |                  lda          dividend             
 1362 |  6   math2.s     15 | Code        | 11 |         |    3 | 00/6798 : 8D 66 7A    |                  sta          nbpt                 
 1363 |  6   math2.s     15 | Code        | 11 |         |    3 | 00/679B : AD 70 69    |                  lda          dividend+1           
 1364 |  6   math2.s     15 | Code        | 11 |         |    3 | 00/679E : 8D 67 7A    |                  sta          nbpt+1               
 1365 |  6   math2.s     16 | Macro       | 11 |         |    0 | 00/67A1               |                  movInt       dividend;savnbpt     ; in 2 vars.
 1366 |  6   math2.s     16 | Code        | 11 |         |    3 | 00/67A1 : AD 6F 69    |                  lda          dividend             
 1367 |  6   math2.s     16 | Code        | 11 |         |    3 | 00/67A4 : 8D 68 7A    |                  sta          savnbpt              
 1368 |  6   math2.s     16 | Code        | 11 |         |    3 | 00/67A7 : AD 70 69    |                  lda          dividend+1           
 1369 |  6   math2.s     16 | Code        | 11 |         |    3 | 00/67AA : 8D 69 7A    |                  sta          savnbpt+1            
 1370 |  6   math2.s     17 | Code        | 11 |         |    1 | 00/67AD : 60          |                  rts                               
 1371 |  6   math2.s     18 | Empty       | 11 |         |    0 | 00/67AE               |                                                    
 1372 |  6   math2.s     19 | Empty       | 11 |         |    0 | 00/67AE               | SetInc                                             
 1373 |  6   math2.s     20 | Comment     | 11 |         |    0 | 00/67AE               | * Calculate increment fox X and Y : divide deltaXabs and deltaYabs by number of points.
 1374 |  6   math2.s     21 | Comment     | 11 |         |    0 | 00/67AE               | * DecimalX and DecimmalY calculate decimal part of above division :
 1375 |  6   math2.s     22 | Comment     | 11 |         |    0 | 00/67AE               | *  ===> ALGO <===
 1376 |  6   math2.s     23 | Comment     | 11 |         |    0 | 00/67AE               | * remainder = remaider * 2 ; if remaider < divisor (=nbpt) then shift left XincDec (and YincDec repectively)
 1377 |  6   math2.s     24 | Comment     | 11 |         |    0 | 00/67AE               | * with carry clear and loop (unless already 16 loops)
 1378 |  6   math2.s     25 | Comment     | 11 |         |    0 | 00/67AE               | * if remaider >= divisor (=nbpt) then shift left XincDec (and YincDec repectively)
 1379 |  6   math2.s     26 | Comment     | 11 |         |    0 | 00/67AE               | * with carry set and loop (unless already 16 loops)
 1380 |  6   math2.s     27 | Empty       | 11 |         |    0 | 00/67AE               |                                                    
 1381 |  6   math2.s     28 | Empty       | 11 |         |    0 | 00/67AE               | DoX                                                
 1382 |  6   math2.s     29 | Macro       | 11 |         |    0 | 00/67AE               |                  DoDivid16    deltaXabs;nbpt;div16dec
 1383 |  6   math2.s     29 | Code        | 11 |         |    3 | 00/67AE : AD 4F 72    |                  lda          deltaXabs+1          ; dividend on stack
 1384 |  6   math2.s     29 | Code        | 11 |         |    1 | 00/67B1 : 48          |                  pha                               
 1385 |  6   math2.s     29 | Code        | 11 |         |    3 | 00/67B2 : AD 4E 72    |                  lda          deltaXabs            
 1386 |  6   math2.s     29 | Code        | 11 |         |    1 | 00/67B5 : 48          |                  pha                               
 1387 |  6   math2.s     29 | Code        | 11 |         |    3 | 00/67B6 : AD 67 7A    |                  lda          nbpt+1               ; divisor on stack
 1388 |  6   math2.s     29 | Code        | 11 |         |    1 | 00/67B9 : 48          |                  pha                               
 1389 |  6   math2.s     29 | Code        | 11 |         |    3 | 00/67BA : AD 66 7A    |                  lda          nbpt                 
 1390 |  6   math2.s     29 | Code        | 11 |         |    1 | 00/67BD : 48          |                  pha                               
 1391 |  6   math2.s     29 | Code        | 11 |         |    3 | 00/67BE : 20 9D 68    |                  jsr          div16dec             ; call division routine
 1392 |  6   math2.s     30 | Macro       | 11 |         |    0 | 00/67C1               |                  movInt       dividend;Xinc        ; integer part
 1393 |  6   math2.s     30 | Code        | 11 |         |    3 | 00/67C1 : AD 6F 69    |                  lda          dividend             
 1394 |  6   math2.s     30 | Code        | 11 |         |    3 | 00/67C4 : 8D 60 72    |                  sta          Xinc                 
 1395 |  6   math2.s     30 | Code        | 11 |         |    3 | 00/67C7 : AD 70 69    |                  lda          dividend+1           
 1396 |  6   math2.s     30 | Code        | 11 |         |    3 | 00/67CA : 8D 61 72    |                  sta          Xinc+1               
 1397 |  6   math2.s     31 | Macro       | 11 |         |    0 | 00/67CD               |                  movInt       decimal;XincDec      ; decimal part
 1398 |  6   math2.s     31 | Code        | 11 |         |    3 | 00/67CD : AD 6D 69    |                  lda          decimal              
 1399 |  6   math2.s     31 | Code        | 11 |         |    3 | 00/67D0 : 8D 5E 72    |                  sta          XincDec              
 1400 |  6   math2.s     31 | Code        | 11 |         |    3 | 00/67D3 : AD 6E 69    |                  lda          decimal+1            
 1401 |  6   math2.s     31 | Code        | 11 |         |    3 | 00/67D6 : 8D 5F 72    |                  sta          XincDec+1            
 1402 |  6   math2.s     32 | Empty       | 11 |         |    0 | 00/67D9               |                                                    
 1403 |  6   math2.s     33 | Comment     | 11 |         |    0 | 00/67D9               |                 ;cr
 1404 |  6   math2.s     34 | Comment     | 11 |         |    0 | 00/67D9               |                 ;printm deltaXabs                        ; = dividend
 1405 |  6   math2.s     35 | Comment     | 11 |         |    0 | 00/67D9               |                 ;printm nbpt                             ; = divisor
 1406 |  6   math2.s     36 | Comment     | 11 |         |    0 | 00/67D9               |                 ;printm dividend                         ; result of division (integer part)
 1407 |  6   math2.s     37 | Comment     | 11 |         |    0 | 00/67D9               |                 ;printm XincDec                          ; result of division (decimal part)    
 1408 |  6   math2.s     38 | Empty       | 11 |         |    0 | 00/67D9               |                                                    
 1409 |  6   math2.s     39 | Empty       | 11 |         |    0 | 00/67D9               | DoY                                                
 1410 |  6   math2.s     40 | Macro       | 11 |         |    0 | 00/67D9               |                  DoDivid16    deltaYabs;nbpt;div16dec
 1411 |  6   math2.s     40 | Code        | 11 |         |    3 | 00/67D9 : AD 51 72    |                  lda          deltaYabs+1          ; dividend on stack
 1412 |  6   math2.s     40 | Code        | 11 |         |    1 | 00/67DC : 48          |                  pha                               
 1413 |  6   math2.s     40 | Code        | 11 |         |    3 | 00/67DD : AD 50 72    |                  lda          deltaYabs            
 1414 |  6   math2.s     40 | Code        | 11 |         |    1 | 00/67E0 : 48          |                  pha                               
 1415 |  6   math2.s     40 | Code        | 11 |         |    3 | 00/67E1 : AD 67 7A    |                  lda          nbpt+1               ; divisor on stack
 1416 |  6   math2.s     40 | Code        | 11 |         |    1 | 00/67E4 : 48          |                  pha                               
 1417 |  6   math2.s     40 | Code        | 11 |         |    3 | 00/67E5 : AD 66 7A    |                  lda          nbpt                 
 1418 |  6   math2.s     40 | Code        | 11 |         |    1 | 00/67E8 : 48          |                  pha                               
 1419 |  6   math2.s     40 | Code        | 11 |         |    3 | 00/67E9 : 20 9D 68    |                  jsr          div16dec             ; call division routine
 1420 |  6   math2.s     41 | Macro       | 11 |         |    0 | 00/67EC               |                  movInt       dividend;Yinc        ; integer part
 1421 |  6   math2.s     41 | Code        | 11 |         |    3 | 00/67EC : AD 6F 69    |                  lda          dividend             
 1422 |  6   math2.s     41 | Code        | 11 |         |    3 | 00/67EF : 8D 64 72    |                  sta          Yinc                 
 1423 |  6   math2.s     41 | Code        | 11 |         |    3 | 00/67F2 : AD 70 69    |                  lda          dividend+1           
 1424 |  6   math2.s     41 | Code        | 11 |         |    3 | 00/67F5 : 8D 65 72    |                  sta          Yinc+1               
 1425 |  6   math2.s     42 | Macro       | 11 |         |    0 | 00/67F8               |                  movInt       decimal;YincDec      ; decimal part
 1426 |  6   math2.s     42 | Code        | 11 |         |    3 | 00/67F8 : AD 6D 69    |                  lda          decimal              
 1427 |  6   math2.s     42 | Code        | 11 |         |    3 | 00/67FB : 8D 62 72    |                  sta          YincDec              
 1428 |  6   math2.s     42 | Code        | 11 |         |    3 | 00/67FE : AD 6E 69    |                  lda          decimal+1            
 1429 |  6   math2.s     42 | Code        | 11 |         |    3 | 00/6801 : 8D 63 72    |                  sta          YincDec+1            
 1430 |  6   math2.s     43 | Comment     | 11 |         |    0 | 00/6804               |                 ;cr
 1431 |  6   math2.s     44 | Comment     | 11 |         |    0 | 00/6804               |                 ;printm deltaYabs                        ; = dividend
 1432 |  6   math2.s     45 | Comment     | 11 |         |    0 | 00/6804               |                 ;printm nbpt                             ; = divisor
 1433 |  6   math2.s     46 | Comment     | 11 |         |    0 | 00/6804               |                 ;printm dividend                         ; result of division (integer part)
 1434 |  6   math2.s     47 | Comment     | 11 |         |    0 | 00/6804               |                 ;printm YincDec                          ; result of division (decimal part)               
 1435 |  6   math2.s     48 | Empty       | 11 |         |    0 | 00/6804               |                                                    
 1436 |  6   math2.s     49 | Code        | 11 |         |    1 | 00/6804 : 60          | endinc           rts                               
 1437 |  6   math2.s     50 | Empty       | 11 |         |    0 | 00/6805               |                                                    
 1438 |  6   math2.s     51 | Empty       | 11 |         |    0 | 00/6805               |                                                    
 1439 |  6   math2.s     52 | Empty       | 11 |         |    0 | 00/6805               |                                                    
 1440 |  6   math2.s     53 | Comment     | 11 |         |    0 | 00/6805               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 1441 |  6   math2.s     54 | Empty       | 11 |         |    0 | 00/6805               |                                                    
 1442 |  1 asmdemo.s    665 | Directive   | 11 |         |    0 | 00/6805               |                  put          fpdlib               ; my fixed point library
 1443 |  7  fpdlib.s      1 | Comment     | 11 |         |    0 | 00/6805               | * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 1444 |  7  fpdlib.s      2 | Comment     | 11 |         |    0 | 00/6805               | *                                     Fixed point division                                      *
 1445 |  7  fpdlib.s      3 | Comment     | 11 |         |    0 | 00/6805               | * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 1446 |  7  fpdlib.s      4 | Comment     | 11 |         |    0 | 00/6805               | * Functions :                                                                                   *
 1447 |  7  fpdlib.s      5 | Comment     | 11 |         |    0 | 00/6805               |                                                                                                 * 
 1448 |  7  fpdlib.s      6 | Comment     | 11 |         |    0 | 00/6805               | * 1/ cmp16 : Compares two 16 bits values, passed on the stack.                                  *
 1449 |  7  fpdlib.s      7 | Comment     | 11 |         |    0 | 00/6805               | * 2/ div16 : Divides two 16 bits values, passed on the stack (standard 16 bits division).       * 
 1450 |  7  fpdlib.s      8 | Comment     | 11 |         |    0 | 00/6805               | *         Result in dividend var (16 bits), remainder in rem var (16 bit).                      * 
 1451 |  7  fpdlib.s      9 | Comment     | 11 |         |    0 | 00/6805               | * 3/ div16dec : Divides two 16 bits values, passed on the stack                                 *                                     
 1452 |  7  fpdlib.s     10 | Comment     | 11 |         |    0 | 00/6805               | *            Result :                                                                           *
 1453 |  7  fpdlib.s     11 | Comment     | 11 |         |    0 | 00/6805               | *               - integer part in dividend var (16 bit).                                        *
 1454 |  7  fpdlib.s     12 | Comment     | 11 |         |    0 | 00/6805               | *               - decimal part in decimal var (16 bit).                                         *
 1455 |  7  fpdlib.s     13 | Comment     | 11 |         |    0 | 00/6805               | * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 1456 |  7  fpdlib.s     14 | Empty       | 11 |         |    0 | 00/6805               |                                                    
 1457 |  7  fpdlib.s     15 | Comment     | 11 |         |    0 | 00/6805               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 1458 |  7  fpdlib.s     16 | Empty       | 11 |         |    0 | 00/6805               | cmp16                                              
 1459 |  7  fpdlib.s     17 | Comment     | 11 |         |    0 | 00/6805               | * ref : 6502_Assembly_Language_Subroutines.pdf
 1460 |  7  fpdlib.s     18 | Comment     | 11 |         |    0 | 00/6805               | * IN : 
 1461 |  7  fpdlib.s     19 | Comment     | 11 |         |    0 | 00/6805               |         ;return address ; subtrahend ; minuend
 1462 |  7  fpdlib.s     20 | Comment     | 11 |         |    0 | 00/6805               | * OUT :
 1463 |  7  fpdlib.s     21 | Comment     | 11 |         |    0 | 00/6805               |         ; C=1 : first number pushed on the stack is bigger
 1464 |  7  fpdlib.s     22 | Comment     | 11 |         |    0 | 00/6805               |         ; C=0 : second number pushed on the stack is bigger
 1465 |  7  fpdlib.s     23 | Empty       | 11 |         |    0 | 00/6805               |                                                    
 1466 |  7  fpdlib.s     24 | Comment     | 11 |         |    0 | 00/6805               |         ;Flags set as if subtrahend had been subtracted from minuend, with a correction if
 1467 |  7  fpdlib.s     25 | Comment     | 11 |         |    0 | 00/6805               |         ;two's complement overflow occurred.
 1468 |  7  fpdlib.s     26 | Comment     | 11 |         |    0 | 00/6805               |         ;Zero flag = 1 if subtrahend and minuend are equal, 0 if they are not equal.
 1469 |  7  fpdlib.s     27 | Comment     | 11 |         |    0 | 00/6805               |         ;Carry flag = 0 if subtrahend is larger than minuend in the unsigned sense, 1 if it is less
 1470 |  7  fpdlib.s     28 | Comment     | 11 |         |    0 | 00/6805               |         ;than or equal to the minuend.
 1471 |  7  fpdlib.s     29 | Comment     | 11 |         |    0 | 00/6805               |         ;Negative flag = 1 if subtrahend is larger than minuend in the signed sense, 0 if it is less
 1472 |  7  fpdlib.s     30 | Comment     | 11 |         |    0 | 00/6805               |         ;than or equal to the minuend. This flag is corrected if two's complement overflow occurs.
 1473 |  7  fpdlib.s     31 | Comment     | 11 |         |    0 | 00/6805               |                         ;save the return address
 1474 |  7  fpdlib.s     32 | Code        | 11 |         |    1 | 00/6805 : 68          |                  pla                               
 1475 |  7  fpdlib.s     33 | Code        | 11 |         |    3 | 00/6806 : 8D 21 68    |                  sta          ret2+1               
 1476 |  7  fpdlib.s     34 | Code        | 11 |         |    1 | 00/6809 : 68          |                  pla                               
 1477 |  7  fpdlib.s     35 | Code        | 11 |         |    3 | 00/680A : 8D 1E 68    |                  sta          ret+1                
 1478 |  7  fpdlib.s     36 | Comment     | 11 |         |    0 | 00/680D               |                 ;get op1
 1479 |  7  fpdlib.s     37 | Code        | 11 |         |    1 | 00/680D : 68          |                  pla                               
 1480 |  7  fpdlib.s     38 | Code        | 11 |         |    3 | 00/680E : 8D 46 68    |                  sta          op1                  
 1481 |  7  fpdlib.s     39 | Code        | 11 |         |    1 | 00/6811 : 68          |                  pla                               
 1482 |  7  fpdlib.s     40 | Code        | 11 |         |    3 | 00/6812 : 8D 47 68    |                  sta          op1+1                
 1483 |  7  fpdlib.s     41 | Comment     | 11 |         |    0 | 00/6815               |                 ;get op2
 1484 |  7  fpdlib.s     42 | Code        | 11 |         |    1 | 00/6815 : 68          |                  pla                               
 1485 |  7  fpdlib.s     43 | Code        | 11 |         |    3 | 00/6816 : 8D 48 68    |                  sta          op2                  
 1486 |  7  fpdlib.s     44 | Code        | 11 |         |    1 | 00/6819 : 68          |                  pla                               
 1487 |  7  fpdlib.s     45 | Code        | 11 |         |    3 | 00/681A : 8D 49 68    |                  sta          op2+1                
 1488 |  7  fpdlib.s     46 | Comment     | 11 |         |    0 | 00/681D               |                 ;restore return address
 1489 |  7  fpdlib.s     47 | Code        | 11 |         |    2 | 00/681D : A9 00       | ret              lda          #0                   
 1490 |  7  fpdlib.s     48 | Code        | 11 |         |    1 | 00/681F : 48          |                  pha                               
 1491 |  7  fpdlib.s     49 | Code        | 11 |         |    2 | 00/6820 : A9 00       | ret2             lda          #0                   
 1492 |  7  fpdlib.s     50 | Code        | 11 |         |    1 | 00/6822 : 48          |                  pha                               
 1493 |  7  fpdlib.s     51 | Empty       | 11 |         |    0 | 00/6823               |                                                    
 1494 |  7  fpdlib.s     52 | Code        | 11 |         |    3 | 00/6823 : AD 48 68    |                  lda          op2                  
 1495 |  7  fpdlib.s     53 | Code        | 11 |         |    3 | 00/6826 : CD 46 68    |                  cmp          op1                  ;compare low bytes
 1496 |  7  fpdlib.s     54 | Code        | 11 |         |    2 | 00/6829 : F0 0B       |                  beq          equalcmp             ;branch if they are equal
 1497 |  7  fpdlib.s     55 | Comment     | 11 |         |    0 | 00/682B               |                 ;low bytes are not equal - compare high bytes
 1498 |  7  fpdlib.s     56 | Code        | 11 |         |    3 | 00/682B : AD 49 68    |                  lda          op2+1                
 1499 |  7  fpdlib.s     57 | Code        | 11 |         |    3 | 00/682E : ED 47 68    |                  sbc          op1+1                ;compare high bytes
 1500 |  7  fpdlib.s     58 | Code        | 11 |         |    2 | 00/6831 : 09 01       |                  ora          #1                   ;make z = 0, since low bytes are not equal
 1501 |  7  fpdlib.s     59 | Code        | 11 |         |    2 | 00/6833 : 70 0A       |                  bvs          ovflow               ;must handle overflow for signed arithmatic
 1502 |  7  fpdlib.s     60 | Code        | 11 |         |    1 | 00/6835 : 60          |                  rts                               ;exit
 1503 |  7  fpdlib.s     61 | Comment     | 11 |         |    0 | 00/6836               |                 ;low bytes are equal - compare high bytes
 1504 |  7  fpdlib.s     62 | Empty       | 11 |         |    0 | 00/6836               | equalcmp                                           
 1505 |  7  fpdlib.s     63 | Code        | 11 |         |    3 | 00/6836 : AD 49 68    |                  lda          op2+1                
 1506 |  7  fpdlib.s     64 | Code        | 11 |         |    3 | 00/6839 : ED 47 68    |                  sbc          op1+1                ;upper bytes
 1507 |  7  fpdlib.s     65 | Code        | 11 |         |    2 | 00/683C : 70 01       |                  bvs          ovflow               ;must handle overflow for signed arithmetic
 1508 |  7  fpdlib.s     66 | Code        | 11 |         |    1 | 00/683E : 60          |                  rts                               ;return with flags set
 1509 |  7  fpdlib.s     67 | Comment     | 11 |         |    0 | 00/683F               |                 ;overflow with signed arithmetic so complement the negative flag
 1510 |  7  fpdlib.s     68 | Comment     | 11 |         |    0 | 00/683F               |                 ; do not change the carry flag and make the zero flag equal 0.
 1511 |  7  fpdlib.s     69 | Comment     | 11 |         |    0 | 00/683F               |                 ; complement negative flag by exclusive-oring 80h and accumulator.
 1512 |  7  fpdlib.s     70 | Empty       | 11 |         |    0 | 00/683F               | ovflow                                             
 1513 |  7  fpdlib.s     71 | Code        | 11 |         |    2 | 00/683F : 49 80       |                  eor          #$80                 ;complement negative flag
 1514 |  7  fpdlib.s     72 | Code        | 11 |         |    2 | 00/6841 : 09 01       |                  ora          #1                   ;if overflow then the words are not equal z=0
 1515 |  7  fpdlib.s     73 | Comment     | 11 |         |    0 | 00/6843               |                 ;carry unchanged
 1516 |  7  fpdlib.s     74 | Code        | 11 |         |    1 | 00/6843 : 60          |                  rts                               
 1517 |  7  fpdlib.s     75 | Empty       | 11 |         |    0 | 00/6844               |                                                    
 1518 |  7  fpdlib.s     76 | Data        | 11 |         |    2 | 00/6844 : 00 00       | retadrcmp        ds           2                    
 1519 |  7  fpdlib.s     77 | Data        | 11 |         |    2 | 00/6846 : 00 00       | op1              ds           2                    
 1520 |  7  fpdlib.s     78 | Data        | 11 |         |    2 | 00/6848 : 00 00       | op2              ds           2                    
 1521 |  7  fpdlib.s     79 | Comment     | 11 |         |    0 | 00/684A               | *
 1522 |  7  fpdlib.s     80 | Comment     | 11 |         |    0 | 00/684A               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 1523 |  7  fpdlib.s     81 | Comment     | 11 |         |    0 | 00/684A               | * division 16 bits V2
 1524 |  7  fpdlib.s     82 | Comment     | 11 |         |    0 | 00/684A               | * ref : 6502_Assembly_Language_Subroutines.pdf
 1525 |  7  fpdlib.s     83 | Comment     | 11 |         |    0 | 00/684A               | *
 1526 |  7  fpdlib.s     84 | Empty       | 11 |         |    0 | 00/684A               | div16                                              
 1527 |  7  fpdlib.s     85 | Comment     | 11 |         |    0 | 00/684A               |                 ;save return address
 1528 |  7  fpdlib.s     86 | Code        | 11 |         |    1 | 00/684A : 68          |                  pla                               
 1529 |  7  fpdlib.s     87 | Code        | 11 |         |    3 | 00/684B : 8D 73 69    |                  sta          retadr               
 1530 |  7  fpdlib.s     88 | Code        | 11 |         |    1 | 00/684E : 68          |                  pla                               
 1531 |  7  fpdlib.s     89 | Code        | 11 |         |    3 | 00/684F : 8D 74 69    |                  sta          retadr+1             
 1532 |  7  fpdlib.s     90 | Comment     | 11 |         |    0 | 00/6852               |                 ;get divisor
 1533 |  7  fpdlib.s     91 | Code        | 11 |         |    1 | 00/6852 : 68          |                  pla                               
 1534 |  7  fpdlib.s     92 | Code        | 11 |         |    3 | 00/6853 : 8D 71 69    |                  sta          divisor              
 1535 |  7  fpdlib.s     93 | Code        | 11 |         |    1 | 00/6856 : 68          |                  pla                               
 1536 |  7  fpdlib.s     94 | Code        | 11 |         |    3 | 00/6857 : 8D 72 69    |                  sta          divisor+1            
 1537 |  7  fpdlib.s     95 | Comment     | 11 |         |    0 | 00/685A               |                 ;get dividend
 1538 |  7  fpdlib.s     96 | Code        | 11 |         |    1 | 00/685A : 68          |                  pla                               
 1539 |  7  fpdlib.s     97 | Code        | 11 |         |    3 | 00/685B : 8D 6F 69    |                  sta          dividend             
 1540 |  7  fpdlib.s     98 | Code        | 11 |         |    1 | 00/685E : 68          |                  pla                               
 1541 |  7  fpdlib.s     99 | Code        | 11 |         |    3 | 00/685F : 8D 70 69    |                  sta          dividend+1           
 1542 |  7  fpdlib.s    100 | Empty       | 11 |         |    0 | 00/6862               |                                                    
 1543 |  7  fpdlib.s    101 | Comment     | 11 |         |    0 | 00/6862               |                 ;restore return address
 1544 |  7  fpdlib.s    102 | Code        | 11 |         |    3 | 00/6862 : AD 74 69    |                  lda          retadr+1             
 1545 |  7  fpdlib.s    103 | Code        | 11 |         |    1 | 00/6865 : 48          |                  pha                               
 1546 |  7  fpdlib.s    104 | Code        | 11 |         |    3 | 00/6866 : AD 73 69    |                  lda          retadr               
 1547 |  7  fpdlib.s    105 | Code        | 11 |         |    1 | 00/6869 : 48          |                  pha                               
 1548 |  7  fpdlib.s    106 | Empty       | 11 |         |    0 | 00/686A               |                                                    
 1549 |  7  fpdlib.s    107 | Comment     | 11 |         |    0 | 00/686A               | * perform division
 1550 |  7  fpdlib.s    108 | Code        | 11 |         |    2 | 00/686A : A9 00       |                  lda          #0                   ;initialize rem to 0
 1551 |  7  fpdlib.s    109 | Code        | 11 |         |    3 | 00/686C : 8D 6B 69    |                  sta          rem                  
 1552 |  7  fpdlib.s    110 | Code        | 11 |         |    3 | 00/686F : 8D 6C 69    |                  sta          rem+1                
 1553 |  7  fpdlib.s    111 | Code        | 11 |         |    2 | 00/6872 : A2 10       |                  ldx          #16                  ;there are 16 bits in dividend
 1554 |  7  fpdlib.s    112 | Code        | 11 |         |    3 | 00/6874 : 0E 6F 69    | l1               asl          dividend             ;shift hi bit of dividend into rem
 1555 |  7  fpdlib.s    113 | Code        | 11 |         |    3 | 00/6877 : 2E 70 69    |                  rol          dividend+1           ;(vacating the lo bit, which will be used for the quotient)
 1556 |  7  fpdlib.s    114 | Code        | 11 |         |    3 | 00/687A : 2E 6B 69    |                  rol          rem                  
 1557 |  7  fpdlib.s    115 | Code        | 11 |         |    3 | 00/687D : 2E 6C 69    |                  rol          rem+1                
 1558 |  7  fpdlib.s    116 | Code        | 11 |         |    3 | 00/6880 : AD 6B 69    |                  lda          rem                  
 1559 |  7  fpdlib.s    117 | Code        | 11 |         |    1 | 00/6883 : 38          |                  sec                               ;trial subtraction
 1560 |  7  fpdlib.s    118 | Code        | 11 |         |    3 | 00/6884 : ED 71 69    |                  sbc          divisor              
 1561 |  7  fpdlib.s    119 | Code        | 11 |         |    1 | 00/6887 : A8          |                  tay                               
 1562 |  7  fpdlib.s    120 | Code        | 11 |         |    3 | 00/6888 : AD 6C 69    |                  lda          rem+1                
 1563 |  7  fpdlib.s    121 | Code        | 11 |         |    3 | 00/688B : ED 72 69    |                  sbc          divisor+1            
 1564 |  7  fpdlib.s    122 | Code        | 11 |         |    2 | 00/688E : 90 09       |                  bcc          l2                   ;did subtraction succeed?
 1565 |  7  fpdlib.s    123 | Code        | 11 |         |    3 | 00/6890 : 8D 6C 69    |                  sta          rem+1                ;if yes, save it
 1566 |  7  fpdlib.s    124 | Code        | 11 |         |    3 | 00/6893 : 8C 6B 69    |                  sty          rem                  
 1567 |  7  fpdlib.s    125 | Code        | 11 |         |    3 | 00/6896 : EE 6F 69    |                  inc          dividend             ;and record a 1 in the quotient
 1568 |  7  fpdlib.s    126 | Code        | 11 |         |    1 | 00/6899 : CA          | l2               dex                               
 1569 |  7  fpdlib.s    127 | Code        | 11 |         |    2 | 00/689A : D0 D8       |                  bne          l1                   
 1570 |  7  fpdlib.s    128 | Code        | 11 |         |    1 | 00/689C : 60          |                  rts                               
 1571 |  7  fpdlib.s    129 | Comment     | 11 |         |    0 | 00/689D               | *
 1572 |  7  fpdlib.s    130 | Comment     | 11 |         |    0 | 00/689D               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 1573 |  7  fpdlib.s    131 | Comment     | 11 |         |    0 | 00/689D               | * division 16 bit + decimal
 1574 |  7  fpdlib.s    132 | Comment     | 11 |         |    0 | 00/689D               | *
 1575 |  7  fpdlib.s    133 | Empty       | 11 |         |    0 | 00/689D               | div16dec                                           
 1576 |  7  fpdlib.s    134 | Comment     | 11 |         |    0 | 00/689D               |                 ;save return address
 1577 |  7  fpdlib.s    135 | Code        | 11 |         |    1 | 00/689D : 68          |                  pla                               
 1578 |  7  fpdlib.s    136 | Code        | 11 |         |    3 | 00/689E : 8D 73 69    |                  sta          retadr               
 1579 |  7  fpdlib.s    137 | Code        | 11 |         |    1 | 00/68A1 : 68          |                  pla                               
 1580 |  7  fpdlib.s    138 | Code        | 11 |         |    3 | 00/68A2 : 8D 74 69    |                  sta          retadr+1             
 1581 |  7  fpdlib.s    139 | Empty       | 11 |         |    0 | 00/68A5               |                                                    
 1582 |  7  fpdlib.s    140 | Comment     | 11 |         |    0 | 00/68A5               |                 ;get divisor
 1583 |  7  fpdlib.s    141 | Code        | 11 |         |    1 | 00/68A5 : 68          |                  pla                               
 1584 |  7  fpdlib.s    142 | Code        | 11 |         |    3 | 00/68A6 : 8D 71 69    |                  sta          divisor              
 1585 |  7  fpdlib.s    143 | Code        | 11 |         |    1 | 00/68A9 : 68          |                  pla                               
 1586 |  7  fpdlib.s    144 | Code        | 11 |         |    3 | 00/68AA : 8D 72 69    |                  sta          divisor+1            
 1587 |  7  fpdlib.s    145 | Comment     | 11 |         |    0 | 00/68AD               |                 ;get dividend
 1588 |  7  fpdlib.s    146 | Code        | 11 |         |    1 | 00/68AD : 68          |                  pla                               
 1589 |  7  fpdlib.s    147 | Code        | 11 |         |    3 | 00/68AE : 8D 6F 69    |                  sta          dividend             
 1590 |  7  fpdlib.s    148 | Code        | 11 |         |    1 | 00/68B1 : 68          |                  pla                               
 1591 |  7  fpdlib.s    149 | Code        | 11 |         |    3 | 00/68B2 : 8D 70 69    |                  sta          dividend+1           
 1592 |  7  fpdlib.s    150 | Empty       | 11 |         |    0 | 00/68B5               |                                                    
 1593 |  7  fpdlib.s    151 | Comment     | 11 |         |    0 | 00/68B5               |                 ;restore return address
 1594 |  7  fpdlib.s    152 | Code        | 11 |         |    3 | 00/68B5 : AD 74 69    |                  lda          retadr+1             
 1595 |  7  fpdlib.s    153 | Code        | 11 |         |    1 | 00/68B8 : 48          |                  pha                               
 1596 |  7  fpdlib.s    154 | Code        | 11 |         |    3 | 00/68B9 : AD 73 69    |                  lda          retadr               
 1597 |  7  fpdlib.s    155 | Code        | 11 |         |    1 | 00/68BC : 48          |                  pha                               
 1598 |  7  fpdlib.s    156 | Empty       | 11 |         |    0 | 00/68BD               |                                                    
 1599 |  7  fpdlib.s    157 | Comment     | 11 |         |    0 | 00/68BD               | * perform division, integer part
 1600 |  7  fpdlib.s    158 | Code        | 11 |         |    2 | 00/68BD : A9 00       |                  lda          #0                   ;initialize rem to 0
 1601 |  7  fpdlib.s    159 | Code        | 11 |         |    3 | 00/68BF : 8D 6B 69    |                  sta          rem                  
 1602 |  7  fpdlib.s    160 | Code        | 11 |         |    3 | 00/68C2 : 8D 6C 69    |                  sta          rem+1                
 1603 |  7  fpdlib.s    161 | Code        | 11 |         |    2 | 00/68C5 : A2 10       |                  ldx          #16                  ;there are 16 bits in dividend
 1604 |  7  fpdlib.s    162 | Code        | 11 |         |    3 | 00/68C7 : 0E 6F 69    | l11              asl          dividend             ;shift hi bit of dividend into rem
 1605 |  7  fpdlib.s    163 | Code        | 11 |         |    3 | 00/68CA : 2E 70 69    |                  rol          dividend+1           ;(vacating the lo bit, which will be used for the quotient)
 1606 |  7  fpdlib.s    164 | Code        | 11 |         |    3 | 00/68CD : 2E 6B 69    |                  rol          rem                  
 1607 |  7  fpdlib.s    165 | Code        | 11 |         |    3 | 00/68D0 : 2E 6C 69    |                  rol          rem+1                
 1608 |  7  fpdlib.s    166 | Code        | 11 |         |    3 | 00/68D3 : AD 6B 69    |                  lda          rem                  
 1609 |  7  fpdlib.s    167 | Code        | 11 |         |    1 | 00/68D6 : 38          |                  sec                               ;trial subtraction
 1610 |  7  fpdlib.s    168 | Code        | 11 |         |    3 | 00/68D7 : ED 71 69    |                  sbc          divisor              
 1611 |  7  fpdlib.s    169 | Code        | 11 |         |    1 | 00/68DA : A8          |                  tay                               
 1612 |  7  fpdlib.s    170 | Code        | 11 |         |    3 | 00/68DB : AD 6C 69    |                  lda          rem+1                
 1613 |  7  fpdlib.s    171 | Code        | 11 |         |    3 | 00/68DE : ED 72 69    |                  sbc          divisor+1            
 1614 |  7  fpdlib.s    172 | Code        | 11 |         |    2 | 00/68E1 : 90 09       |                  bcc          l22                  ;did subtraction succeed?
 1615 |  7  fpdlib.s    173 | Code        | 11 |         |    3 | 00/68E3 : 8D 6C 69    |                  sta          rem+1                ;if yes, save it
 1616 |  7  fpdlib.s    174 | Code        | 11 |         |    3 | 00/68E6 : 8C 6B 69    |                  sty          rem                  
 1617 |  7  fpdlib.s    175 | Code        | 11 |         |    3 | 00/68E9 : EE 6F 69    |                  inc          dividend             ;and record a 1 in the quotient
 1618 |  7  fpdlib.s    176 | Code        | 11 |         |    1 | 00/68EC : CA          | l22              dex                               
 1619 |  7  fpdlib.s    177 | Code        | 11 |         |    2 | 00/68ED : D0 D8       |                  bne          l11                  
 1620 |  7  fpdlib.s    178 | Empty       | 11 |         |    0 | 00/68EF               |                                                    
 1621 |  7  fpdlib.s    179 | Comment     | 11 |         |    0 | 00/68EF               | * now decimal part
 1622 |  7  fpdlib.s    180 | Comment     | 11 |         |    0 | 00/68EF               | *
 1623 |  7  fpdlib.s    181 | Code        | 11 |         |    2 | 00/68EF : A9 00       |                  lda          #0                   ; init decimal part to 0
 1624 |  7  fpdlib.s    182 | Code        | 11 |         |    3 | 00/68F1 : 8D 6D 69    |                  sta          decimal              
 1625 |  7  fpdlib.s    183 | Code        | 11 |         |    3 | 00/68F4 : 8D 6E 69    |                  sta          decimal+1            
 1626 |  7  fpdlib.s    184 | Empty       | 11 |         |    0 | 00/68F7               |                                                    
 1627 |  7  fpdlib.s    185 | Code        | 11 |         |    3 | 00/68F7 : AD 6B 69    |                  lda          rem                  ; test remainder
 1628 |  7  fpdlib.s    186 | Code        | 11 |         |    3 | 00/68FA : 0D 6C 69    |                  ora          rem+1                ; if remainder = 0 : exit
 1629 |  7  fpdlib.s    187 | Code        | 11 |         |    2 | 00/68FD : F0 1B       |                  beq          endec                
 1630 |  7  fpdlib.s    188 | Empty       | 11 |         |    0 | 00/68FF               |                                                    
 1631 |  7  fpdlib.s    189 | Macro       | 11 |         |    0 | 00/68FF               |                  movInt       dividend;tempo       ; save result (integer part)
 1632 |  7  fpdlib.s    189 | Code        | 11 |         |    3 | 00/68FF : AD 6F 69    |                  lda          dividend             
 1633 |  7  fpdlib.s    189 | Code        | 11 |         |    3 | 00/6902 : 8D 76 69    |                  sta          tempo                
 1634 |  7  fpdlib.s    189 | Code        | 11 |         |    3 | 00/6905 : AD 70 69    |                  lda          dividend+1           
 1635 |  7  fpdlib.s    189 | Code        | 11 |         |    3 | 00/6908 : 8D 77 69    |                  sta          tempo+1              
 1636 |  7  fpdlib.s    190 | Code        | 11 |         |    3 | 00/690B : 20 1B 69    |                  jsr          Decimal              ; calculate decimal part
 1637 |  7  fpdlib.s    191 | Macro       | 11 |         |    0 | 00/690E               |                  movInt       tempo;dividend       ; restore result (integer part)
 1638 |  7  fpdlib.s    191 | Code        | 11 |         |    3 | 00/690E : AD 76 69    |                  lda          tempo                
 1639 |  7  fpdlib.s    191 | Code        | 11 |         |    3 | 00/6911 : 8D 6F 69    |                  sta          dividend             
 1640 |  7  fpdlib.s    191 | Code        | 11 |         |    3 | 00/6914 : AD 77 69    |                  lda          tempo+1              
 1641 |  7  fpdlib.s    191 | Code        | 11 |         |    3 | 00/6917 : 8D 70 69    |                  sta          dividend+1           
 1642 |  7  fpdlib.s    192 | Empty       | 11 |         |    0 | 00/691A               |                                                    
 1643 |  7  fpdlib.s    193 | Code        | 11 |         |    1 | 00/691A : 60          | endec            rts                               
 1644 |  7  fpdlib.s    194 | Comment     | 11 |         |    0 | 00/691B               | * 
 1645 |  7  fpdlib.s    195 | Comment     | 11 |         |    0 | 00/691B               | *
 1646 |  7  fpdlib.s    196 | Empty       | 11 |         |    0 | 00/691B               | Decimal                                            ; calcute decimal part
 1647 |  7  fpdlib.s    197 | Comment     | 11 |         |    0 | 00/691B               | * ALGO :
 1648 |  7  fpdlib.s    198 | Comment     | 11 |         |    0 | 00/691B               | * remainder = remainder * 2 ; 
 1649 |  7  fpdlib.s    199 | Comment     | 11 |         |    0 | 00/691B               | * if remainder < divisor then shift left decimal var with carry clear and loop (unless already 16 loops)
 1650 |  7  fpdlib.s    200 | Comment     | 11 |         |    0 | 00/691B               | * if remainder >= divisor then shift left decimal var with carry set,
 1651 |  7  fpdlib.s    201 | Comment     | 11 |         |    0 | 00/691B               | * divide remainder by divisor and loop (unless already 16 loops)
 1652 |  7  fpdlib.s    202 | Comment     | 11 |         |    0 | 00/691B               | *
 1653 |  7  fpdlib.s    203 | Code        | 11 |         |    2 | 00/691B : A9 10       |                  lda          #16                  ; init loop counter
 1654 |  7  fpdlib.s    204 | Code        | 11 |         |    3 | 00/691D : 8D 75 69    |                  sta          loopcnt              
 1655 |  7  fpdlib.s    205 | Empty       | 11 |         |    0 | 00/6920               |                                                    
 1656 |  7  fpdlib.s    206 | Code        | 11 |         |    3 | 00/6920 : 0E 6B 69    | restart          asl          rem                  ; remainder x 2
 1657 |  7  fpdlib.s    207 | Code        | 11 |         |    3 | 00/6923 : 2E 6C 69    |                  rol          rem+1                
 1658 |  7  fpdlib.s    208 | Macro       | 11 |         |    0 | 00/6926               |                  DoCompare16  rem;divisor;cmp16    ; compare with divisor
 1659 |  7  fpdlib.s    208 | Code        | 11 |         |    3 | 00/6926 : AD 6C 69    |                  lda          rem+1                ; number 1 on stack
 1660 |  7  fpdlib.s    208 | Code        | 11 |         |    1 | 00/6929 : 48          |                  pha                               
 1661 |  7  fpdlib.s    208 | Code        | 11 |         |    3 | 00/692A : AD 6B 69    |                  lda          rem                  
 1662 |  7  fpdlib.s    208 | Code        | 11 |         |    1 | 00/692D : 48          |                  pha                               
 1663 |  7  fpdlib.s    208 | Code        | 11 |         |    3 | 00/692E : AD 72 69    |                  lda          divisor+1            ; number 2 on stack
 1664 |  7  fpdlib.s    208 | Code        | 11 |         |    1 | 00/6931 : 48          |                  pha                               
 1665 |  7  fpdlib.s    208 | Code        | 11 |         |    3 | 00/6932 : AD 71 69    |                  lda          divisor              
 1666 |  7  fpdlib.s    208 | Code        | 11 |         |    1 | 00/6935 : 48          |                  pha                               
 1667 |  7  fpdlib.s    208 | Code        | 11 |         |    3 | 00/6936 : 20 05 68    |                  jsr          cmp16                ; compare routine (works for signed or unsigned numbers)
 1668 |  7  fpdlib.s    209 | Code        | 11 |         |    2 | 00/6939 : F0 10       |                  beq          equal                
 1669 |  7  fpdlib.s    210 | Code        | 11 |         |    2 | 00/693B : B0 0E       |                  bcs          bigger               ; branch if equal or bigger
 1670 |  7  fpdlib.s    211 | Code        | 11 |         |    1 | 00/693D : 18          |                  clc                               
 1671 |  7  fpdlib.s    212 | Code        | 11 |         |    3 | 00/693E : 2E 6D 69    |                  rol          decimal              ; else shift left decimal with carry clear
 1672 |  7  fpdlib.s    213 | Code        | 11 |         |    3 | 00/6941 : 2E 6E 69    |                  rol          decimal+1            
 1673 |  7  fpdlib.s    214 | Code        | 11 |         |    3 | 00/6944 : CE 75 69    |                  dec          loopcnt              ; loop if not 16 loops
 1674 |  7  fpdlib.s    215 | Code        | 11 |         |    2 | 00/6947 : F0 21       |                  beq          endfunc              
 1675 |  7  fpdlib.s    216 | Code        | 11 |         |    2 | 00/6949 : D0 D5       |                  bne          restart              
 1676 |  7  fpdlib.s    217 | Empty       | 11 |         |    0 | 00/694B               | equal                                              
 1677 |  7  fpdlib.s    218 | Empty       | 11 |         |    0 | 00/694B               | bigger                                             
 1678 |  7  fpdlib.s    219 | Code        | 11 |         |    1 | 00/694B : 38          |                  sec                               ; here if remainder >= divisor.
 1679 |  7  fpdlib.s    220 | Code        | 11 |         |    3 | 00/694C : 2E 6D 69    |                  rol          decimal              ; rol decimal with carry set
 1680 |  7  fpdlib.s    221 | Code        | 11 |         |    3 | 00/694F : 2E 6E 69    |                  rol          decimal+1            
 1681 |  7  fpdlib.s    222 | Macro       | 11 |         |    0 | 00/6952               |                  DoDivid16    rem;divisor;div16    ; divide again to get a new remainder
 1682 |  7  fpdlib.s    222 | Code        | 11 |         |    3 | 00/6952 : AD 6C 69    |                  lda          rem+1                ; dividend on stack
 1683 |  7  fpdlib.s    222 | Code        | 11 |         |    1 | 00/6955 : 48          |                  pha                               
 1684 |  7  fpdlib.s    222 | Code        | 11 |         |    3 | 00/6956 : AD 6B 69    |                  lda          rem                  
 1685 |  7  fpdlib.s    222 | Code        | 11 |         |    1 | 00/6959 : 48          |                  pha                               
 1686 |  7  fpdlib.s    222 | Code        | 11 |         |    3 | 00/695A : AD 72 69    |                  lda          divisor+1            ; divisor on stack
 1687 |  7  fpdlib.s    222 | Code        | 11 |         |    1 | 00/695D : 48          |                  pha                               
 1688 |  7  fpdlib.s    222 | Code        | 11 |         |    3 | 00/695E : AD 71 69    |                  lda          divisor              
 1689 |  7  fpdlib.s    222 | Code        | 11 |         |    1 | 00/6961 : 48          |                  pha                               
 1690 |  7  fpdlib.s    222 | Code        | 11 |         |    3 | 00/6962 : 20 4A 68    |                  jsr          div16                ; call division routine
 1691 |  7  fpdlib.s    223 | Code        | 11 |         |    3 | 00/6965 : CE 75 69    |                  dec          loopcnt              ; loop if not 16 loops
 1692 |  7  fpdlib.s    224 | Code        | 11 |         |    2 | 00/6968 : D0 B6       |                  bne          restart              
 1693 |  7  fpdlib.s    225 | Empty       | 11 |         |    0 | 00/696A               | endfunc                                            
 1694 |  7  fpdlib.s    226 | Code        | 11 |         |    1 | 00/696A : 60          |                  rts                               
 1695 |  7  fpdlib.s    227 | Comment     | 11 |         |    0 | 00/696B               | *
 1696 |  7  fpdlib.s    228 | Comment     | 11 |         |    0 | 00/696B               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 1697 |  7  fpdlib.s    229 | Comment     | 11 |         |    0 | 00/696B               | * Variables
 1698 |  7  fpdlib.s    230 | Comment     | 11 |         |    0 | 00/696B               | *
 1699 |  7  fpdlib.s    231 | Data        | 11 |         |    2 | 00/696B : 00 00       | rem              dw           0                    
 1700 |  7  fpdlib.s    232 | Data        | 11 |         |    2 | 00/696D : 00 00       | decimal          dw           0                    
 1701 |  7  fpdlib.s    233 | Data        | 11 |         |    2 | 00/696F : 00 00       | dividend         dw           0                    
 1702 |  7  fpdlib.s    234 | Data        | 11 |         |    2 | 00/6971 : 00 00       | divisor          dw           0                    
 1703 |  7  fpdlib.s    235 | Data        | 11 |         |    2 | 00/6973 : 00 00       | retadr           dw           0                    
 1704 |  7  fpdlib.s    236 | Data        | 11 |         |    1 | 00/6975 : 00          | loopcnt          ds           1                    
 1705 |  7  fpdlib.s    237 | Data        | 11 |         |    2 | 00/6976 : 00 00       | tempo            ds           2                    
 1706 |  1 asmdemo.s    666 | Directive   | 11 |         |    0 | 00/6978               |                  put          data                 ; lines coordinaites : 8 bytes per line :
 1707 |  8    data.s      1 | Empty       | 11 |         |    0 | 00/6978               | linedata                                           
 1708 |  8    data.s      2 | Empty       | 11 |         |    0 | 00/6978               |                                                    
 1709 |  8    data.s      3 | Comment     | 11 |         |    0 | 00/6978               | * frame
 1710 |  8    data.s      4 | Data        | 11 |         |    8 | 00/6978 : 01 00 01 00 |                  dw           1,1,556,1            
      |                     |             |    |         |      |           2C 02 01 00 |
 1711 |  8    data.s      5 | Data        | 11 |         |    8 | 00/6980 : 2C 02 02 00 |                  dw           556,2,555,190        
      |                     |             |    |         |      |           2B 02 BE 00 |
 1712 |  8    data.s      6 | Data        | 11 |         |    8 | 00/6988 : 2B 02 BE 00 |                  dw           555,190,3,190        
      |                     |             |    |         |      |           03 00 BE 00 |
 1713 |  8    data.s      7 | Data        | 11 |         |    8 | 00/6990 : 03 00 BE 00 |                  dw           3,190,3,1            
      |                     |             |    |         |      |           03 00 01 00 |
 1714 |  8    data.s      8 | Empty       | 11 |         |    0 | 00/6998               |                                                    
 1715 |  8    data.s      9 | Comment     | 11 |         |    0 | 00/6998               | * top pattern
 1716 |  8    data.s     10 | Data        | 11 |         |    8 | 00/6998 : 19 00 5B 00 |                  dw           25,91,27,52          
      |                     |             |    |         |      |           1B 00 34 00 |
 1717 |  8    data.s     11 | Data        | 11 |         |    8 | 00/69A0 : 1C 00 5A 00 |                  dw           28,90,98,50          
      |                     |             |    |         |      |           62 00 32 00 |
 1718 |  8    data.s     12 | Data        | 11 |         |    8 | 00/69A8 : 62 00 32 00 |                  dw           98,50,96,88          
      |                     |             |    |         |      |           60 00 58 00 |
 1719 |  8    data.s     13 | Data        | 11 |         |    8 | 00/69B0 : 60 00 58 00 |                  dw           96,88,198,48         
      |                     |             |    |         |      |           C6 00 30 00 |
 1720 |  8    data.s     14 | Data        | 11 |         |    8 | 00/69B8 : C5 00 30 00 |                  dw           197,48,196,86        
      |                     |             |    |         |      |           C4 00 56 00 |
 1721 |  8    data.s     15 | Data        | 11 |         |    8 | 00/69C0 : C4 00 56 00 |                  dw           196,86,288,48        
      |                     |             |    |         |      |           20 01 30 00 |
 1722 |  8    data.s     16 | Data        | 11 |         |    8 | 00/69C8 : 20 01 30 00 |                  dw           288,48,287,86        
      |                     |             |    |         |      |           1F 01 56 00 |
 1723 |  8    data.s     17 | Data        | 11 |         |    8 | 00/69D0 : 1E 01 55 00 |                  dw           286,85,372,48        
      |                     |             |    |         |      |           74 01 30 00 |
 1724 |  8    data.s     18 | Data        | 11 |         |    8 | 00/69D8 : 74 01 30 00 |                  dw           372,48,372,83        
      |                     |             |    |         |      |           74 01 53 00 |
 1725 |  8    data.s     19 | Data        | 11 |         |    8 | 00/69E0 : 74 01 53 00 |                  dw           372,83,442,48        
      |                     |             |    |         |      |           BA 01 30 00 |
 1726 |  8    data.s     20 | Data        | 11 |         |    8 | 00/69E8 : BA 01 30 00 |                  dw           442,48,439,83        
      |                     |             |    |         |      |           B7 01 53 00 |
 1727 |  8    data.s     21 | Data        | 11 |         |    8 | 00/69F0 : B7 01 53 00 |                  dw           439,83,512,50        
      |                     |             |    |         |      |           00 02 32 00 |
 1728 |  8    data.s     22 | Data        | 11 |         |    8 | 00/69F8 : 00 02 32 00 |                  dw           512,50,512,82        
      |                     |             |    |         |      |           00 02 52 00 |
 1729 |  8    data.s     23 | Data        | 11 |         |    8 | 00/6A00 : 2C 02 41 00 |                  dw           556,65,513,83        
      |                     |             |    |         |      |           01 02 53 00 |
 1730 |  8    data.s     24 | Data        | 11 |         |    8 | 00/6A08 : 1F 00 32 00 |                  dw           31,50,557,46         
      |                     |             |    |         |      |           2D 02 2E 00 |
 1731 |  8    data.s     25 | Data        | 11 |         |    8 | 00/6A10 : 2C 02 2E 00 |                  dw           556,46,554,85        
      |                     |             |    |         |      |           2A 02 55 00 |
 1732 |  8    data.s     26 | Data        | 11 |         |    8 | 00/6A18 : 2A 02 55 00 |                  dw           554,85,26,91         
      |                     |             |    |         |      |           1A 00 5B 00 |
 1733 |  8    data.s     27 | Data        | 11 |         |    8 | 00/6A20 : 1B 00 34 00 |                  dw           27,52,68,66          
      |                     |             |    |         |      |           44 00 42 00 |
 1734 |  8    data.s     28 | Data        | 11 |         |    8 | 00/6A28 : 65 00 34 00 |                  dw           101,52,150,65        
      |                     |             |    |         |      |           96 00 41 00 |
 1735 |  8    data.s     29 | Data        | 11 |         |    8 | 00/6A30 : C8 00 31 00 |                  dw           200,49,247,63        
      |                     |             |    |         |      |           F7 00 3F 00 |
 1736 |  8    data.s     30 | Data        | 11 |         |    8 | 00/6A38 : 22 01 33 00 |                  dw           290,51,332,65        
      |                     |             |    |         |      |           4C 01 41 00 |
 1737 |  8    data.s     31 | Data        | 11 |         |    8 | 00/6A40 : 76 01 31 00 |                  dw           374,49,411,64        
      |                     |             |    |         |      |           9B 01 40 00 |
 1738 |  8    data.s     32 | Data        | 11 |         |    8 | 00/6A48 : BA 01 32 00 |                  dw           442,50,475,66        
      |                     |             |    |         |      |           DB 01 42 00 |
 1739 |  8    data.s     33 | Data        | 11 |         |    8 | 00/6A50 : 02 02 32 00 |                  dw           514,50,552,64        
      |                     |             |    |         |      |           28 02 40 00 |
 1740 |  8    data.s     34 | Data        | 11 |         |    8 | 00/6A58 : 1B 00 3B 00 |                  dw           27,59,38,56          
      |                     |             |    |         |      |           26 00 38 00 |
 1741 |  8    data.s     35 | Data        | 11 |         |    8 | 00/6A60 : 1B 00 40 00 |                  dw           27,64,47,59          
      |                     |             |    |         |      |           2F 00 3B 00 |
 1742 |  8    data.s     36 | Data        | 11 |         |    8 | 00/6A68 : 1C 00 45 00 |                  dw           28,69,49,63          
      |                     |             |    |         |      |           31 00 3F 00 |
 1743 |  8    data.s     37 | Data        | 11 |         |    8 | 00/6A70 : 1D 00 49 00 |                  dw           29,73,60,61          
      |                     |             |    |         |      |           3C 00 3D 00 |
 1744 |  8    data.s     38 | Data        | 11 |         |    8 | 00/6A78 : 21 00 4D 00 |                  dw           33,77,60,64          
      |                     |             |    |         |      |           3C 00 40 00 |
 1745 |  8    data.s     39 | Data        | 11 |         |    8 | 00/6A80 : 1E 00 53 00 |                  dw           30,83,61,69          
      |                     |             |    |         |      |           3D 00 45 00 |
 1746 |  8    data.s     40 | Data        | 11 |         |    8 | 00/6A88 : 64 00 36 00 |                  dw           100,54,103,52        
      |                     |             |    |         |      |           67 00 34 00 |
 1747 |  8    data.s     41 | Data        | 11 |         |    8 | 00/6A90 : 64 00 38 00 |                  dw           100,56,107,52        
      |                     |             |    |         |      |           6B 00 34 00 |
 1748 |  8    data.s     42 | Data        | 11 |         |    8 | 00/6A98 : 63 00 3B 00 |                  dw           99,59,112,55         
      |                     |             |    |         |      |           70 00 37 00 |
 1749 |  8    data.s     43 | Data        | 11 |         |    8 | 00/6AA0 : 64 00 3F 00 |                  dw           100,63,118,57        
      |                     |             |    |         |      |           76 00 39 00 |
 1750 |  8    data.s     44 | Data        | 11 |         |    8 | 00/6AA8 : 64 00 43 00 |                  dw           100,67,127,57        
      |                     |             |    |         |      |           7F 00 39 00 |
 1751 |  8    data.s     45 | Data        | 11 |         |    8 | 00/6AB0 : 63 00 48 00 |                  dw           99,72,132,60         
      |                     |             |    |         |      |           84 00 3C 00 |
 1752 |  8    data.s     46 | Data        | 11 |         |    8 | 00/6AB8 : 63 00 4B 00 |                  dw           99,75,132,64         
      |                     |             |    |         |      |           84 00 40 00 |
 1753 |  8    data.s     47 | Data        | 11 |         |    8 | 00/6AC0 : 62 00 50 00 |                  dw           98,80,143,62         
      |                     |             |    |         |      |           8F 00 3E 00 |
 1754 |  8    data.s     48 | Data        | 11 |         |    8 | 00/6AC8 : 69 00 51 00 |                  dw           105,81,144,64        
      |                     |             |    |         |      |           90 00 40 00 |
 1755 |  8    data.s     49 | Data        | 11 |         |    8 | 00/6AD0 : C6 00 36 00 |                  dw           198,54,207,52        
      |                     |             |    |         |      |           CF 00 34 00 |
 1756 |  8    data.s     50 | Data        | 11 |         |    8 | 00/6AD8 : C7 00 3A 00 |                  dw           199,58,216,53        
      |                     |             |    |         |      |           D8 00 35 00 |
 1757 |  8    data.s     51 | Data        | 11 |         |    8 | 00/6AE0 : C7 00 3F 00 |                  dw           199,63,222,56        
      |                     |             |    |         |      |           DE 00 38 00 |
 1758 |  8    data.s     52 | Data        | 11 |         |    8 | 00/6AE8 : C7 00 43 00 |                  dw           199,67,223,59        
      |                     |             |    |         |      |           DF 00 3B 00 |
 1759 |  8    data.s     53 | Data        | 11 |         |    8 | 00/6AF0 : C6 00 47 00 |                  dw           198,71,229,61        
      |                     |             |    |         |      |           E5 00 3D 00 |
 1760 |  8    data.s     54 | Data        | 11 |         |    8 | 00/6AF8 : CA 00 4C 00 |                  dw           202,76,233,62        
      |                     |             |    |         |      |           E9 00 3E 00 |
 1761 |  8    data.s     55 | Data        | 11 |         |    8 | 00/6B00 : C9 00 51 00 |                  dw           201,81,242,62        
      |                     |             |    |         |      |           F2 00 3E 00 |
 1762 |  8    data.s     56 | Data        | 11 |         |    8 | 00/6B08 : 22 01 38 00 |                  dw           290,56,295,54        
      |                     |             |    |         |      |           27 01 36 00 |
 1763 |  8    data.s     57 | Data        | 11 |         |    8 | 00/6B10 : 23 01 3A 00 |                  dw           291,58,300,55        
      |                     |             |    |         |      |           2C 01 37 00 |
 1764 |  8    data.s     58 | Data        | 11 |         |    8 | 00/6B18 : 23 01 3E 00 |                  dw           291,62,307,57        
      |                     |             |    |         |      |           33 01 39 00 |
 1765 |  8    data.s     59 | Data        | 11 |         |    8 | 00/6B20 : 23 01 43 00 |                  dw           291,67,311,59        
      |                     |             |    |         |      |           37 01 3B 00 |
 1766 |  8    data.s     60 | Data        | 11 |         |    8 | 00/6B28 : 25 01 47 00 |                  dw           293,71,318,61        
      |                     |             |    |         |      |           3E 01 3D 00 |
 1767 |  8    data.s     61 | Data        | 11 |         |    8 | 00/6B30 : 25 01 4D 00 |                  dw           293,77,326,63        
      |                     |             |    |         |      |           46 01 3F 00 |
 1768 |  8    data.s     62 | Data        | 11 |         |    8 | 00/6B38 : 78 01 38 00 |                  dw           376,56,381,54        
      |                     |             |    |         |      |           7D 01 36 00 |
 1769 |  8    data.s     63 | Data        | 11 |         |    8 | 00/6B40 : 78 01 3E 00 |                  dw           376,62,391,56        
      |                     |             |    |         |      |           87 01 38 00 |
 1770 |  8    data.s     64 | Data        | 11 |         |    8 | 00/6B48 : 74 01 42 00 |                  dw           372,66,392,59        
      |                     |             |    |         |      |           88 01 3B 00 |
 1771 |  8    data.s     65 | Data        | 11 |         |    8 | 00/6B50 : 7A 01 45 00 |                  dw           378,69,397,62        
      |                     |             |    |         |      |           8D 01 3E 00 |
 1772 |  8    data.s     66 | Data        | 11 |         |    8 | 00/6B58 : 79 01 4A 00 |                  dw           377,74,404,63        
      |                     |             |    |         |      |           94 01 3F 00 |
 1773 |  8    data.s     67 | Data        | 11 |         |    8 | 00/6B60 : BA 01 37 00 |                  dw           442,55,446,52        
      |                     |             |    |         |      |           BE 01 34 00 |
 1774 |  8    data.s     68 | Data        | 11 |         |    8 | 00/6B68 : BC 01 3B 00 |                  dw           444,59,450,56        
      |                     |             |    |         |      |           C2 01 38 00 |
 1775 |  8    data.s     69 | Data        | 11 |         |    8 | 00/6B70 : BA 01 3E 00 |                  dw           442,62,455,57        
      |                     |             |    |         |      |           C7 01 39 00 |
 1776 |  8    data.s     70 | Data        | 11 |         |    8 | 00/6B78 : BB 01 43 00 |                  dw           443,67,461,61        
      |                     |             |    |         |      |           CD 01 3D 00 |
 1777 |  8    data.s     71 | Data        | 11 |         |    8 | 00/6B80 : BA 01 48 00 |                  dw           442,72,464,61        
      |                     |             |    |         |      |           D0 01 3D 00 |
 1778 |  8    data.s     72 | Data        | 11 |         |    8 | 00/6B88 : BA 01 4B 00 |                  dw           442,75,469,63        
      |                     |             |    |         |      |           D5 01 3F 00 |
 1779 |  8    data.s     73 | Data        | 11 |         |    8 | 00/6B90 : BA 01 4F 00 |                  dw           442,79,473,65        
      |                     |             |    |         |      |           D9 01 41 00 |
 1780 |  8    data.s     74 | Data        | 11 |         |    8 | 00/6B98 : 02 02 3A 00 |                  dw           514,58,523,54        
      |                     |             |    |         |      |           0B 02 36 00 |
 1781 |  8    data.s     75 | Data        | 11 |         |    8 | 00/6BA0 : 02 02 3D 00 |                  dw           514,61,522,56        
      |                     |             |    |         |      |           0A 02 38 00 |
 1782 |  8    data.s     76 | Data        | 11 |         |    8 | 00/6BA8 : 02 02 42 00 |                  dw           514,66,530,56        
      |                     |             |    |         |      |           12 02 38 00 |
 1783 |  8    data.s     77 | Data        | 11 |         |    8 | 00/6BB0 : 02 02 45 00 |                  dw           514,69,533,57        
      |                     |             |    |         |      |           15 02 39 00 |
 1784 |  8    data.s     78 | Data        | 11 |         |    8 | 00/6BB8 : 02 02 48 00 |                  dw           514,72,535,58        
      |                     |             |    |         |      |           17 02 3A 00 |
 1785 |  8    data.s     79 | Data        | 11 |         |    8 | 00/6BC0 : 02 02 4C 00 |                  dw           514,76,539,61        
      |                     |             |    |         |      |           1B 02 3D 00 |
 1786 |  8    data.s     80 | Data        | 11 |         |    8 | 00/6BC8 : 05 02 50 00 |                  dw           517,80,544,64        
      |                     |             |    |         |      |           20 02 40 00 |
 1787 |  8    data.s     81 | Empty       | 11 |         |    0 | 00/6BD0               |                                                    
 1788 |  8    data.s     82 | Comment     | 11 |         |    0 | 00/6BD0               | * middle pattern
 1789 |  8    data.s     83 | Data        | 11 |         |    8 | 00/6BD0 : 1C 00 5F 00 |                  dw           28,95,22,120         
      |                     |             |    |         |      |           16 00 78 00 |
 1790 |  8    data.s     84 | Data        | 11 |         |    8 | 00/6BD8 : 1D 00 5F 00 |                  dw           29,95,84,122         
      |                     |             |    |         |      |           54 00 7A 00 |
 1791 |  8    data.s     85 | Data        | 11 |         |    8 | 00/6BE0 : 3A 00 6D 00 |                  dw           58,109,100,94        
      |                     |             |    |         |      |           64 00 5E 00 |
 1792 |  8    data.s     86 | Data        | 11 |         |    8 | 00/6BE8 : 65 00 5E 00 |                  dw           101,94,103,122       
      |                     |             |    |         |      |           67 00 7A 00 |
 1793 |  8    data.s     87 | Data        | 11 |         |    8 | 00/6BF0 : 66 00 5E 00 |                  dw           102,94,175,119       
      |                     |             |    |         |      |           AF 00 77 00 |
 1794 |  8    data.s     88 | Data        | 11 |         |    8 | 00/6BF8 : 8D 00 69 00 |                  dw           141,105,183,94       
      |                     |             |    |         |      |           B7 00 5E 00 |
 1795 |  8    data.s     89 | Data        | 11 |         |    8 | 00/6C00 : C1 00 5E 00 |                  dw           193,94,182,94        
      |                     |             |    |         |      |           B6 00 5E 00 |
 1796 |  8    data.s     90 | Data        | 11 |         |    8 | 00/6C08 : C2 00 5F 00 |                  dw           194,95,198,119       
      |                     |             |    |         |      |           C6 00 77 00 |
 1797 |  8    data.s     91 | Data        | 11 |         |    8 | 00/6C10 : C4 00 5F 00 |                  dw           196,95,266,118       
      |                     |             |    |         |      |           0A 01 76 00 |
 1798 |  8    data.s     92 | Data        | 11 |         |    8 | 00/6C18 : E6 00 6A 00 |                  dw           230,106,280,93       
      |                     |             |    |         |      |           18 01 5D 00 |
 1799 |  8    data.s     93 | Data        | 11 |         |    8 | 00/6C20 : 18 01 5D 00 |                  dw           280,93,290,93        
      |                     |             |    |         |      |           22 01 5D 00 |
 1800 |  8    data.s     94 | Data        | 11 |         |    8 | 00/6C28 : 22 01 5D 00 |                  dw           290,93,291,118       
      |                     |             |    |         |      |           23 01 76 00 |
 1801 |  8    data.s     95 | Data        | 11 |         |    8 | 00/6C30 : 25 01 5E 00 |                  dw           293,94,356,119       
      |                     |             |    |         |      |           64 01 77 00 |
 1802 |  8    data.s     96 | Data        | 11 |         |    8 | 00/6C38 : 40 01 68 00 |                  dw           320,104,366,92       
      |                     |             |    |         |      |           6E 01 5C 00 |
 1803 |  8    data.s     97 | Data        | 11 |         |    8 | 00/6C40 : 6F 01 5D 00 |                  dw           367,93,367,118       
      |                     |             |    |         |      |           6F 01 76 00 |
 1804 |  8    data.s     98 | Data        | 11 |         |    8 | 00/6C48 : 72 01 5D 00 |                  dw           370,93,429,120       
      |                     |             |    |         |      |           AD 01 78 00 |
 1805 |  8    data.s     99 | Data        | 11 |         |    8 | 00/6C50 : 8F 01 6A 00 |                  dw           399,106,443,93       
      |                     |             |    |         |      |           BB 01 5D 00 |
 1806 |  8    data.s    100 | Data        | 11 |         |    8 | 00/6C58 : BA 01 5C 00 |                  dw           442,92,447,121       
      |                     |             |    |         |      |           BF 01 79 00 |
 1807 |  8    data.s    101 | Data        | 11 |         |    8 | 00/6C60 : BB 01 5D 00 |                  dw           443,93,511,122       
      |                     |             |    |         |      |           FF 01 7A 00 |
 1808 |  8    data.s    102 | Data        | 11 |         |    8 | 00/6C68 : E2 01 6B 00 |                  dw           482,107,520,93       
      |                     |             |    |         |      |           08 02 5D 00 |
 1809 |  8    data.s    103 | Data        | 11 |         |    8 | 00/6C70 : 05 02 5D 00 |                  dw           517,93,527,121       
      |                     |             |    |         |      |           0F 02 79 00 |
 1810 |  8    data.s    104 | Data        | 11 |         |    8 | 00/6C78 : 07 02 5D 00 |                  dw           519,93,556,105       
      |                     |             |    |         |      |           2C 02 69 00 |
 1811 |  8    data.s    105 | Data        | 11 |         |    8 | 00/6C80 : 15 00 79 00 |                  dw           21,121,557,122       
      |                     |             |    |         |      |           2D 02 7A 00 |
 1812 |  8    data.s    106 | Data        | 11 |         |    8 | 00/6C88 : 1E 00 5F 00 |                  dw           30,95,557,92         
      |                     |             |    |         |      |           2D 02 5C 00 |
 1813 |  8    data.s    107 | Data        | 11 |         |    8 | 00/6C90 : 2A 02 5C 00 |                  dw           554,92,555,120       
      |                     |             |    |         |      |           2B 02 78 00 |
 1814 |  8    data.s    108 | Data        | 11 |         |    8 | 00/6C98 : 20 00 61 00 |                  dw           32,97,29,100         
      |                     |             |    |         |      |           1D 00 64 00 |
 1815 |  8    data.s    109 | Data        | 11 |         |    8 | 00/6CA0 : 24 00 64 00 |                  dw           36,100,25,106        
      |                     |             |    |         |      |           19 00 6A 00 |
 1816 |  8    data.s    110 | Data        | 11 |         |    8 | 00/6CA8 : 26 00 67 00 |                  dw           38,103,26,108        
      |                     |             |    |         |      |           1A 00 6C 00 |
 1817 |  8    data.s    111 | Data        | 11 |         |    8 | 00/6CB0 : 2C 00 69 00 |                  dw           44,105,23,112        
      |                     |             |    |         |      |           17 00 70 00 |
 1818 |  8    data.s    112 | Data        | 11 |         |    8 | 00/6CB8 : 30 00 6B 00 |                  dw           48,107,26,116        
      |                     |             |    |         |      |           1A 00 74 00 |
 1819 |  8    data.s    113 | Data        | 11 |         |    8 | 00/6CC0 : 36 00 6D 00 |                  dw           54,109,22,119        
      |                     |             |    |         |      |           16 00 77 00 |
 1820 |  8    data.s    114 | Data        | 11 |         |    8 | 00/6CC8 : 3A 00 70 00 |                  dw           58,112,34,121        
      |                     |             |    |         |      |           22 00 79 00 |
 1821 |  8    data.s    115 | Data        | 11 |         |    8 | 00/6CD0 : 44 00 72 00 |                  dw           68,114,49,120        
      |                     |             |    |         |      |           31 00 78 00 |
 1822 |  8    data.s    116 | Data        | 11 |         |    8 | 00/6CD8 : 47 00 74 00 |                  dw           71,116,59,120        
      |                     |             |    |         |      |           3B 00 78 00 |
 1823 |  8    data.s    117 | Data        | 11 |         |    8 | 00/6CE0 : 49 00 75 00 |                  dw           73,117,68,120        
      |                     |             |    |         |      |           44 00 78 00 |
 1824 |  8    data.s    118 | Data        | 11 |         |    8 | 00/6CE8 : 4C 00 76 00 |                  dw           76,118,72,121        
      |                     |             |    |         |      |           48 00 79 00 |
 1825 |  8    data.s    119 | Data        | 11 |         |    8 | 00/6CF0 : 6E 00 62 00 |                  dw           110,98,102,102       
      |                     |             |    |         |      |           66 00 66 00 |
 1826 |  8    data.s    120 | Data        | 11 |         |    8 | 00/6CF8 : 73 00 63 00 |                  dw           115,99,103,104       
      |                     |             |    |         |      |           67 00 68 00 |
 1827 |  8    data.s    121 | Data        | 11 |         |    8 | 00/6D00 : 79 00 65 00 |                  dw           121,101,104,108      
      |                     |             |    |         |      |           68 00 6C 00 |
 1828 |  8    data.s    122 | Data        | 11 |         |    8 | 00/6D08 : 7D 00 66 00 |                  dw           125,102,107,108      
      |                     |             |    |         |      |           6B 00 6C 00 |
 1829 |  8    data.s    123 | Data        | 11 |         |    8 | 00/6D10 : 81 00 69 00 |                  dw           129,105,103,115      
      |                     |             |    |         |      |           67 00 73 00 |
 1830 |  8    data.s    124 | Data        | 11 |         |    8 | 00/6D18 : 88 00 6B 00 |                  dw           136,107,105,118      
      |                     |             |    |         |      |           69 00 76 00 |
 1831 |  8    data.s    125 | Data        | 11 |         |    8 | 00/6D20 : 8F 00 6D 00 |                  dw           143,109,116,120      
      |                     |             |    |         |      |           74 00 78 00 |
 1832 |  8    data.s    126 | Data        | 11 |         |    8 | 00/6D28 : 93 00 70 00 |                  dw           147,112,128,120      
      |                     |             |    |         |      |           80 00 78 00 |
 1833 |  8    data.s    127 | Data        | 11 |         |    8 | 00/6D30 : 9C 00 71 00 |                  dw           156,113,139,120      
      |                     |             |    |         |      |           8B 00 78 00 |
 1834 |  8    data.s    128 | Data        | 11 |         |    8 | 00/6D38 : 9F 00 74 00 |                  dw           159,116,155,120      
      |                     |             |    |         |      |           9B 00 78 00 |
 1835 |  8    data.s    129 | Data        | 11 |         |    8 | 00/6D40 : C4 00 64 00 |                  dw           196,100,203,98       
      |                     |             |    |         |      |           CB 00 62 00 |
 1836 |  8    data.s    130 | Data        | 11 |         |    8 | 00/6D48 : C4 00 68 00 |                  dw           196,104,208,100      
      |                     |             |    |         |      |           D0 00 64 00 |
 1837 |  8    data.s    131 | Data        | 11 |         |    8 | 00/6D50 : D5 00 66 00 |                  dw           213,102,197,107      
      |                     |             |    |         |      |           C5 00 6B 00 |
 1838 |  8    data.s    132 | Data        | 11 |         |    8 | 00/6D58 : C6 00 6F 00 |                  dw           198,111,216,104      
      |                     |             |    |         |      |           D8 00 68 00 |
 1839 |  8    data.s    133 | Data        | 11 |         |    8 | 00/6D60 : DD 00 6A 00 |                  dw           221,106,199,115      
      |                     |             |    |         |      |           C7 00 73 00 |
 1840 |  8    data.s    134 | Data        | 11 |         |    8 | 00/6D68 : CA 00 76 00 |                  dw           202,118,227,107      
      |                     |             |    |         |      |           E3 00 6B 00 |
 1841 |  8    data.s    135 | Data        | 11 |         |    8 | 00/6D70 : E9 00 6F 00 |                  dw           233,111,211,118      
      |                     |             |    |         |      |           D3 00 76 00 |
 1842 |  8    data.s    136 | Data        | 11 |         |    8 | 00/6D78 : E0 00 77 00 |                  dw           224,119,241,111      
      |                     |             |    |         |      |           F1 00 6F 00 |
 1843 |  8    data.s    137 | Data        | 11 |         |    8 | 00/6D80 : E7 00 77 00 |                  dw           231,119,244,114      
      |                     |             |    |         |      |           F4 00 72 00 |
 1844 |  8    data.s    138 | Data        | 11 |         |    8 | 00/6D88 : EF 00 76 00 |                  dw           239,118,251,114      
      |                     |             |    |         |      |           FB 00 72 00 |
 1845 |  8    data.s    139 | Data        | 11 |         |    8 | 00/6D90 : FB 00 77 00 |                  dw           251,119,256,116      
      |                     |             |    |         |      |           00 01 74 00 |
 1846 |  8    data.s    140 | Data        | 11 |         |    8 | 00/6D98 : 2D 01 76 00 |                  dw           301,118,328,109      
      |                     |             |    |         |      |           48 01 6D 00 |
 1847 |  8    data.s    141 | Data        | 11 |         |    8 | 00/6DA0 : 28 01 74 00 |                  dw           296,116,320,107      
      |                     |             |    |         |      |           40 01 6B 00 |
 1848 |  8    data.s    142 | Data        | 11 |         |    8 | 00/6DA8 : 2B 01 70 00 |                  dw           299,112,317,104      
      |                     |             |    |         |      |           3D 01 68 00 |
 1849 |  8    data.s    143 | Data        | 11 |         |    8 | 00/6DB0 : 28 01 6C 00 |                  dw           296,108,312,102      
      |                     |             |    |         |      |           38 01 66 00 |
 1850 |  8    data.s    144 | Data        | 11 |         |    8 | 00/6DB8 : 27 01 69 00 |                  dw           295,105,306,100      
      |                     |             |    |         |      |           32 01 64 00 |
 1851 |  8    data.s    145 | Data        | 11 |         |    8 | 00/6DC0 : 2B 01 65 00 |                  dw           299,101,302,100      
      |                     |             |    |         |      |           2E 01 64 00 |
 1852 |  8    data.s    146 | Data        | 11 |         |    8 | 00/6DC8 : 23 01 63 00 |                  dw           291,99,298,96        
      |                     |             |    |         |      |           2A 01 60 00 |
 1853 |  8    data.s    147 | Data        | 11 |         |    8 | 00/6DD0 : 41 01 73 00 |                  dw           321,115,332,111      
      |                     |             |    |         |      |           4C 01 6F 00 |
 1854 |  8    data.s    148 | Data        | 11 |         |    8 | 00/6DD8 : 49 01 76 00 |                  dw           329,118,337,113      
      |                     |             |    |         |      |           51 01 71 00 |
 1855 |  8    data.s    149 | Data        | 11 |         |    8 | 00/6DE0 : 50 01 76 00 |                  dw           336,118,343,114      
      |                     |             |    |         |      |           57 01 72 00 |
 1856 |  8    data.s    150 | Data        | 11 |         |    8 | 00/6DE8 : 70 01 63 00 |                  dw           368,99,374,96        
      |                     |             |    |         |      |           76 01 60 00 |
 1857 |  8    data.s    151 | Data        | 11 |         |    8 | 00/6DF0 : 73 01 66 00 |                  dw           371,102,378,98       
      |                     |             |    |         |      |           7A 01 62 00 |
 1858 |  8    data.s    152 | Data        | 11 |         |    8 | 00/6DF8 : 73 01 6A 00 |                  dw           371,106,384,99       
      |                     |             |    |         |      |           80 01 63 00 |
 1859 |  8    data.s    153 | Data        | 11 |         |    8 | 00/6E00 : 73 01 6D 00 |                  dw           371,109,386,103      
      |                     |             |    |         |      |           82 01 67 00 |
 1860 |  8    data.s    154 | Data        | 11 |         |    8 | 00/6E08 : 76 01 70 00 |                  dw           374,112,389,105      
      |                     |             |    |         |      |           85 01 69 00 |
 1861 |  8    data.s    155 | Data        | 11 |         |    8 | 00/6E10 : 73 01 74 00 |                  dw           371,116,395,106      
      |                     |             |    |         |      |           8B 01 6A 00 |
 1862 |  8    data.s    156 | Data        | 11 |         |    8 | 00/6E18 : 76 01 77 00 |                  dw           374,119,401,108      
      |                     |             |    |         |      |           91 01 6C 00 |
 1863 |  8    data.s    157 | Data        | 11 |         |    8 | 00/6E20 : 82 01 77 00 |                  dw           386,119,404,110      
      |                     |             |    |         |      |           94 01 6E 00 |
 1864 |  8    data.s    158 | Data        | 11 |         |    8 | 00/6E28 : 8B 01 77 00 |                  dw           395,119,411,113      
      |                     |             |    |         |      |           9B 01 71 00 |
 1865 |  8    data.s    159 | Data        | 11 |         |    8 | 00/6E30 : 95 01 77 00 |                  dw           405,119,414,114      
      |                     |             |    |         |      |           9E 01 72 00 |
 1866 |  8    data.s    160 | Data        | 11 |         |    8 | 00/6E38 : A0 01 78 00 |                  dw           416,120,421,117      
      |                     |             |    |         |      |           A5 01 75 00 |
 1867 |  8    data.s    161 | Data        | 11 |         |    8 | 00/6E40 : C2 01 64 00 |                  dw           450,100,458,99       
      |                     |             |    |         |      |           CA 01 63 00 |
 1868 |  8    data.s    162 | Data        | 11 |         |    8 | 00/6E48 : BF 01 6B 00 |                  dw           447,107,461,101      
      |                     |             |    |         |      |           CD 01 65 00 |
 1869 |  8    data.s    163 | Data        | 11 |         |    8 | 00/6E50 : C2 01 6D 00 |                  dw           450,109,466,103      
      |                     |             |    |         |      |           D2 01 67 00 |
 1870 |  8    data.s    164 | Data        | 11 |         |    8 | 00/6E58 : C6 01 6F 00 |                  dw           454,111,476,106      
      |                     |             |    |         |      |           DC 01 6A 00 |
 1871 |  8    data.s    165 | Data        | 11 |         |    8 | 00/6E60 : C5 01 75 00 |                  dw           453,117,477,109      
      |                     |             |    |         |      |           DD 01 6D 00 |
 1872 |  8    data.s    166 | Data        | 11 |         |    8 | 00/6E68 : C8 01 78 00 |                  dw           456,120,486,112      
      |                     |             |    |         |      |           E6 01 70 00 |
 1873 |  8    data.s    167 | Data        | 11 |         |    8 | 00/6E70 : D8 01 79 00 |                  dw           472,121,492,114      
      |                     |             |    |         |      |           EC 01 72 00 |
 1874 |  8    data.s    168 | Data        | 11 |         |    8 | 00/6E78 : E7 01 79 00 |                  dw           487,121,495,118      
      |                     |             |    |         |      |           EF 01 76 00 |
 1875 |  8    data.s    169 | Data        | 11 |         |    8 | 00/6E80 : F1 01 79 00 |                  dw           497,121,505,117      
      |                     |             |    |         |      |           F9 01 75 00 |
 1876 |  8    data.s    170 | Data        | 11 |         |    8 | 00/6E88 : 10 02 76 00 |                  dw           528,118,553,112      
      |                     |             |    |         |      |           29 02 70 00 |
 1877 |  8    data.s    171 | Data        | 11 |         |    8 | 00/6E90 : 17 02 71 00 |                  dw           535,113,551,107      
      |                     |             |    |         |      |           27 02 6B 00 |
 1878 |  8    data.s    172 | Data        | 11 |         |    8 | 00/6E98 : 0C 02 70 00 |                  dw           524,112,545,103      
      |                     |             |    |         |      |           21 02 67 00 |
 1879 |  8    data.s    173 | Data        | 11 |         |    8 | 00/6EA0 : 0F 02 6A 00 |                  dw           527,106,545,100      
      |                     |             |    |         |      |           21 02 64 00 |
 1880 |  8    data.s    174 | Data        | 11 |         |    8 | 00/6EA8 : 09 02 68 00 |                  dw           521,104,537,98       
      |                     |             |    |         |      |           19 02 62 00 |
 1881 |  8    data.s    175 | Data        | 11 |         |    8 | 00/6EB0 : 0F 02 64 00 |                  dw           527,100,534,96       
      |                     |             |    |         |      |           16 02 60 00 |
 1882 |  8    data.s    176 | Data        | 11 |         |    8 | 00/6EB8 : 08 02 61 00 |                  dw           520,97,525,95        
      |                     |             |    |         |      |           0D 02 5F 00 |
 1883 |  8    data.s    177 | Data        | 11 |         |    8 | 00/6EC0 : 21 02 77 00 |                  dw           545,119,554,116      
      |                     |             |    |         |      |           2A 02 74 00 |
 1884 |  8    data.s    178 | Empty       | 11 |         |    0 | 00/6EC8               |                                                    
 1885 |  8    data.s    179 | Comment     | 11 |         |    0 | 00/6EC8               | * bottom pattern
 1886 |  8    data.s    180 | Data        | 11 |         |    8 | 00/6EC8 : 16 00 7C 00 |                  dw           22,124,23,155        
      |                     |             |    |         |      |           17 00 9B 00 |
 1887 |  8    data.s    181 | Data        | 11 |         |    8 | 00/6ED0 : 17 00 7C 00 |                  dw           23,124,60,152        
      |                     |             |    |         |      |           3C 00 98 00 |
 1888 |  8    data.s    182 | Data        | 11 |         |    8 | 00/6ED8 : 31 00 97 00 |                  dw           49,151,93,128        
      |                     |             |    |         |      |           5D 00 80 00 |
 1889 |  8    data.s    183 | Data        | 11 |         |    8 | 00/6EE0 : 5D 00 80 00 |                  dw           93,128,98,155        
      |                     |             |    |         |      |           62 00 9B 00 |
 1890 |  8    data.s    184 | Data        | 11 |         |    8 | 00/6EE8 : 60 00 7F 00 |                  dw           96,127,140,154       
      |                     |             |    |         |      |           8C 00 9A 00 |
 1891 |  8    data.s    185 | Data        | 11 |         |    8 | 00/6EF0 : 84 00 9B 00 |                  dw           132,155,169,124      
      |                     |             |    |         |      |           A9 00 7C 00 |
 1892 |  8    data.s    186 | Data        | 11 |         |    8 | 00/6EF8 : A9 00 7D 00 |                  dw           169,125,173,154      
      |                     |             |    |         |      |           AD 00 9A 00 |
 1893 |  8    data.s    187 | Data        | 11 |         |    8 | 00/6F00 : A9 00 7D 00 |                  dw           169,125,210,157      
      |                     |             |    |         |      |           D2 00 9D 00 |
 1894 |  8    data.s    188 | Data        | 11 |         |    8 | 00/6F08 : C8 00 9C 00 |                  dw           200,156,240,124      
      |                     |             |    |         |      |           F0 00 7C 00 |
 1895 |  8    data.s    189 | Data        | 11 |         |    8 | 00/6F10 : 76 01 7C 00 |                  dw           374,124,377,160      
      |                     |             |    |         |      |           79 01 A0 00 |
 1896 |  8    data.s    190 | Data        | 11 |         |    8 | 00/6F18 : EE 00 7C 00 |                  dw           238,124,241,159      
      |                     |             |    |         |      |           F1 00 9F 00 |
 1897 |  8    data.s    191 | Data        | 11 |         |    8 | 00/6F20 : EF 00 7D 00 |                  dw           239,125,279,159      
      |                     |             |    |         |      |           17 01 9F 00 |
 1898 |  8    data.s    192 | Data        | 11 |         |    8 | 00/6F28 : 11 01 9F 00 |                  dw           273,159,306,124      
      |                     |             |    |         |      |           32 01 7C 00 |
 1899 |  8    data.s    193 | Data        | 11 |         |    8 | 00/6F30 : 32 01 7B 00 |                  dw           306,123,309,160      
      |                     |             |    |         |      |           35 01 A0 00 |
 1900 |  8    data.s    194 | Data        | 11 |         |    8 | 00/6F38 : 32 01 7B 00 |                  dw           306,123,339,160      
      |                     |             |    |         |      |           53 01 A0 00 |
 1901 |  8    data.s    195 | Data        | 11 |         |    8 | 00/6F40 : 53 01 A0 00 |                  dw           339,160,372,124      
      |                     |             |    |         |      |           74 01 7C 00 |
 1902 |  8    data.s    196 | Data        | 11 |         |    8 | 00/6F48 : 76 01 7C 00 |                  dw           374,124,413,160      
      |                     |             |    |         |      |           9D 01 A0 00 |
 1903 |  8    data.s    197 | Data        | 11 |         |    8 | 00/6F50 : 91 01 A1 00 |                  dw           401,161,440,125      
      |                     |             |    |         |      |           B8 01 7D 00 |
 1904 |  8    data.s    198 | Data        | 11 |         |    8 | 00/6F58 : B8 01 7D 00 |                  dw           440,125,437,161      
      |                     |             |    |         |      |           B5 01 A1 00 |
 1905 |  8    data.s    199 | Data        | 11 |         |    8 | 00/6F60 : B7 01 7D 00 |                  dw           439,125,474,162      
      |                     |             |    |         |      |           DA 01 A2 00 |
 1906 |  8    data.s    200 | Data        | 11 |         |    8 | 00/6F68 : D2 01 A2 00 |                  dw           466,162,504,126      
      |                     |             |    |         |      |           F8 01 7E 00 |
 1907 |  8    data.s    201 | Data        | 11 |         |    8 | 00/6F70 : F8 01 7E 00 |                  dw           504,126,505,162      
      |                     |             |    |         |      |           F9 01 A2 00 |
 1908 |  8    data.s    202 | Data        | 11 |         |    8 | 00/6F78 : F8 01 7E 00 |                  dw           504,126,538,160      
      |                     |             |    |         |      |           1A 02 A0 00 |
 1909 |  8    data.s    203 | Data        | 11 |         |    8 | 00/6F80 : 10 02 A1 00 |                  dw           528,161,556,132      
      |                     |             |    |         |      |           2C 02 84 00 |
 1910 |  8    data.s    204 | Data        | 11 |         |    8 | 00/6F88 : 19 00 7C 00 |                  dw           25,124,94,127        
      |                     |             |    |         |      |           5E 00 7F 00 |
 1911 |  8    data.s    205 | Data        | 11 |         |    8 | 00/6F90 : 5E 00 7F 00 |                  dw           94,127,169,125       
      |                     |             |    |         |      |           A9 00 7D 00 |
 1912 |  8    data.s    206 | Data        | 11 |         |    8 | 00/6F98 : AB 00 7D 00 |                  dw           171,125,558,124      
      |                     |             |    |         |      |           2E 02 7C 00 |
 1913 |  8    data.s    207 | Data        | 11 |         |    8 | 00/6FA0 : 1A 00 99 00 |                  dw           26,153,60,152        
      |                     |             |    |         |      |           3C 00 98 00 |
 1914 |  8    data.s    208 | Data        | 11 |         |    8 | 00/6FA8 : 88 00 9C 00 |                  dw           136,156,119,156      
      |                     |             |    |         |      |           77 00 9C 00 |
 1915 |  8    data.s    209 | Data        | 11 |         |    8 | 00/6FB0 : 3E 00 98 00 |                  dw           62,152,117,156       
      |                     |             |    |         |      |           75 00 9C 00 |
 1916 |  8    data.s    210 | Data        | 11 |         |    8 | 00/6FB8 : 89 00 9B 00 |                  dw           137,155,194,155      
      |                     |             |    |         |      |           C2 00 9B 00 |
 1917 |  8    data.s    211 | Data        | 11 |         |    8 | 00/6FC0 : C2 00 9B 00 |                  dw           194,155,264,162      
      |                     |             |    |         |      |           08 01 A2 00 |
 1918 |  8    data.s    212 | Data        | 11 |         |    8 | 00/6FC8 : 08 01 A2 00 |                  dw           264,162,353,162      
      |                     |             |    |         |      |           61 01 A2 00 |
 1919 |  8    data.s    213 | Data        | 11 |         |    8 | 00/6FD0 : 61 01 A2 00 |                  dw           353,162,421,160      
      |                     |             |    |         |      |           A5 01 A0 00 |
 1920 |  8    data.s    214 | Data        | 11 |         |    8 | 00/6FD8 : A5 01 A0 00 |                  dw           421,160,474,163      
      |                     |             |    |         |      |           DA 01 A3 00 |
 1921 |  8    data.s    215 | Data        | 11 |         |    8 | 00/6FE0 : DA 01 A3 00 |                  dw           474,163,525,162      
      |                     |             |    |         |      |           0D 02 A2 00 |
 1922 |  8    data.s    216 | Data        | 11 |         |    8 | 00/6FE8 : 0D 02 A2 00 |                  dw           525,162,553,163      
      |                     |             |    |         |      |           29 02 A3 00 |
 1923 |  8    data.s    217 | Data        | 11 |         |    8 | 00/6FF0 : 27 02 A3 00 |                  dw           551,163,553,125      
      |                     |             |    |         |      |           29 02 7D 00 |
 1924 |  8    data.s    218 | Data        | 11 |         |    8 | 00/6FF8 : 1E 00 80 00 |                  dw           30,128,20,132        
      |                     |             |    |         |      |           14 00 84 00 |
 1925 |  8    data.s    219 | Data        | 11 |         |    8 | 00/7000 : 24 00 85 00 |                  dw           36,133,22,137        
      |                     |             |    |         |      |           16 00 89 00 |
 1926 |  8    data.s    220 | Data        | 11 |         |    8 | 00/7008 : 22 00 89 00 |                  dw           34,137,24,140        
      |                     |             |    |         |      |           18 00 8C 00 |
 1927 |  8    data.s    221 | Data        | 11 |         |    8 | 00/7010 : 28 00 8B 00 |                  dw           40,139,23,147        
      |                     |             |    |         |      |           17 00 93 00 |
 1928 |  8    data.s    222 | Data        | 11 |         |    8 | 00/7018 : 2C 00 91 00 |                  dw           44,145,26,151        
      |                     |             |    |         |      |           1A 00 97 00 |
 1929 |  8    data.s    223 | Data        | 11 |         |    8 | 00/7020 : 33 00 93 00 |                  dw           51,147,40,152        
      |                     |             |    |         |      |           28 00 98 00 |
 1930 |  8    data.s    224 | Data        | 11 |         |    8 | 00/7028 : 38 00 96 00 |                  dw           56,150,52,152        
      |                     |             |    |         |      |           34 00 98 00 |
 1931 |  8    data.s    225 | Data        | 11 |         |    8 | 00/7030 : 64 00 83 00 |                  dw           100,131,93,134       
      |                     |             |    |         |      |           5D 00 86 00 |
 1932 |  8    data.s    226 | Data        | 11 |         |    8 | 00/7038 : 65 00 87 00 |                  dw           101,135,91,137       
      |                     |             |    |         |      |           5B 00 89 00 |
 1933 |  8    data.s    227 | Data        | 11 |         |    8 | 00/7040 : 6A 00 87 00 |                  dw           106,135,95,141       
      |                     |             |    |         |      |           5F 00 8D 00 |
 1934 |  8    data.s    228 | Data        | 11 |         |    8 | 00/7048 : 6F 00 89 00 |                  dw           111,137,94,143       
      |                     |             |    |         |      |           5E 00 8F 00 |
 1935 |  8    data.s    229 | Data        | 11 |         |    8 | 00/7050 : 70 00 8B 00 |                  dw           112,139,98,148       
      |                     |             |    |         |      |           62 00 94 00 |
 1936 |  8    data.s    230 | Data        | 11 |         |    8 | 00/7058 : 76 00 8E 00 |                  dw           118,142,98,150       
      |                     |             |    |         |      |           62 00 96 00 |
 1937 |  8    data.s    231 | Data        | 11 |         |    8 | 00/7060 : 79 00 90 00 |                  dw           121,144,100,153      
      |                     |             |    |         |      |           64 00 99 00 |
 1938 |  8    data.s    232 | Data        | 11 |         |    8 | 00/7068 : 7D 00 91 00 |                  dw           125,145,109,153      
      |                     |             |    |         |      |           6D 00 99 00 |
 1939 |  8    data.s    233 | Data        | 11 |         |    8 | 00/7070 : 7F 00 93 00 |                  dw           127,147,116,154      
      |                     |             |    |         |      |           74 00 9A 00 |
 1940 |  8    data.s    234 | Data        | 11 |         |    8 | 00/7078 : 82 00 95 00 |                  dw           130,149,120,155      
      |                     |             |    |         |      |           78 00 9B 00 |
 1941 |  8    data.s    235 | Data        | 11 |         |    8 | 00/7080 : AE 00 81 00 |                  dw           174,129,168,132      
      |                     |             |    |         |      |           A8 00 84 00 |
 1942 |  8    data.s    236 | Data        | 11 |         |    8 | 00/7088 : B3 00 84 00 |                  dw           179,132,169,136      
      |                     |             |    |         |      |           A9 00 88 00 |
 1943 |  8    data.s    237 | Data        | 11 |         |    8 | 00/7090 : B6 00 87 00 |                  dw           182,135,170,139      
      |                     |             |    |         |      |           AA 00 8B 00 |
 1944 |  8    data.s    238 | Data        | 11 |         |    8 | 00/7098 : BB 00 89 00 |                  dw           187,137,171,142      
      |                     |             |    |         |      |           AB 00 8E 00 |
 1945 |  8    data.s    239 | Data        | 11 |         |    8 | 00/70A0 : BD 00 8E 00 |                  dw           189,142,170,148      
      |                     |             |    |         |      |           AA 00 94 00 |
 1946 |  8    data.s    240 | Data        | 11 |         |    8 | 00/70A8 : C2 00 8F 00 |                  dw           194,143,176,150      
      |                     |             |    |         |      |           B0 00 96 00 |
 1947 |  8    data.s    241 | Data        | 11 |         |    8 | 00/70B0 : C4 00 91 00 |                  dw           196,145,176,153      
      |                     |             |    |         |      |           B0 00 99 00 |
 1948 |  8    data.s    242 | Data        | 11 |         |    8 | 00/70B8 : C5 00 95 00 |                  dw           197,149,185,153      
      |                     |             |    |         |      |           B9 00 99 00 |
 1949 |  8    data.s    243 | Data        | 11 |         |    8 | 00/70C0 : CA 00 97 00 |                  dw           202,151,195,154      
      |                     |             |    |         |      |           C3 00 9A 00 |
 1950 |  8    data.s    244 | Data        | 11 |         |    8 | 00/70C8 : F5 00 81 00 |                  dw           245,129,239,131      
      |                     |             |    |         |      |           EF 00 83 00 |
 1951 |  8    data.s    245 | Data        | 11 |         |    8 | 00/70D0 : F5 00 85 00 |                  dw           245,133,233,136      
      |                     |             |    |         |      |           E9 00 88 00 |
 1952 |  8    data.s    246 | Data        | 11 |         |    8 | 00/70D8 : FA 00 87 00 |                  dw           250,135,239,140      
      |                     |             |    |         |      |           EF 00 8C 00 |
 1953 |  8    data.s    247 | Data        | 11 |         |    8 | 00/70E0 : FC 00 8B 00 |                  dw           252,139,240,142      
      |                     |             |    |         |      |           F0 00 8E 00 |
 1954 |  8    data.s    248 | Data        | 11 |         |    8 | 00/70E8 : 00 01 8D 00 |                  dw           256,141,242,147      
      |                     |             |    |         |      |           F2 00 93 00 |
 1955 |  8    data.s    249 | Data        | 11 |         |    8 | 00/70F0 : 05 01 91 00 |                  dw           261,145,241,152      
      |                     |             |    |         |      |           F1 00 98 00 |
 1956 |  8    data.s    250 | Data        | 11 |         |    8 | 00/70F8 : 0B 01 93 00 |                  dw           267,147,241,155      
      |                     |             |    |         |      |           F1 00 9B 00 |
 1957 |  8    data.s    251 | Data        | 11 |         |    8 | 00/7100 : 0D 01 95 00 |                  dw           269,149,243,158      
      |                     |             |    |         |      |           F3 00 9E 00 |
 1958 |  8    data.s    252 | Data        | 11 |         |    8 | 00/7108 : 12 01 99 00 |                  dw           274,153,257,157      
      |                     |             |    |         |      |           01 01 9D 00 |
 1959 |  8    data.s    253 | Data        | 11 |         |    8 | 00/7110 : 14 01 9B 00 |                  dw           276,155,262,159      
      |                     |             |    |         |      |           06 01 9F 00 |
 1960 |  8    data.s    254 | Data        | 11 |         |    8 | 00/7118 : 38 01 83 00 |                  dw           312,131,306,135      
      |                     |             |    |         |      |           32 01 87 00 |
 1961 |  8    data.s    255 | Data        | 11 |         |    8 | 00/7120 : 3C 01 8A 00 |                  dw           316,138,309,141      
      |                     |             |    |         |      |           35 01 8D 00 |
 1962 |  8    data.s    256 | Data        | 11 |         |    8 | 00/7128 : 41 01 8C 00 |                  dw           321,140,310,148      
      |                     |             |    |         |      |           36 01 94 00 |
 1963 |  8    data.s    257 | Data        | 11 |         |    8 | 00/7130 : 47 01 93 00 |                  dw           327,147,311,151      
      |                     |             |    |         |      |           37 01 97 00 |
 1964 |  8    data.s    258 | Data        | 11 |         |    8 | 00/7138 : 48 01 95 00 |                  dw           328,149,309,156      
      |                     |             |    |         |      |           35 01 9C 00 |
 1965 |  8    data.s    259 | Data        | 11 |         |    8 | 00/7140 : 4A 01 99 00 |                  dw           330,153,310,158      
      |                     |             |    |         |      |           36 01 9E 00 |
 1966 |  8    data.s    260 | Data        | 11 |         |    8 | 00/7148 : 4E 01 9C 00 |                  dw           334,156,316,161      
      |                     |             |    |         |      |           3C 01 A1 00 |
 1967 |  8    data.s    261 | Data        | 11 |         |    8 | 00/7150 : 51 01 9E 00 |                  dw           337,158,331,160      
      |                     |             |    |         |      |           4B 01 A0 00 |
 1968 |  8    data.s    262 | Data        | 11 |         |    8 | 00/7158 : 7D 01 82 00 |                  dw           381,130,374,133      
      |                     |             |    |         |      |           76 01 85 00 |
 1969 |  8    data.s    263 | Data        | 11 |         |    8 | 00/7160 : 7C 01 85 00 |                  dw           380,133,372,137      
      |                     |             |    |         |      |           74 01 89 00 |
 1970 |  8    data.s    264 | Data        | 11 |         |    8 | 00/7168 : 81 01 89 00 |                  dw           385,137,376,142      
      |                     |             |    |         |      |           78 01 8E 00 |
 1971 |  8    data.s    265 | Data        | 11 |         |    8 | 00/7170 : 84 01 8B 00 |                  dw           388,139,373,145      
      |                     |             |    |         |      |           75 01 91 00 |
 1972 |  8    data.s    266 | Data        | 11 |         |    8 | 00/7178 : 88 01 8D 00 |                  dw           392,141,375,147      
      |                     |             |    |         |      |           77 01 93 00 |
 1973 |  8    data.s    267 | Data        | 11 |         |    8 | 00/7180 : 8A 01 91 00 |                  dw           394,145,377,152      
      |                     |             |    |         |      |           79 01 98 00 |
 1974 |  8    data.s    268 | Data        | 11 |         |    8 | 00/7188 : 8C 01 93 00 |                  dw           396,147,377,156      
      |                     |             |    |         |      |           79 01 9C 00 |
 1975 |  8    data.s    269 | Data        | 11 |         |    8 | 00/7190 : 91 01 97 00 |                  dw           401,151,377,159      
      |                     |             |    |         |      |           79 01 9F 00 |
 1976 |  8    data.s    270 | Data        | 11 |         |    8 | 00/7198 : 94 01 9A 00 |                  dw           404,154,388,160      
      |                     |             |    |         |      |           84 01 A0 00 |
 1977 |  8    data.s    271 | Data        | 11 |         |    8 | 00/71A0 : 94 01 9C 00 |                  dw           404,156,395,160      
      |                     |             |    |         |      |           8B 01 A0 00 |
 1978 |  8    data.s    272 | Data        | 11 |         |    8 | 00/71A8 : BA 01 85 00 |                  dw           442,133,436,134      
      |                     |             |    |         |      |           B4 01 86 00 |
 1979 |  8    data.s    273 | Data        | 11 |         |    8 | 00/71B0 : BE 01 87 00 |                  dw           446,135,439,139      
      |                     |             |    |         |      |           B7 01 8B 00 |
 1980 |  8    data.s    274 | Data        | 11 |         |    8 | 00/71B8 : BF 01 8B 00 |                  dw           447,139,439,144      
      |                     |             |    |         |      |           B7 01 90 00 |
 1981 |  8    data.s    275 | Data        | 11 |         |    8 | 00/71C0 : C2 01 8D 00 |                  dw           450,141,438,146      
      |                     |             |    |         |      |           B6 01 92 00 |
 1982 |  8    data.s    276 | Data        | 11 |         |    8 | 00/71C8 : C5 01 90 00 |                  dw           453,144,439,151      
      |                     |             |    |         |      |           B7 01 97 00 |
 1983 |  8    data.s    277 | Data        | 11 |         |    8 | 00/71D0 : C9 01 95 00 |                  dw           457,149,440,153      
      |                     |             |    |         |      |           B8 01 99 00 |
 1984 |  8    data.s    278 | Data        | 11 |         |    8 | 00/71D8 : CC 01 97 00 |                  dw           460,151,442,156      
      |                     |             |    |         |      |           BA 01 9C 00 |
 1985 |  8    data.s    279 | Data        | 11 |         |    8 | 00/71E0 : D0 01 99 00 |                  dw           464,153,437,160      
      |                     |             |    |         |      |           B5 01 A0 00 |
 1986 |  8    data.s    280 | Data        | 11 |         |    8 | 00/71E8 : D1 01 9A 00 |                  dw           465,154,449,160      
      |                     |             |    |         |      |           C1 01 A0 00 |
 1987 |  8    data.s    281 | Data        | 11 |         |    8 | 00/71F0 : D2 01 9E 00 |                  dw           466,158,457,160      
      |                     |             |    |         |      |           C9 01 A0 00 |
 1988 |  8    data.s    282 | Data        | 11 |         |    8 | 00/71F8 : FB 01 85 00 |                  dw           507,133,499,135      
      |                     |             |    |         |      |           F3 01 87 00 |
 1989 |  8    data.s    283 | Data        | 11 |         |    8 | 00/7200 : FB 01 89 00 |                  dw           507,137,503,139      
      |                     |             |    |         |      |           F7 01 8B 00 |
 1990 |  8    data.s    284 | Data        | 11 |         |    8 | 00/7208 : FC 01 8B 00 |                  dw           508,139,502,141      
      |                     |             |    |         |      |           F6 01 8D 00 |
 1991 |  8    data.s    285 | Data        | 11 |         |    8 | 00/7210 : 01 02 8E 00 |                  dw           513,142,501,145      
      |                     |             |    |         |      |           F5 01 91 00 |
 1992 |  8    data.s    286 | Data        | 11 |         |    8 | 00/7218 : 00 02 91 00 |                  dw           512,145,503,149      
      |                     |             |    |         |      |           F7 01 95 00 |
 1993 |  8    data.s    287 | Data        | 11 |         |    8 | 00/7220 : 06 02 93 00 |                  dw           518,147,504,151      
      |                     |             |    |         |      |           F8 01 97 00 |
 1994 |  8    data.s    288 | Data        | 11 |         |    8 | 00/7228 : 07 02 97 00 |                  dw           519,151,505,154      
      |                     |             |    |         |      |           F9 01 9A 00 |
 1995 |  8    data.s    289 | Data        | 11 |         |    8 | 00/7230 : 0C 02 99 00 |                  dw           524,153,509,158      
      |                     |             |    |         |      |           FD 01 9E 00 |
 1996 |  8    data.s    290 | Data        | 11 |         |    8 | 00/7238 : 11 02 9C 00 |                  dw           529,156,509,160      
      |                     |             |    |         |      |           FD 01 A0 00 |
 1997 |  8    data.s    291 | Data        | 11 |         |    8 | 00/7240 : 12 02 9F 00 |                  dw           530,159,520,160      
      |                     |             |    |         |      |           08 02 A0 00 |
 1998 |  8    data.s    292 | Empty       | 11 |         |    0 | 00/7248               |                                                    
 1999 |  8    data.s    293 | Data        | 11 |         |    2 | 00/7248 : FF FF       |                  dfb          $FF,$FF              
 2000 |  1 asmdemo.s    667 | Comment     | 11 |         |    0 | 00/724A               |                                                 ; starting point.x (2 bytes), starting point.y (2 bytes),
 2001 |  1 asmdemo.s    668 | Comment     | 11 |         |    0 | 00/724A               |                                                 ; ending point.x (2 bytes), ending point.y (2 bytes),
 2002 |  1 asmdemo.s    669 | Comment     | 11 |         |    0 | 00/724A               | *
 2003 |  1 asmdemo.s    670 | Comment     | 11 |         |    0 | 00/724A               | * * * * * * * * * * * * DATA * * * * * * * * * * * *
 2004 |  1 asmdemo.s    671 | Data        | 11 |         |    2 | 00/724A : 00 00       | deltaX           ds           2                    ; Point2.x minus Point1.x
 2005 |  1 asmdemo.s    672 | Data        | 11 |         |    2 | 00/724C : 00 00       | deltaY           ds           2                    ; Point2.y minus Point1.y
 2006 |  1 asmdemo.s    673 | Data        | 11 |         |    2 | 00/724E : 00 00       | deltaXabs        ds           2                    ; absolute value of deltaX
 2007 |  1 asmdemo.s    674 | Data        | 11 |         |    2 | 00/7250 : 00 00       | deltaYabs        ds           2                    ; absolute value of deltaY
 2008 |  1 asmdemo.s    675 | Data        | 11 |         |    2 | 00/7252 : 00 00       | deltaMax         ds           2                    ; Max(deltaXabs,deltaYabs)
 2009 |  1 asmdemo.s    676 | Data        | 11 |         |    4 | 00/7254 : 00 00 00 00 | curptX           ds           4                    ; current x coordinate in line drawing loop
 2010 |  1 asmdemo.s    677 | Data        | 11 |         |    4 | 00/7258 : 00 00 00 00 | curptY           ds           4                    ; current y coordinate in line drawing loop
 2011 |  1 asmdemo.s    678 | Empty       | 11 |         |    0 | 00/725C               |                                                    
 2012 |  1 asmdemo.s    679 | Data        | 11 |         |    1 | 00/725C : 00          | signX            ds           1                    ; sign of x incerment
 2013 |  1 asmdemo.s    680 | Data        | 11 |         |    1 | 00/725D : 00          | signY            ds           1                    ; sign of y incerment
 2014 |  1 asmdemo.s    681 | Empty       | 11 |         |    0 | 00/725E               |                                                    
 2015 |  1 asmdemo.s    682 | Data        | 11 |         |    2 | 00/725E : 00 00       | XincDec          ds           2                    ; decimal part of Xinc
 2016 |  1 asmdemo.s    683 | Data        | 11 |         |    2 | 00/7260 : 00 00       | Xinc             ds           2                    ; incement in x direction for each line segment
 2017 |  1 asmdemo.s    684 | Data        | 11 |         |    2 | 00/7262 : 00 00       | YincDec          ds           2                    ; decimal part of Xinc
 2018 |  1 asmdemo.s    685 | Data        | 11 |         |    2 | 00/7264 : 00 00       | Yinc             ds           2                    ; incement in y direction for each line segment
 2019 |  1 asmdemo.s    686 | Empty       | 11 |         |    0 | 00/7266               |                                                    
 2020 |  1 asmdemo.s    687 | Data        | 11 |         | 2048 | 00/7266 : 00 00 00 00 | theopt           ds           2048                 ; strorage for displaced points
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
 2021 |  1 asmdemo.s    688 | Empty       | 11 |         |    0 | 00/7A66               |                                                    
 2022 |  1 asmdemo.s    689 | Data        | 11 |         |    2 | 00/7A66 : 00 00       | nbpt             ds           2                    ; number of points in a line (points split lines in segments)
 2023 |  1 asmdemo.s    690 | Data        | 11 |         |    2 | 00/7A68 : 00 00       | savnbpt          ds           2                    ; save nbpt
 2024 |  1 asmdemo.s    691 | Empty       | 11 |         |    0 | 00/7A6A               |                                                    
 2025 |  1 asmdemo.s    692 | Data        | 11 |         |    1 | 00/7A6A : 00          | shortLineflag    ds           1                    ; flag = 1 if : line is too short, it is not segmented
 2026 |  1 asmdemo.s    693 | Data        | 11 |         |    1 | 00/7A6B : 00          | VertFlag         ds           1                    ; flap = 1 if :line is more vertical than horizontal
 2027 |  1 asmdemo.s    694 | Empty       | 11 |         |    0 | 00/7A6C               |                                                    
 2028 |  1 asmdemo.s    695 | Comment     | 11 |         |    0 | 00/7A6C               | *****
 2029 |  1 asmdemo.s    696 | Data        | 11 |         |    4 | 00/7A6C : 19 00 0A 00 | Point1           dw           25,10                ; upper left corner
 2030 |  1 asmdemo.s    697 | Data        | 11 |         |    4 | 00/7A70 : F5 01 BE 00 | Point2           dw           501,190              ; bottom right corner
 2031 |  1 asmdemo.s    698 | Comment     | 11 |         |    0 | 00/7A74               | *****
 2032 |  1 asmdemo.s    699 | Empty       | 11 |         |    0 | 00/7A74               |                                                    
 2033 |  1 asmdemo.s    700 | Data        | 11 |         |    1 | 00/7A74 : 00          | xmov             ds           1                    ; value of x displacement
 2034 |  1 asmdemo.s    701 | Data        | 11 |         |    1 | 00/7A75 : 00          | ymov             ds           1                    ; value of y displacement
 2035 |  1 asmdemo.s    702 | Data        | 11 |         |    1 | 00/7A76 : 00          | xneg             ds           1                    ; sign of x displacement
 2036 |  1 asmdemo.s    703 | Data        | 11 |         |    1 | 00/7A77 : 00          | yneg             ds           1                    ; sign of y displacement
 2037 |  1 asmdemo.s    704 | Empty       | 11 |         |    0 | 00/7A78               |                                                    
 2038 |  1 asmdemo.s    705 | Comment     | 11 |         |    0 | 00/7A78               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 2039 |  1 asmdemo.s    706 | Comment     | 11 |         |    0 | 00/7A78               | ***** these parameters can be modified at run time (by appropriate keys)
 2040 |  1 asmdemo.s    707 | Data        | 11 |         |    1 | 00/7A78 : 03          | maxvar           dfb          3                    ; max value of displacements
 2041 |  1 asmdemo.s    708 | Data        | 11 |         |    2 | 00/7A79 : 08 00       | seglength        dw           8                    ; divisor of a line
 2042 |  1 asmdemo.s    709 | Data        | 11 |         |    2 | 00/7A7B : 02 01       | pensize2         dfb          2,1                  ; enlarge your pen
 2043 |  1 asmdemo.s    710 | Data        | 11 |         |    1 | 00/7A7D : 00          | Novariation      dfb          0                    ; flag = 1 : draw line without any variation (staight lines)
 2044 |  1 asmdemo.s    711 | Comment     | 11 |         |    0 | 00/7A7E               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 2045 |  1 asmdemo.s    712 | Empty       | 11 |         |    0 | 00/7A7E               |                                                    
 2046 |  1 asmdemo.s    713 | Data        | 11 |         |    1 | 00/7A7E : 04          | QuitParams       dfb          4                    ; parameters for ProDOS quit mli call
 2047 |  1 asmdemo.s    714 | Data        | 11 |         |    8 | 00/7A7F : 00 00 00 00 |                  dw           0,0,0,0              
      |                     |             |    |         |      |           00 00 00 00 |
 2048 |  1 asmdemo.s    715 | Empty       | 11 |         |    0 | 00/7A87               |                                                    
 2049 |  1 asmdemo.s    716 | Comment     | 11 |         |    0 | 00/7A87               | * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 2050 |  1 asmdemo.s    717 | Comment     | 11 |         |    0 | 00/7A87               | * Graphics Primtives vars.
 2051 |  1 asmdemo.s    718 | Comment     | 11 |         |    0 | 00/7A87               | *
 2052 |  1 asmdemo.s    719 | Data        | 11 |         |   36 | 00/7A87 : 00 00 00 00 | ScreenPort       ds           {{{{{{{{{{{0}+4}+2}+2}+8}+10}+4}+2}+1}+1}+2}; space for ScreenPort (= standard grafport = screen grafport)
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
 2053 |  1 asmdemo.s    720 | Empty       | 11 |         |    0 | 00/7AAB               |                                                    
 2054 |  1 asmdemo.s    721 | Data        | 11 |         |    9 | 00/7AAB : 00 00 00 00 | Black            dfb          0,0,0,0,0,0,0,0,0    ; black pattern
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00          |
 2055 |  1 asmdemo.s    722 | Data        | 11 |         |    8 | 00/7AB4 : FF FF FF FF | White            ds           8,$FF                ; white pattern
      |                     |             |    |         |      |           FF FF FF FF |
 2056 |  1 asmdemo.s    723 | Data        | 11 |         |    1 | 00/7ABC : 00          |                  dfb          0                    
 2057 |  1 asmdemo.s    724 | Empty       | 11 |         |    0 | 00/7ABD               |                                                    
 2058 |  1 asmdemo.s    725 | Data        | 11 |         |    1 | 00/7ABD : 05          | ModeNotOr        dfb          5                    
 2059 |  1 asmdemo.s    726 | Data        | 11 |         |    1 | 00/7ABE : 00          | ModeCopy         dfb          0                    
 2060 |  1 asmdemo.s    727 | Empty       | 11 |         |    0 | 00/7ABF               |                                                    
 2061 |  1 asmdemo.s    728 | Data        | 11 |         |    1 | 00/7ABF : 00          | DoNotSave        dfb          0                    
 2062 |  1 asmdemo.s    729 | Data        | 11 |         |    1 | 00/7AC0 : 80          | SaveZP           dfb          $80                  
 2063 |  1 asmdemo.s    730 | Empty       | 11 |         |    0 | 00/7AC1               |                                                    
 2064 |  1 asmdemo.s    731 | Data        | 11 |         |    2 | 00/7AC1 : 01 01       | pensize1         dfb          1,1                  ; standard pensize
 2065 |  1 asmdemo.s    732 | Empty       | 11 |         |    0 | 00/7AC3               |                                                    
 2066 |  1 asmdemo.s    733 | Empty       | 11 |         |    0 | 00/7AC3               |                                                    
 2067 |  1 asmdemo.s    734 | Empty       | 11 |         |    0 | 00/7AC3               |                                                    
------+---------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
